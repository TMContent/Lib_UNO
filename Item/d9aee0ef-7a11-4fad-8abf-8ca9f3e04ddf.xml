<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1694071182" Content_Hash="1194307469">
  <Metadata>
    <Id>d9aee0ef-7a11-4fad-8abf-8ca9f3e04ddf</Id>
    <Library_Id>e7d92b5b-e1d8-4039-b019-8b02594ea93a</Library_Id>
    <Title>Avoid Using Dangerous Functions</Title>
    <Category>APIs</Category>
    <Phase>Implementation</Phase>
    <Technology>Technology Independent</Technology>
    <Type>Guideline</Type>
    <DirectLink>Avoid Using Dangerous Functions</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h2>What to Do</h2>
  <p>Identify dangerous functions provided by your application's platform and avoid using them.</p>
  <h2>Why</h2>
  <p>Safety is critical when handling power tools. The programmer's toolbox is chock full of power tools, including library or API functions that make assumptions about how they will be used, with no guarantees of safety if they are abused. If potentially-dangerous
 functions are not used properly, then things can get real messy real quick.</p>
  <h2>How</h2>
  <p>Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the
<em>banned.h</em> include file from Microsoft's SDL.</p>
  <h2>Additional Resources</h2>
  <ul>
    <li>For more information about use of potentially dangerous function vulnerabilities, please see
<a href="http://cwe.mitre.org/top25/index.html#CWE-676">http://cwe.mitre.org/top25/index.html#CWE-676</a></li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>