<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-2034974744" Content_Hash="2125991700">
  <Metadata>
    <Id>9e9ef218-837d-400d-9098-88e2d0e9e169</Id>
    <Library_Id>e7d92b5b-e1d8-4039-b019-8b02594ea93a</Library_Id>
    <Title>Use a Managed Language</Title>
    <Category>Memory Management</Category>
    <Phase>Implementation</Phase>
    <Technology>Technology Independent</Technology>
    <Type>Principle</Type>
    <DirectLink>Use a Managed Language</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h2>What to Do</h2>
  <p>Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management, such as Java and Perl, are not subject to buffer overflows. Other
 languages, such as Ada and C#, typically provide overflow protection, but the protection can be disabled by the programmer. Be wary that a language's interface to native code may still be subject to overflows, even if the language itself is theoretically safe.</p>]]></Data>
  </Content>
</TeamMentor_Article>