<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="863621958" Content_Hash="650438737">
  <Metadata>
    <Id>29f061cf-9dfd-4eba-9c49-3d438bd42699</Id>
    <Id_History>70aa0034-8fb1-4692-aedd-1dd0879a0e4b,</Id_History>
    <Library_Id>e7d92b5b-e1d8-4039-b019-8b02594ea93a</Library_Id>
    <Title>Use Session Management Offered by the Framework</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology>Any</Technology>
    <Type>Guideline</Type>
    <DirectLink>Use Session Management Offered by the Framework</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h2>What to Do</h2>
  <p>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. With a stateless protocol such as HTTP, use a framework that maintains the state for you. Examples include ASP.NET
<em>View State</em> and the OWASP <em>ESAPI Session Management </em>feature. Be careful of language features that provide state support, since these might be provided as a convenience to the programmer and may not be considering security.</p>
  <h1>Why</h1>
  <p>The framework works on a lower level than the application and is therefore better suited to provide session management. Most mature web application frameworks offer secure session management functionality.</p>
  <h1>How</h1>
  <p>To use session management offered by the framework, please refer to the documentation for your chosen framework.
</p>]]></Data>
  </Content>
</TeamMentor_Article>