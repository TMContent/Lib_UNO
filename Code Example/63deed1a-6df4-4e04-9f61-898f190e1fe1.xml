<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1133760515" Content_Hash="-1317000625">
  <Metadata>
    <Id>63deed1a-6df4-4e04-9f61-898f190e1fe1</Id>
    <Id_History>63deed1a-6df4-4e04-9f61-898f190e1fe1,5d690172-965e-4f4d-86c0-1775a9ee64dc,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Struts1 Cross-Site Request Forgery (CSRF) Prevention</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Code Example</Type>
    <DirectLink>Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* JAVA
* Struts 1


## Summary ##

Perform CSRF prevention using Struts 1 within an application. CSRF prevention is a key security control for an application that protects the application and its users from CSRF attacks. 


## Solution Example ##

There is a standard model for CSRF prevention using Struts 1 that involves 3 basic steps

1. **Call saveToken().** In the action class/method that handles the setup for your form display (ex. EditBookAction), you need to call saveToken().

	~~~~
	public ActionForward execute(ActionMapping mapping,
	ActionForm form, HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		saveToken(request);
		....
	}
	~~~~

2. **Use html:form to create your form on your JSP (ex. editBook.jsp).**

	~~~~
	<html:form action="...">
	...
	</html:form>
	~~~~

3. **Check isTokenValid() and call resetToken().** In the action class/method that handles the saving of your form (ex. SaveBookAction), you need to call isTokenValid(). If the token is valid, then you need to call resetToken().

	~~~~
	public ActionForward execute(ActionMapping mapping,
	ActionForm form, HttpServletRequest request, HttpServletResponse response)
	throws Exception {
	...
		if ( !isTokenValid(request) ) {
			return mapping.findForward(Constants.INVALID_TOKEN);
		} else {
			...
	  //normal business logic
	 ...
	 resetToken(request);
		}
	...
	~~~~]]></Data>
  </Content>
</TeamMentor_Article>