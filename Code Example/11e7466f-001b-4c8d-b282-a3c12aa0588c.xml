<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1516869768" Content_Hash="-1248028296">
  <Metadata>
    <Id>11e7466f-001b-4c8d-b282-a3c12aa0588c</Id>
    <Id_History>11e7466f-001b-4c8d-b282-a3c12aa0588c,46b64320-ac57-42e9-ad8f-e6c2e67fd08f,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Java Use ESAPI Randomizer</Title>
    <Category>Cryptography</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Code Example</Type>
    <DirectLink>Use ESAPI Randomizer</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* Java


## Summary ##

Use the Randomizer control from the ESAPI library in order to produce random resources in a secure manner.


## Solution Example ##

Generating random strings:

~~~~
char[] characters = ...;
String randomStr = ESAPI.randomizer().getRandomString(15, characters);
~~~~

Generating random integers:

~~~~
int min = ...;
int max = ...;
int randomInt = ESAPI.randomizer().getRandomInteger(min, max);
~~~~ 
 
Generating a random GUID (globally unique identifier):

~~~~
String guid = ESAPI.randomizer().getRandomGUID();
~~~~
]]></Data>
  </Content>
</TeamMentor_Article>