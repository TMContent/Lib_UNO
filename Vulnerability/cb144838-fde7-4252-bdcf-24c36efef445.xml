<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="2046194170" Content_Hash="1075014396">
  <Metadata>
    <Id>cb144838-fde7-4252-bdcf-24c36efef445</Id>
    <Id_History>b8c8bf1b-8ae0-44c3-a672-99e1ba47f25a,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Repudiation Vulnerability</Title>
    <Category>Auditing and Logging</Category>
    <Phase>Test</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Repudiation Vulnerability</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies To</h1>
  <p>
  </p>
  <ul>
    <li>Multi-user applications which allow users to perform actions on shared resources</li>
  </ul>
  <p />
  <h1>Impact</h1>
  <ul>
    <li>Actions, possibly malicious, by an authorized user that can not be traced back to a particular user </li>
    <li>Increased insider threat</li>
  </ul>
  <h1>Underlying Fault</h1>
  <ul>
    <li>Anonymous access enabled </li>
    <li>Application using a role-based authorization model </li>
    <li>Ineffective or lacking logging controls </li>
    <li>Unprotected logs</li>
  </ul>
  <a name="Countermeasures">
  </a>
  <h1>Description</h1>
  <p>The issue of repudiation is concerned with a user denying that he or she performed an action or initiated a transaction. You need defense mechanisms in place to ensure that all user activity can be tracked and recorded. These mechanisms are a key to defending against the insider threat problem.</p>
  <h1>Countermeasures</h1>
  <ul>
    <li>Determine what actions in the system require protection against repudiation. Consider creating a threat model to help with this process. </li>
    <li>Disable anonymous access and authenticate every principle. </li>
    <li>Consider using a more granular authorization model in order to produce precise logs at all tiers. </li>
    <li>Log actions to identify the user's identity, the action performed, the time, and the component or interface involved (who, what where, when) while not capturing any sensitive data in logs (e.g., SSN, CC's, passwords, etc.). </li>
    <li>Enable logging to an object with append-only permissions from the application. </li>
    <li>Ensure that logs can be easily correlated across the application if multiple layers or logs are involved, and consider performing the correlation automatically for larger applications. </li>
    <li>Ensure that logs are kept at all relevant levels in the application for sensitive operations. </li>
    <li>Establish a policy to review logs for anomalies.</li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>