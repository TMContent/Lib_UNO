<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="358883384" Content_Hash="1907402930">
  <Metadata>
    <Id>4a658636-e20b-41a7-ba7d-1ffb1b9d5cb5</Id>
    <Id_History>45ed13cc-746e-4891-aee1-282f543a5815,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Exception Information Disclosure Vulnerability</Title>
    <Category>Error Handling</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Exception Information Disclosure Vulnerability</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies To</h1>
  <p>
  </p>
  <ul>
    <li>All applications</li>
  </ul>
  <p />
  <h1>Impact</h1>
  <ul>
    <li>Disclosure of information about the internal functionality and resources of an application. </li>
    <li>Could lead to more serious attacks by the attacker.</li>
  </ul>
  <h1>Underlying Fault</h1>
  <ul>
    <li>Providing information returned by error exceptions to the user.</li>
  </ul>
  <h1>Description</h1>
  <p>Attackers can use application error information to improve their ability to attack the application.</p>
  <p>Almost all methods calls in computer programs, provide some feedback to the calling method about the status of the operation. This feedback could be a function return value, an exception which was thrown by the called method, or an error string. Based on this feedback, an applications decides if it should tell the user about a significant result (usually success or failure). When an error occurs, some applications choose to echo the internal error messages to the user. Though this feature is helpful in debugging a problem, it could lead to an information disclosure issue. An attacker could use this technical information to gain a better understanding about the back-end processing of the product and craft more malicious attacks against it.</p>
  <h1>Countermeasures</h1>
  <ul>
    <li>
      <strong>Use generic error messages</strong>: Internal error messages should never be displayed to the user. Instead, for each error or a class of errors, generic error messages should be written and displayed to the user. These error messages should appropriately inform the user about a problem, but not divulge any extra information that could be used by an attacker. </li>
    <li>
      <strong>Handle all exceptions</strong>: General purpose exception handlers should be used to catch any exceptions which a developer may have overlooked.</li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>