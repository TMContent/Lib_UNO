<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1789690440" Content_Hash="-1975763084">
  <Metadata>
    <Id>8496c184-6403-4f73-9fd5-97caddfabd24</Id>
    <Id_History>6ab2e6e2-2416-4bf9-b28c-e78e4af42930,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Credential Dictionary Vulnerability</Title>
    <Category>Authentication</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Credential Dictionary Vulnerability</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies To</h1>
  <p>
  </p>
  <ul>
    <li>Any application that uses authentication</li>
  </ul>
  <p />
  <h1>Impact</h1>
  <ul>
    <li>Credential compromise </li>
  </ul>
  <h1>Underlying Fault</h1>
  <ul>
    <li>Weak password policy</li>
  </ul>
  <h1>Description</h1>
  <p>A dictionary attack is a technique for defeating weak authentication credentials using a precompiled list of common usernames and passwords. It relies on the fact that users tend to use weak passwords that can be easily remembered. Although similar to Brute-Force Attack, this technique performs faster as it exhausts only the common possibilities. The input set in a Dictionary Attack is limited only to words that could be derived from a dictionary; therefore the name of the attack.</p>
  <p>If the attacker has a large amount of time available and the application is not denying login attempts after a certain number of attempts the attacker may script login attempts using large lists of usernames and passwords. Username lists and common password lists are freely available from many websites.</p>
  <h1>Countermeasures</h1>
  <ul>
    <li>
      <p>
        <strong>Enforce strong passwords</strong>: Applications should enforce strong passwords that would require users to construct their passwords using a larger input set. An example for stronger password requirements is:</p>
      <ul>
        <li>At least 8 characters long. </li>
        <li>Contains lower case letters, upper case letters, and numbers. </li>
        <li>The password is regularly changed by the user, eg. once every 3 months.</li>
      </ul>
    </li>
  </ul>
  <ul>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>