<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="402427995" Content_Hash="-1870347480">
  <Metadata>
    <Id>c874fc90-85b6-4d43-a332-5698a02feb90</Id>
    <Id_History>bd47b75e-1264-4ab1-995e-fe412dd75a1c,</Id_History>
    <Library_Id>c037d0d2-0617-44f3-b846-21dc3d02c4f8</Library_Id>
    <Title>HTTP Replay Attack</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Attack</Type>
    <DirectLink>HTTP Replay Attack</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <br />
  <h1>Applies To</h1>
  <p>Any web application.</p>
  <h1>Description</h1>
  <p>In an HTTP Replay attack, the attacker first performs <a href="/article/e8e59763-979d-4d43-853c-f1852332cb22">Network Eavesdropping Attack</a> on the communication between a client and a server. The captured packets can then be sent by the attacker to the host in an attempt to impersonate the user that caused the original request. The attacker may have to modify certain characteristics of the replayed messages in order to trick the server into believing that the message originated from the original user.</p>
  <p>The <a href="/article/73c29051-2538-44b4-89ac-16932ca4adf7">HTTP Session Hijacking Attack</a> is a specific type of a HTTP Replay Attack where the attacker attempts to impersonate the client by replaying the client session identifier.</p>
  <h1>Impact</h1>
  <ul>
    <li>Authentication Spoofing <li>Client Impersonation</li></li>
  </ul>
  <h1>Vulnerabilities</h1>
  <p>If the server does not employ any secure means to verify the origin of received messages, then the server will be vulnerable to these attacks. Even if the server employs methods to verify the identity of the client sending the messages, but the verification is based on information in the messages that can be spoofed by an attacker, the server will be vulnerable to this attack. Some of the main causes are: </p>
  <ul>
    <li>
      <strong>Unprotected Sessions.</strong> An attacker may be able to impersonate the session of another user because of any of the following reasons: <ul><li>Reuse of session IDs <li>Long or infinite session timeouts <li>Poor or predictable session identifiers </li></li></li></ul><li><strong>Insecure communication channel.</strong> If the channel of communication is secured using encryption, then the attacker will find it extremely difficult to conduct this attack.</li></li>
  </ul>
  <h1>Countermeasures</h1>
  <ul>
    <li>Use sessions securely. Please see <a href="/article/73c29051-2538-44b4-89ac-16932ca4adf7">HTTP Session Hijacking Attack</a> for more information. <li>Utilize SSL or IPSec with encryption to establish a secure communication channel. <li>Consider Timestamping. To learn more about this please see the <a href="http://en.wikipedia.org/wiki/Timestamp">Wikiepedia Timestamp</a> article.</li></li></li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>To learn more about hijacking mechanics and attack prevention see: <a href="http://www.microsoft.com/technet/technetmag/issues/2005/01/SessionHijacking/">Theft on the Web: Prevent Session Hijacking</a></li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/e8e59763-979d-4d43-853c-f1852332cb22">Attack: Network Eavesdropping Attack</a>
      <li>
        <a href="/article/73c29051-2538-44b4-89ac-16932ca4adf7">Attack: HTTP Session Hijacking Attack</a>
        <li>
          <a href="/article/d5ea5036-2532-4299-b2ee-8ba6fb768951">Attack: Session Prediction Attack</a>
          <li>
            <a href="/article/d0cf18ae-17da-489d-8f77-9ba99bbd669f">Attack: Network Credential Sniffing Attack</a>
            <li>
              <a href="/article/364025fb-4c27-49f7-92d8-c15b55766285">Attack: Cross Site Scripting Attack</a>
              <li>
                <a href="/article/e259e17a-a8f9-497a-823e-08dafdfdf7cf">Attack: Man in the Middle Attack</a>
                <li>
                  <a href="/article/740a1606-d091-4a93-bfd8-f0d4226adbf1">Guideline: Force Re-Authentication When Executing Critical Functionality </a>
                  <li>
                    <a href="/article/b070122f-f1d1-47da-a378-57f845d5db61">Guideline: Encrypt Communication Links </a>
                    <li>
                      <a href="/article/254ddab5-ecd2-4e05-a2b0-861e970bc0d9">Guideline: Protect Session Cookies </a>
                      <li>
                        <a href="/article/8e0aea9c-322b-4b3f-9c61-a670c1fcd3e3">Guideline: Use Page.ViewStateUserKey to Counter Cross Site Request Forgery Attacks </a>
                      </li>
                    </li>
                  </li>
                </li>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>