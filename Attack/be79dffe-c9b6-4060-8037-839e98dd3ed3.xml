<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1745577046" Content_Hash="1136862825">
  <Metadata>
    <Id>be79dffe-c9b6-4060-8037-839e98dd3ed3</Id>
    <Id_History>e259e17a-a8f9-497a-823e-08dafdfdf7cf,</Id_History>
    <Library_Id>c037d0d2-0617-44f3-b846-21dc3d02c4f8</Library_Id>
    <Title>Man in the Middle Attack</Title>
    <Category>Communication Security</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Attack</Type>
    <DirectLink>Man in the Middle Attack</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <br />
  <h1>Applies To</h1>
  <p>Any two applications which communicate over any networked channel, such as the internet.</p>
  <h1>Description</h1>
  <p>A Man in the Middle (MiTM) Attack occurs when an attacker intercepts messages sent between two parties without their knowledge. The attacker is usually capable of reading, inserting and modifying the messages it intercepts. MiTM attacks can be carried out on various protocols and against various technologies to intercept and modify data being exchanged between two parties in such a way that the attacker compromises the confidentiality, integrity and/or availability of protected information. Any network request involving client-server communication (including web requests, Distributed Component Object Model (DCOM) requests, and calls to remote components and Web services) is subject to man in the middle attacks. MiTM attacks can be used to attack unencrypted channels as well as encrypted channels (such as SSL) under certain circumstances.</p>
  <h1>Impact</h1>
  <ul>
    <li>
      <strong>Loss of confidentiality:</strong> The attacker will be able to view potentially sensitive information by sitting in between the server and the client. <li><strong>Loss of integrity:</strong> The attacker will be able to change the data being sent to or from the server. <li><strong>Loss of availability:</strong> If the attacker can send unexpected data to a host and cause it to crash, then it could lead to a denial of service on the affected host. <li><strong>Alteration of Keys:</strong> Modification of public keys during key exchanges between two parties.</li></li></li></li>
  </ul>
  <h1>Vulnerabilities</h1>
  <ul>
    <li>
      <strong>Network vulnerabilities:</strong> A man in the middle attack is usually carried out by means of one of the following: <ul><li><a href="/article/9ceb60ab-dc0a-47c1-ac60-3d1a9bef854a">ARP Spoofing Attack</a><li>DNS hijacking or <a href="/article/3b11ae62-7981-45f9-afbd-59e792c3a141">DNS Cache Poisoning</a><li>DHCP message subversion/take-over <li><a href="/article/a4eca46a-b863-4e52-97cb-53d96829362d">Wireless Packet Injection Attack</a><li>Gateway takeover using various packet redirects <li>Subversion of a gateway, router, or proxy between the victim and the server.</li></li></li></li></li></li></ul></li>
  </ul>
  <p>In addition to these network vulnerabilities, MiTM attacks become much easier to conduct if unencrypted or weakly encrypted communication channels are being used.</p>
  <h1>Countermeasures</h1>
  <p>Since the network weaknesses described above cannot be controlled for all potential users, it is recommended that cryptographic suites be used. Below are some examples at different layers:</p>
  <ul>
    <li>At the network layer: IPSec <li>At the application layer: SSLv3, TLS, PGP</li></li>
  </ul>
  <p>Use of these suites requires careful consideration of the key length and key store. Correct ways of doing so are provided in the Related Items section of this article.</p>
  <h1>Example</h1>
  <p>A few examples are described below to demonstrate the various types of problems that can be caused using MiTM attacks:</p>
  <ul>
    <li>
      <strong>Code or Command Injection: </strong>Malicious code could be inserted into web-pages or email which would be executed on the client application. <li><strong>Key exchange: </strong>Public keys exchanged by the server and the client could be modified and replaced with the attackers public key. The attacker would then be able to read and modify traffic to and from both entities. <li><strong>Parameter substitution: </strong>Parameters to applications running on the client or the server could be modified by the attacker to alter the behavior of an application. A common attack here is to substitute the SSL version supported by the server. By forcing the client and server to negotiate on a weaker version of SSL, an attacker can easily compromise the confidentiality of the data. <li><strong>IPSec Failure: </strong>By blocking the key material exchange on UDP port 500 the end point will think that the other cannot start an IPSec connection. Worse, if the client is configured in rollback mode, there is a good chance that the user will not notice that the connection is in clear text </li></li></li></li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>
      <a href="http://www.blackhat.com/presentations/bh-europe-03/bh-europe-03-valleri.pdf">Understanding Man-in-the-Middle Attacks</a>
    </li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/bd63d4b0-205d-4d95-9022-86a3f0af5232">Guideline: Use SSL When Transmitting Credentials </a>
      <li>
        <a href="/article/9ceb60ab-dc0a-47c1-ac60-3d1a9bef854a">Attack: ARP Spoofing Attack</a>
        <li>
          <a href="/article/3b11ae62-7981-45f9-afbd-59e792c3a141">Attack: DNS Cache Poisoning</a>
          <li>
            <a href="/article/a4eca46a-b863-4e52-97cb-53d96829362d">Attack: Wireless Packet Injection Attack</a>
          </li>
        </li>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>