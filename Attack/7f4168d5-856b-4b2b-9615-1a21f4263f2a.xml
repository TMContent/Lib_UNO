<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1863051786" Content_Hash="-587486448">
  <Metadata>
    <Id>7f4168d5-856b-4b2b-9615-1a21f4263f2a</Id>
    <Id_History>829b7182-7cf9-48b9-a25e-3a02f0685f49,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Information Disclosure Attack</Title>
    <Category>Sensitive Data</Category>
    <Phase>Implementation</Phase>
    <Technology> Any</Technology>
    <Type>Attack</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <br />
  <h1>Applies To</h1>
  <p>Any application that restricts access to certain types of information, including configuration and deployment details.</p>
  <h1>Description</h1>
  <p>An Information Disclosure attack results in an application revealing sensitive information to the attacker. Examples of sensitive information include system specific data such as overly descriptive error messages, source code, software distribution and version numbers, database information, passwords, machine names and file paths to other sensitive areas.</p>
  <p>For web applications there are several methods that can be used by an attacker to get more information from the application, such as directory indexing, path traversal, reading source code or error messages and comments left behind by developers, etc. </p>
  <p>If the attacker can gain access to the binaries of the application (in the case of an installed client application), or through forceful browsing or other attacks (for a server application), the information disclosure attack surface becomes much larger. In this case the attacker can employ debuggers, decompilers, hex editors and other tools to search for secrets left in the application. </p>
  <p>SQL injection, whether in a web application or installed client application, can also be considered a type of information disclosure attack because it can be used to access sensitive information that is stored in a database, as can other similar query-based attacks.</p>
  <h1>Impact</h1>
  <ul>
    <li>
      <strong>Confidentiality</strong>: An attacker gains access to sensitive information which may be used to launch further exploits against the application, or which may be of direct value (sensitive user information such as passwords or social security numbers, for instance) <li><strong>Authentication</strong>: Through an error message that reveals too much information or a SQL injection exploit, an attacker may be able to figure out another user's ID and password, and log in as that user. </li></li>
  </ul>
  <h1>Vulnerabilities</h1>
  <ul>
    <li>
      <strong>Improper permissions: </strong>Through forceful browsing an attacker may be able to discover sensitive information that should not be available such as source code, binaries, backup files, etc. <li><strong>Directory indexing left on: </strong>This can allow an attacker to freely browse an entire directory on a website which can tell an attacker all available files on the server. <li><strong>Storing sensitive data in plaintext:</strong> Storing sensitive data in plain or weakly encoded text can lead to an attacker discovering username/password pairs, cryptography keys, or other sensitive data <li><strong>Detailed error messages:</strong> Propagating SQL errors, exception handler errors or stack traces do not help users solve a problem but can drastically reduce the amount of time it takes an attacker to exploit a system. <li><strong>Comments left in code:</strong> The client downloads and has access to all client side code. Any comments left in HTML, AJAX, or other script can easily be discovered. <li><strong>Hard coded usernames and passwords:</strong> Opening an application in a hex editor will show any hard coded strings in the application, this can lead an attacker directly to hard coded credentials <li><strong>Running with more privilege than is needed:</strong> This can allow an attacker to gain access to information on the server that should not be available. Permissions should be limited for all users including: SQL, Web Service, Web Application, etc.</li></li></li></li></li></li></li>
  </ul>
  <h1>Countermeasures</h1>
  <ul>
    <li>
      <strong>Use language specific comments:</strong> These comments will be automatically removed by the parsing or compiling engine and are not visible client side. Note: be careful with comments that are similar to HTML comments such as ColdFusion comments ( &lt;&amp;#33;--- comment ---&gt; ). <li><strong>Use proper permissions:</strong> Restrict access to files and directories on the server, so users cannot access any file they want using directory/path traversal. <li><strong>Use strong encryption algorithms:</strong> whenever sensitive data is stored ensure that it is properly protected using strong encryption <li><strong>Use least privilege:</strong> Ensure that your application uses the principle of least privilege if it uses a backend database server. <li><strong>Use terse error messages:</strong> Be sure to only use short, generic error messages that don't reveal any sensitive information and never directly display error messages returned by a back-end database or other system. <li><strong>Use the principle of open design:</strong> When designing an application, assume the attacker has access to all information; bake security into your application so even with this information no further attacks are possible</li></li></li></li></li></li>
  </ul>
  <h1>Example</h1>
  <p>
    <strong>Directory indexing</strong>: The HTTP request 'GET /&lt;null byte&gt;.jsp HTTP/1.0' allows an attacker to view the directory and file listing due to improper handling of null bytes </p>
  <p>
    <strong>Directory traversal</strong>: The URL http://www.example.com/../restricted-file.cgi allows an attacker to access the file 'restricted-file.cgi' which lies outside the web document root directory </p>
  <p>
    <strong>Directory traversal with encoded characters</strong>: The URL http://www.example.com/..&amp;#37;255c..&amp;#37;255c/restricted-file.cgi is similar to the one above, but the '/' characters are double encoded to bypass security filters</p>
  <p>
    <strong>Examples of too much information in error messages:</strong>
  </p>
  <ul>
    <li>Invalid password for user: test <li>User test does not exist in this system <li>Unclosed &amp;#8216; character near &amp;#8216;); <li>Any error message that reflects internal component exceptions such as SQL, internal libraries, SSL, encryption, etc.</li></li></li></li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>To learn more about Information Disclosure attacks, see <a href="http://www.webappsec.org/projects/threat/classes_of_attack.shtml">http://www.webappsec.org/projects/threat/classes_of_attack.shtml</a></li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/08f2f28f-d09a-4b82-843e-8d971fc50553">Guideline: Do Not Disclose Valuable Information in Error Messages </a>
      <li>
        <a href="/article/74be8616-ad22-4d1d-a7fc-8ff3d145fc61">Guideline: Do Not Disclose Exception Details to the Client </a>
        <li>
          <a href="/article/fd2576b2-a7b1-4ddd-bb1b-c51cd4addce3">Attack: Xpath-XQuery Attack</a>
          <li>
            <a href="/article/adf5df06-2b67-4e2a-ace2-6d7060e0bd95">Attack: Server-Side Code Injection Attack</a>
            <li>
              <a href="/article/48f75f8f-8866-4291-9eb6-acf2fce52c7b">Attack: Account Lockout Attack</a>
              <li>
                <a href="/article/7df0582c-84a2-4f79-bb7b-6755e93b1591">Attack: XML Injection Attack</a>
                <li>
                  <a href="/article/2d0d3540-bc16-4c39-99f2-1c50659f67f1">Attack: Local Machine Credential Sniffing Attack</a>
                  <li>
                    <a href="/article/b2fca0ae-789d-4bcc-afcc-5e4f5f20f0dd">Attack: Traffic Analysis Attack</a>
                    <li>
                      <a href="/article/d4b48303-d535-4549-90fc-474b99eff901">Attack: SQL Injection Attack</a>
                      <li>
                        <a href="/article/5872223d-8763-4a4e-a135-fb0f336d55c5">Attack: Exception Information Disclosure Attack</a>
                        <li>
                          <a href="/article/0054c741-8668-49df-a3f2-815e3fb82f79">Attack: Network Credential Sniffing Attack</a>
                          <li>
                            <a href="/article/4162fafb-2975-4398-b895-672158f310c5">Attack: Network Eavesdropping Attack</a>
                            <li>
                              <a href="/article/e522e1bd-203d-47c4-b0bf-71623717ca45">Attack: Sniff Memory for Secrets Attack</a>
                              <li>
                                <a href="/article/fc4d46e1-3539-45b4-aaed-9a783a47cb6e">Attack: Statistical Analysis Attack</a>
                                <li>
                                  <a href="/article/ae6ced31-72dd-4f10-8dbd-17bd39c2902f">Attack: Timing Analysis Attack</a>
                                  <li>
                                    <a href="/article/8049f087-514e-4f31-b587-c83f466547d3">Attack: Cross Site Scripting Attack</a>
                                    <li>
                                      <a href="/article/2422aa60-704b-4335-8a6e-3c6061784920">Attack: Canonicalization Attack</a>
                                      <li>
                                        <a href="/article/e706145e-6465-4261-96af-a66d6a19a637">Guideline: Do Not Include Debug Data in Output </a>
                                        <li>
                                          <a href="/article/8e94fa5f-0326-44a1-89e0-2406a7118bef">Guideline: Block Protected Files From Being Retrieved </a>
                                          <li>
                                            <a href="/article/a96eaddb-5fb2-458e-b5ca-fde05a9a3a06">Guideline: Do Not Place Sensitive Data in Parameters </a>
                                            <li>
                                              <a href="/article/e1992e93-39c6-4508-9b16-0e07b0939c37">Guideline: Secure Connection Strings </a>
                                              <li>
                                                <a href="/article/0256b587-e8b1-46e0-8b87-f62b9f816c45">Guideline: Protect Log Files </a>
                                                <li>
                                                  <a href="/article/2c48bbd6-2677-4ab0-80df-57985b90bee4">Guideline: Protect ASP.NET Session State </a>
                                                  <li>
                                                    <a href="/article/b070122f-f1d1-47da-a378-57f845d5db61">Guideline: Encrypt Communication Links </a>
                                                    <li>
                                                      <a href="/article/bd63d4b0-205d-4d95-9022-86a3f0af5232">Guideline: Use SSL When Transmitting Credentials </a>
                                                      <li>
                                                        <a href="/article/a1772b90-a0ec-4d98-b9a3-aa2b87f56c86">Guideline: Encrypt Sensitive Data in the Database </a>
                                                        <li>
                                                          <a href="/article/c6f3e32d-57b8-44cf-818a-c346d0014c06">Guideline: Do Not Store Plaintext Sensitive Data </a>
                                                          <li>
                                                            <a href="/article/4f1a83a8-795e-4358-894e-606611f6c609">Guideline: Protect Sensitive Data Over the Network </a>
                                                            <li>
                                                              <a href="/article/faada3f5-3f50-42fc-b863-5058e3d848cb">Guideline: Protect Sensitive Data Inside Configuration Files </a>
                                                            </li>
                                                          </li>
                                                        </li>
                                                      </li>
                                                    </li>
                                                  </li>
                                                </li>
                                              </li>
                                            </li>
                                          </li>
                                        </li>
                                      </li>
                                    </li>
                                  </li>
                                </li>
                              </li>
                            </li>
                          </li>
                        </li>
                      </li>
                    </li>
                  </li>
                </li>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>