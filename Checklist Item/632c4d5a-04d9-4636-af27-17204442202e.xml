<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-2001662318" Content_Hash="-838807999">
  <Metadata>
    <Id>632c4d5a-04d9-4636-af27-17204442202e</Id>
    <Id_History>632c4d5a-04d9-4636-af27-17204442202e,38c4e249-13e3-4654-95bb-dfd75022a6a2,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>[EXPANDME] Server-side Authentication Is Used</Title>
    <Category>Authentication</Category>
    <Phase>Design</Phase>
    <Technology>PHP</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Server-side Authentication Is Used</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>PHP</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that authentication controls are implemented on the server, rather than in client-side code.</p>
  <h1>Why</h1>
  <p>Server-side authentication should be used, because client-side authentication is easy to bypass.</p>
  <h1>How to Check</h1>
  <p>To verify that server-side authentication is used:</p>
  <ol>
    <li>
      <p>
        <strong>Identify authentication controls.</strong> Find code that is responsible for authentication.</p>
    </li>
    <li>
      <p>
        <strong>Verify that authentication controls are implemented on the server.</strong> Review authentication code to make sure that authentication is performed on the server.</p>
    </li>
  </ol>
  <h1>How to Fix</h1>
  <p>Most PHP developers write their own authentication functions. The typical solution is to use MySQL to store password hashes in a table, but there are other options. The important part is performing authentication on the server.</p>
  <br />]]></Data>
  </Content>
</TeamMentor_Article>