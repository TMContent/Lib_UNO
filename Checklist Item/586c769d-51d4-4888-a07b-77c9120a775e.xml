<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="155921078" Content_Hash="417303601">
  <Metadata>
    <Id>586c769d-51d4-4888-a07b-77c9120a775e</Id>
    <Id_History>586c769d-51d4-4888-a07b-77c9120a775e,a8c8528d-3480-4850-a149-9c647f77f6ce,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Unusual Activity Is Logged</Title>
    <Category>Auditing and Logging</Category>
    <Phase>Design</Phase>
    <Technology>All</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Unusual Activity Is Logged</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Check For</h1>
  <p>Verify that unusual activity is logged.</p>
  <h1>Why</h1>
  <p>Unusual activity may be an indication that an attack is in progress.</p>
  <h1>How to Check</h1>
  <p>Use the following steps to verify that unusual activity is logged:</p>
  <ol>
    <li>
      <p>
        <strong>Define unusual activity. </strong>Make a list of events that constitute unusual activity. Some examples are: </p>
      <ul>
        <li>Repeated failed authentication attempts<li>Invalid logical access attempts<li>Failed password reset attempts<li>Suspicious financial transactions<li>Unauthorized data access<li>Suspicious database queries that may indicate SQL injection attempts</li></li></li></li></li></li>
      </ul>
      <li>
        <p>
          <strong>Identify relevant code. </strong>Use the list of unusual activity indicators to find code that implements the functionality for each unusual activity. Make a list of functions that implement the related functionality. One common area for detecting suspicious activity is authentication code. Combine this list with the list from Step 1.</p>
        <li>
          <p>
            <strong>Examine code.</strong> Verify that for each possible suspicious activity code exists that generates log entries by examining all functions related to each suspicious activity.</p>
        </li>
      </li>
    </li>
  </ol>
  <h1>How to Fix</h1>
  <p>Perform the following actions to implement logging of unusual activity:</p>
  <ol>
    <li>
      <p>
        <strong>Define unusual activity.</strong> Make a list of events that constitute unusual activity. Some examples are: </p>
      <ul>
        <li>Repeated failed authentication attempts<li>Invalid logical access attempts<li>Failed password reset attempts<li>Suspicious financial transactions<li>Unauthorized data access<li>Suspicious database queries that may indicate SQL injection attempts</li></li></li></li></li></li>
      </ul>
      <li>
        <p>
          <strong>Identify relevant code.</strong> Use the list of unusual activity indicators to find code that implements the functionality for each unusual activity. Make a list of functions that implement the related functionality. One common area for detecting suspicious activity is authentication code.</p>
        <li>
          <p>
            <strong>Identify the logging subsystem.</strong> The logging subsystem should provide an API that allows generating log entries from application code. If this API or the logging subsystems don't exist, write them. Make a list of functions that may be used to generate log entries and collect documentation about how to use them.</p>
          <li>
            <p>
              <strong>Log unusual activity.</strong> Use the list of functions that are related to suspicious events from step 2 to add code that generates log entries when suspicious activity occurs. Use the list of logging APIs from step 3 to write code that generates log entries.</p>
          </li>
        </li>
      </li>
    </li>
  </ol>]]></Data>
  </Content>
</TeamMentor_Article>