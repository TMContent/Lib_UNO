<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1703436365" Content_Hash="-1001610760">
  <Metadata>
    <Id>c9536d0e-52d2-41f2-84a8-95b53f5c7501</Id>
    <Id_History>c9536d0e-52d2-41f2-84a8-95b53f5c7501,58fcb970-5be3-40b3-97c7-28658e4c052a,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>File Format Is Validated Before Use</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Design</Phase>
    <Technology>C++</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>File Format Is Validated Before Use</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>C&amp;#43;&amp;#43;</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that input data files are validated before use.</p>
  <h1>Why</h1>
  <p>Maliciously formed data files may be used to exploit vulnerabilities.</p>
  <h1>How to Check</h1>
  <p>Identify the functions that open data files. Verify that these functions include provisions for validating the input data file format before passing it on to other functions.</p>
  <h1>How to Fix</h1>
  <p>Identify the functions that open data files. Add code that validates the input data file format before passing it on to other functions. It is recommended to write a separate class or library to include the data file validation routines - this makes it simpler to manage them.</p>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/cc81757b-6da5-4463-92f9-d27f680ad6c7">Centralize Input Validation</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>