<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="365613312" Content_Hash="191027913">
  <Metadata>
    <Id>9b373bd4-ab5e-47da-95ff-649fb085b41b</Id>
    <Id_History>9b373bd4-ab5e-47da-95ff-649fb085b41b,4f7aa74e-7d9d-4868-a02f-4382d2fe23f6,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>Pointers Are Set to Null After Deallocation</Title>
    <Category>Unmanaged Code</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Pointers Are Set to Null After Deallocation</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>C&amp;#43;&amp;#43;</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that pointers are set to null after the objects they point to have been deleted or deallocated.</p>
  <h1>Why</h1>
  <p>Deallocating or deleting objects without setting the values of corresponding pointers to null may result in dangling pointer vulnerabilities, if those pointers are later used again.</p>
  <h1>How to Check</h1>
  <p>Identify all functions that deallocate or delete objects. Verify that the corresponding pointers are set to null after the objects are deleted or deallocated.</p>
  <h1>How to Fix</h1>
  <p>Search for calls to the free() function or the delete operator(). Add code that sets the freed pointer to null after each call to the free() function or the delete operator.</p>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information about dangling pointer vulnerabilities, please see <a href="http://en.wikipedia.org/wiki/Dangling_pointer">http://en.wikipedia.org/wiki/Dangling_pointer</a></li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/c9531639-70a5-49e6-8347-22924d76a42b">Set Pointers to Null after Deallocation to Prevent Dangling Pointers</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>