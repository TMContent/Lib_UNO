<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1356150919" Content_Hash="288997498">
  <Metadata>
    <Id>955dc4c5-b0bb-4d0c-a88d-0b046d997c12</Id>
    <Id_History>696ff103-4793-4198-9322-aa7b275a04dc,</Id_History>
    <Library_Id>c037d0d2-0617-44f3-b846-21dc3d02c4f8</Library_Id>
    <Title>Strong Password Requirements Are Enforced</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>PHP</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Strong Password Requirements Are Enforced</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>PHP</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that strong password requirements are enforced.</p>
  <h1>Why</h1>
  <p>Requiring strong passwords prevents weak passwords from being used. Using strong passwords makes the application more resilient to password guessing attacks.</p>
  <h1>How to Check</h1>
  <p>To verify that strong password requirements are enforced:</p>
  <ol>
    <li>
      <p>
        <strong>Identify application requirements.</strong> Determine whether your application needs to have a customizable password complexity policy or if it's okay to hard-code password complexity requirements. Define secure defaults for password complexity options.</p>
    </li>
    <li>
      <p>
        <strong>Identify password changing code. </strong>Review your application to find code that is responsible for changing user passwords.</p>
    </li>
    <li>
      <p>
        <strong>Verify that password length is validated.</strong> Verify that password changing code checks the user-supplied password against defined minimum and maximum allowed password lengths.</p>
    </li>
    <li>
      <p>
        <strong>Verify that password complexity is validated.</strong> Verify that password changing code checks the user-supplied password to make sure it includes lower-case characters, capital letters, numbers, and special characters to match application requirements.</p>
    </li>
  </ol>
  <h1>How to Fix</h1>
  <p>To enforce strong password requirements:</p>
  <ol>
    <li>
      <p>
        <strong>Identify application requirements.</strong> Determine whether your application needs to have a customizable password complexity policy or if it's okay to hard-code password complexity requirements. Define secure defaults for password complexity options.</p>
    </li>
    <li>
      <p>
        <strong>Identify password changing code.</strong> Review your application to find code that is responsible for changing user passwords.</p>
    </li>
    <li>
      <p>
        <strong>(Optional) Let the user enter the password twice.</strong> It is a common practice to allow the user to enter the password twice to make sure that the user enters the new password correctly. This is important because the password fields are typically masked, so the user cannot see his input, and changing the password to an unintended one may leave the user locked out of his account. If this is implemented in your application, the password changing code should validate the two entered passwords to make sure they match.</p>
    </li>
    <li>
      <p>
        <strong>Check password length.</strong> Add code to the password changing function to check the password length for minimum and maximum limits defined by policy. For example:</p>
      <pre>if(strlen($password) &lt; 8)<br />{<br />&amp;nbsp;//password is too short<br />}<p /><p>if(strlen($password) &gt; 20)<br />{<br />&amp;nbsp;//password is too long<br />}</p></pre>
    </li>
    <li>
      <p>
        <strong>Check the password for numbers.</strong> Add code to the password changing function to check the password for numbers. For example:</p>
      <pre>if(!preg_match("#[0-9]+#", $password))<br />{<br />&amp;nbsp;//password does not contain numbers<br />}</pre>
    </li>
    <li>
      <p />
      <strong>Check the password for lower-case letters.</strong> Add code to the password changing function to check the password for lower-case letters. For example: <p /><pre>if(!preg_match("#[a-z]+#", $password))<br />{<br />&amp;nbsp;//password does not contain lower-case letters<br />}</pre></li>
    <li>
      <p />
      <strong>Check the password for capital letters.</strong> Add code to the password changing function to check the password for capital letters. For example: <p /><pre>if(!preg_match("#[A-Z]+#", $password)) <br />{<br />&amp;nbsp;//password does not contain capital letters<br />}</pre></li>
    <li>
      <p />
      <strong>(Optional) Check the password for symbols.</strong> If your application requires it, add code to the password changing function to check the password for symbols. For example: <p /><pre>if(!preg_match("#\W+#", $password))<br />{<br />&amp;nbsp;//password does not contain symbols<br />}</pre></li>
  </ol>
  <h1>Secure Authentication Guidelines</h1>
  <ul>
    <li>
      <a href="/article/ab2ee2de-f811-433e-a1ec-f5f8e4704f9d">Centralize Authentication Controls</a>
    </li>
    <li>
      <a href="/article/31a08288-0750-4689-869f-2498be56eb4b">Require Authentication for All Sensitive Pages</a>
    </li>
    <li>
      <a href="/article/fdc4fd11-1675-4733-a041-e3d1eecbc201">Use Server-side Authentication</a>
    </li>
    <li>
      <a href="/article/8eba2142-4a6e-4f2c-9648-3ba1cadf9621">Force Reauthentication for Sensitive Operations</a>
    </li>
    <li>
      <a href="/article/322f3f59-a0bc-4056-9657-3d3ac2a60140">Log Authentication Events</a>
    </li>
    <li>
      <a href="/article/62593693-31c2-441a-b6f8-4fc47acac06d">Store Passwords Securely</a>
    </li>
    <li>
      <a href="/article/cc038844-f2c1-444c-b6cf-7cb5b423059f">Mask All Password Fields</a>
    </li>
    <li>
      <a href="/article/90ee4a94-47e5-4d8f-a576-632602861442">Lock Accounts After Multiple Failed Authentication Attempts</a>
    </li>
    <li>
      <a href="/article/fd83e67c-62b8-4cc3-a365-4491dd4a2ef6">Enforce Strong Password Requirements</a>
    </li>
    <li>
      <a href="/article/a3f48e53-b118-4180-8aa1-e945f1afadda">Force Password Renewal</a>
    </li>
    <li>
      <a href="/article/edd3e5fa-44a1-402a-820f-1860e9361fd1">Protect the Account Management Functions</a>
    </li>
    <li>
      <a href="/article/150e943f-6d59-42d6-bb0a-2cecf151dba1">Implement Authentication Controls to Fail Securely</a>
    </li>
  </ul>
  <h1>Secure Authentication Checklists</h1>
  <ul>
    <li>
      <a href="/article/6a2f9f21-3d59-4fba-b93e-1999807ff7d8">Authentication Controls Are Centralized</a>
    </li>
    <li>
      <a href="/article/0d20efdd-d9d8-42c7-99bc-e094d94f8d06">Authentication Is Required for All Sensitive Pages</a>
    </li>
    <li>
      <a href="/article/632c4d5a-04d9-4636-af27-17204442202e">Server-side Authentication Is Used</a>
    </li>
    <li>
      <a href="/article/0c6a261a-14e8-4c36-838d-17b4a8b6532c">Reauthentication Is Required for Sensitive Operations</a>
    </li>
    <li>
      <a href="/article/db6938c1-d962-449a-9d4f-3cc3776993c2">Authentication Events Are Logged</a>
    </li>
    <li>
      <a href="/article/3daed10e-b47a-40fe-b75d-3c68532c1f0d">Passwords Are Stored Securely</a>
    </li>
    <li>
      <a href="/article/2059bbc4-1ed3-4df7-9e76-feeb94a48bc7">All Password Fields Are Masked</a>
    </li>
    <li>
      <a href="/article/14a7c12b-46dd-4ee5-9ebf-8b9497ab7ce3">Accounts Are Locked After Multiple Failed Authentication Attempts</a>
    </li>
    <li>
      <a href="/article/696ff103-4793-4198-9322-aa7b275a04dc">Strong Password Requirements Are Enforced</a>
    </li>
    <li>
      <a href="/article/af1a2a69-bb4d-4ca4-86ab-174c4c5e3ca9">Password Renewal Is Enforced</a>
    </li>
    <li>
      <a href="/article/37e2ff71-71b6-47e0-b6f6-53c8d4e81544">The Account Management Functions Are Protected</a>
    </li>
    <li>
      <a href="/article/3e98ffe2-bb03-4cff-a7ea-2796ab6a833e">Authentication Controls Fail Securely</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>