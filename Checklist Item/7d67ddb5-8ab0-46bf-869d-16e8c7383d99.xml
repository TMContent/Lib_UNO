<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1212043716" Content_Hash="-389318433">
  <Metadata>
    <Id>7d67ddb5-8ab0-46bf-869d-16e8c7383d99</Id>
    <Id_History>7d67ddb5-8ab0-46bf-869d-16e8c7383d99,c0ea7d36-d929-44ed-9d7d-6040e1b3e230,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>[EXPANDME] Windows Authentication Is Used for Web Users If Possible</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Windows Authentication Is Used for Web Users If Possible</DirectLink>
    <Tag>ASP.NET,ASP.NET 4.0,ASP</Tag>
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies To</h1>
  <ul>
    <li>ASP.NET 4.0</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that windows authentication is used if it is a viable alternative to ASP.Net Forms Authentication.</p>
  <h1>Why</h1>
  <p>Unlike Forms Authentication, Windows Authentication never transmits a password in plain text or a direct hash of the password over the network. This makes it much more difficult for an attacker to monitor network traffic and steal passwords or to steal a session through a replay attack.</p>
  <p>In addition, you also benefits a unified identity store, centralized account administration, and enforceable account and password policies. </p>
  <h1>How To Check</h1>
  <p>To verify that windows authentication is used:</p>
  <ol>
    <li>
      <p>
        <strong>Verify that IIS is configured for Windows Authentication.</strong> Verify that anonymous access is disabled and integrated Windows authentication is enabled in IIS.</p>
    </li>
    <li>
      <p>
        <strong>Verify that authentication is configured.</strong>&amp;nbsp;Locate the &lt;<em>authentication</em>&gt; element in your application's <em>Web.config</em> file or in the machine-level <em>Web.config </em>file. Verify that the authentication mode is set to Windows. For example:</p>
      <pre>...<br />&lt;system.web&gt;<br />&amp;nbsp; ...<br />&amp;nbsp; &lt;authentication mode="Windows"/&gt;<br />&amp;nbsp; ...<br />&lt;/system.web&gt;<br />...</pre>
    </li>
  </ol>
  <h1>How To Fix</h1>
  <p>Follow these steps to design and configure your application for Windows Authentication.</p>
  <ol>
    <li>
      <p>
        <strong>Protect against Cross-Site Request Forgery attacks</strong>. When you configure your web application to use Windows Authentication, Internet Explorer will automatically authenticate using the currently logged-on user's credentials without prompting the user. This is known as "silent authentication" and makes your application more susceptible to Cross Site Request Forgery. </p>
    </li>
    <li>
      <p>
        <strong>Configure your application for Windows Authentication. </strong>To use Windows authentication in ASP.NET, you must use Microsoft Internet Information Services (IIS) to disable anonymous access and configure a Windows-based authentication method for your Web application's virtual directory. You must also ensure that the <em>mode</em> attribute on the &lt;<em>authentication</em>&gt; element is set to "<em>Windows</em>" (the default setting) in your <em>Web.config</em> file.</p>
    </li>
  </ol>
  <h1>Related Items</h1>
  <em>You may find these additional articles useful</em>
  <ul>
    <li>
      <a href="/article/149c6907-0c10-4386-8f88-c3bfaf626485">Use Windows Authentication for Web Users if Possible</a>
    </li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>
  <h1>
  </h1>
  <h1>
  </h1>]]></Data>
  </Content>
</TeamMentor_Article>