<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1923847463" Content_Hash="-335717791">
  <Metadata>
    <Id>ffc885ad-2250-462f-b42e-497e22966f5c</Id>
    <Id_History>ffc885ad-2250-462f-b42e-497e22966f5c,bc4f6ad9-88ea-4e4b-888a-428bf0d1538c,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Debug Assertions Are Not Used for Error Handling</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Debug Assertions Are Not Used for Error Handling</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <p>C&amp;#43;&amp;#43;</p>
  <h1>What to Check For</h1>
  <p>Verify that debug assertions are not used for error handling.</p>
  <h1>Why</h1>
  <p>Debug assertions are compiled out of production code, so they should not be relied on for error handling in a production environment.</p>
  <h1>How to Check</h1>
  <p>Search code for the "assert" operator. Verify that assertions are not used for error handling.</p>
  <h1>How to Fix</h1>
  <p>Identify code that uses the "assert" operator. Rewrite code to implement functional error handling without using the debug assertion.</p>
  <h1>Problem Example</h1>
  <p>In the following example, the read API is called and then the return value is checked for errors in an assertion. </p>
  <pre>bool ReadFromSocket(SOCKET socket, char &amp;#42;recvBuffer, int len)<br />&amp;#123;<br />&amp;nbsp; //first read from the socket<br />&amp;nbsp; int ret = read(socket, recvBuffer, len, 0);<br />&amp;nbsp; assert(ret &gt;= 0)<br />&amp;nbsp; return parseBuffer(recvBuffer, len);<br />&amp;#125;</pre>
  <h1>Solution Example</h1>
  <p>In the following example, the read API is called and then the return value is checked for errors. </p>
  <pre>bool ReadFromSocket(SOCKET socket, char &amp;#42;recvBuffer, int len)<br />&amp;#123;<br />&amp;nbsp; //first read from the socket<br />&amp;nbsp; int ret = read(socket, recvBuffer, len, 0);<br />&amp;nbsp; if (ret &gt;= 0)<br />&amp;nbsp; &amp;#123;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //now parse the buffer<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return parseBuffer(recvBuffer, len);<br />&amp;nbsp; &amp;#125;<br />&amp;nbsp; else<br />&amp;nbsp; &amp;#123;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //can call WSAGetLastError if we need error details<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return false;<br />&amp;nbsp; &amp;#125;<br />&amp;#125;</pre>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/b2050dca-6329-4360-b218-070305fe6890">Do Not Use Asserts for Error Handling</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>