<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="164647587" Content_Hash="-1752912065">
  <Metadata>
    <Id>88b67dfc-8b33-4c5b-bf45-a2203c99a6eb</Id>
    <Id_History>88b67dfc-8b33-4c5b-bf45-a2203c99a6eb,9aa411e3-1f80-4c12-8452-f90f3e8d9838,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>A Connection Is Used to the Database with a Least-privileged Service Account</Title>
    <Category>Database Security</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>A Connection Is Used to the Database with a Least-privileged Service Account</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>ASP.NET 3.5</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <h1>What to Check For</h1>
  <p>Check to ensure that your application connects to the database by using a least-privileged account.</p>
  <h1>Why</h1>
  <p>To limit the damage that can be done in the event of a SQL injection attack or in the event of an attacker obtaining your account's credentials.</p>
  <h1>How to Fix</h1>
  <p>With Windows authentication, use a least-privileged account with limited operating system permissions, and limited ability to access Windows resources. Regardless of authentication mechanism, restrict the account's permissions in the database.</p>
  <p>Use the following pattern to limit permissions in the database: </p>
  <ol>
    <li>Create a SQL Server login for the account. <li>Map the login to a database user in the required database. <li>Place the database user in a database role. <li>Grant the database role limited permissions to only those stored procedures or tables that your application needs to access. </li></li></li></li>
  </ol>
  <p>Ideally, provide no direct table access and limit access to selected stored procedures only. If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient. </p>
  <p>By using a database role, you avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one.</p>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>