<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="508458814" Content_Hash="-53101754">
  <Metadata>
    <Id>dffcbdd7-4e82-4988-a02a-a2ff45dd6121</Id>
    <Id_History>0e013545-46bc-4bac-8ea7-7fb8fd8d306c,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Integers Are Converted Correctly</Title>
    <Category>Memory Management</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Integers Are Converted Correctly</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>C&amp;#43;&amp;#43;</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that data is not lost during integer conversion. Typical errors that may occur are truncation and losing sign information.</p>
  <h1>Why</h1>
  <p>If data is lost during conversion, an unpredictable/unintended value may be stored in a variable. If this variable is used for program flow control, memory operations, or array indexing, an arbitrary code execution vulnerability may result.</p>
  <h1>How to Check</h1>
  <p>Identify all integer conversion operations. Make sure that ranges are checked before assigning the result of the conversion to a variable.</p>
  <h1>How to Fix</h1>
  <p>Identify all integer conversion operations. Add range checks to verify that the result of integer conversion is valid before assigning the result to a variable.</p>
  <h1>Problem Example</h1>
  <p>The following code may result in truncation, because an unsigned integer has a larger maximum value than a signed integer. The exact error may be different on different platforms.</p>
  <pre>unsigned short a = 50000;<br />signed short b = static_cast&lt;signed short&gt;(a);</pre>
  <h1>Solution Example</h1>
  <p>To fix the problem example above, add range checks before assigning the result of conversion to a variable.</p>
  <pre>unsigned short a = 50000;<br />if (a &gt; SHRT_MIN &amp;&amp; a &lt; SHRT_MAX) signed short b = static_cast&lt;signed short&gt;(a);<br />else &amp;#123;/&amp;#42;handle error&amp;#42;/&amp;#125;</pre>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/e9748936-6e22-4c56-94e9-7f8522e4f06d">Convert Integers Correctly</a>
      <li>
        <a href="/article/6c6f0d93-0d5b-4aa4-97b0-9e69535b3345">Protect Against Integer Overflows</a>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>