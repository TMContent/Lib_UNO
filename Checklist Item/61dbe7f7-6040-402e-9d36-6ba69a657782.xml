<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1486579781" Content_Hash="203363757">
  <Metadata>
    <Id>61dbe7f7-6040-402e-9d36-6ba69a657782</Id>
    <Id_History>2b74a847-2498-4f19-b43d-d1bf3b6c94c0,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Exception Details Are Logged on the Server</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 2.0</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Exception Details Are Logged on the Server</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Andy Wigley, Kishore Gopalan</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>ASP.NET 2.0</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Check to ensure that exceptions, once caught, are logged to the server to allow further analysis and debugging.</p>
  <h1>Why</h1>
  <p>Malicious attacks may result in application exceptions.&amp;nbsp; Exceptions contain critical information on problems which occur in production systems.&amp;nbsp; Logging them will help track down problems faster. </p>
  <h1>How to Check</h1>
  <p>Check to ensure your application uses structured exception handling and employs a global error handler.</p>
  <p>Check to ensure that in all exception handlers and the global error handler, code exists to log exception details to the server.&amp;nbsp; Code will be similar to this:</p>
  <pre>    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry("My Web Application",<br />      "MESSAGE: " + ex.Message +<br />       "\nSOURCE: " + ex.Source,<br />       EventLogEntryType.Error);</pre>
  <h1>How to Fix</h1>
  <p>You should log all exceptions in the event log to record them for tracking and later analysis.&amp;nbsp; Event logging should occur in Try/Catch/Finally blocks in code as well as in the global error handler. Use code similar to the following. </p>
  <pre>&lt;%@ Application Language="C#" %&gt;<br /> &lt;%@ Import Namespace="System.Diagnostics" %&gt;<br />  &lt;script language="C#" runat="server"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry("My Web Application",<br />      "MESSAGE: " + ex.Message +<br />       "\nSOURCE: " + ex.Source,<br />       EventLogEntryType.Error);<br />     // Optional e-mail or other notification here...<br /> }<br /> &lt;/script&gt;</pre>
  <h1>Problem Example</h1>
  <p>An ASP.NET application is under attack by a malicious user.&amp;nbsp; One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&amp;nbsp; Unfortunately the application doesn't log exception details to the server so this debugging and auditing information is lost forever.</p>
  <h1>Solution Example</h1>
  <p>An ASP.NET application is under attack by a malicious user.&amp;nbsp; One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&amp;nbsp; Fortunately the application logs exception details to the server so this debugging and auditing information is discovered by the site admin and delivered to the development team for further analysis.</p>
  <pre>&lt;%@ Application Language="C#" %&gt;<br /> &lt;%@ Import Namespace="System.Diagnostics" %&gt;<br />  &lt;script language="C#" runat="server"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry("My Web Application",<br />      "MESSAGE: " + ex.Message +<br />       "\nSOURCE: " + ex.Source,<br />       EventLogEntryType.Error);<br />     // Optional e-mail or other notification here...<br /> }<br /> &lt;/script&gt;</pre>
  <li>
    <hr />
    <p>Adapted from Microsoft patterns &amp; practices guidance.</p>
  </li>]]></Data>
  </Content>
</TeamMentor_Article>