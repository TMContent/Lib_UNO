<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="415898483" Content_Hash="936716075">
  <Metadata>
    <Id>b3b2e6fd-809e-4dff-8f30-5480681ce64e</Id>
    <Id_History>4ba8bf31-89a8-44a2-9bf7-89f2299bd9ad,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>Sizes of Arrays Are Computed Correctly</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Sizes of Arrays Are Computed Correctly</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>C&amp;#43;&amp;#43;</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Verify that array and string sizes are computed correctly when copying data.</p>
  <h1>Why</h1>
  <p>Calculating the amount of memory used by an array or a string is very important when copying data to make sure that a sufficiently large buffer is allocated. Allocating a large enough buffer to fit data being copied is vital for preventing buffer overflows.</p>
  <h1>How to Check</h1>
  <p>Find all the uses of the sizeof() function. Verify that pointers are not passed as arguments to sizeof() when calculating sizes of arrays. When an array is passed as an argument to a function, it is passed as a pointer. Calling sizeof() on an array that is passed as a parameter returns the size of a pointer, not the size of the array. To get the size of an array correctly, call sizeof() in the scope where the array is declared and store the return value in a variable. When copying data, pass the variable that contains the size of the array as an argument together with data to be copied.</p>
  <h1>How to Fix</h1>
  <p>Call sizeof() in the scope where the array is declared and store the return value in a variable. When copying data, pass the variable that contains the size of the array as an argument together with data to be copied.</p>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information about computing the sizes of arrays correctly, please see "ARR01-CPP. Do not apply the sizeof operator to a pointer when taking the size of an array" at <a href="https://www.securecoding.cert.org/confluence/display/cplusplus/ARR01-CPP.&amp;#43;Do&amp;#43;not&amp;#43;apply&amp;#43;the&amp;#43;sizeof&amp;#43;operator&amp;#43;to&amp;#43;a&amp;#43;pointer&amp;#43;when&amp;#43;taking&amp;#43;the&amp;#43;size&amp;#43;of&amp;#43;an&amp;#43;array">https://www.securecoding.cert.org/confluence/display/cplusplus/ARR01-CPP.&amp;#43;Do&amp;#43;not&amp;#43;apply&amp;#43;the&amp;#43;sizeof&amp;#43;operator&amp;#43;to&amp;#43;a&amp;#43;pointer&amp;#43;when&amp;#43;taking&amp;#43;the&amp;#43;size&amp;#43;of&amp;#43;an&amp;#43;array</a></li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/54ee5a30-738f-4ca6-a1eb-ab6e58152f7b">Get the Size of an Array Correctly</a>
      <li>
        <a href="/article/b119d5b9-bb51-4ea8-b6b2-e034e92c17be">Protect Against Buffer Overflows</a>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>