<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="707378057" Content_Hash="-1655972147">
  <Metadata>
    <Id>b8e68c8e-33e1-4adc-bccf-4bbe4511c6b3</Id>
    <Id_History>b8e68c8e-33e1-4adc-bccf-4bbe4511c6b3,185383b7-9694-4820-8b7d-c964f701bf85,</Id_History>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>How to Impersonate the Original Caller When Using Windows Authentication</Title>
    <Category>Impersonation and Delegation</Category>
    <Phase>Implementation</Phase>
    <Technology>WCF 3.5</Technology>
    <Type>How To</Type>
    <DirectLink>How to Impersonate the Original Caller When Using Windows Authentication</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>Microsoft&amp;#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&amp;#174; 2008</li></li>
  </ul>
  <h1>Description</h1>
  <p>When using windows authentication, you have access to original users Windows Identity. You can impersonate the original caller whenever downstream code needs to authorize based on the original caller&amp;#8217;s identity. For instance, you may have authorization checks in business logic called by WCF, or you may want to access resources that have access control lists (ACLs) allowing specific user access.</p>
  <p>You can impersonate the original caller either declaratively or programmatically, depending on the following circumstances:</p>
  <ul>
    <li>Impersonate the original caller declaratively when you want to access Microsoft Windows&amp;#174; resources that are protected with ACLs configured for your application&amp;#8217;s domain user accounts. <li>Impersonate the original caller programmatically when you want to access resources predominantly by using the application&amp;#8217;s process identity, but specific sections of the operation need to use the original caller&amp;#8217;s identity.</li></li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information, see &amp;#8220;Delegation and Impersonation with WCF&amp;#8221; at <a href="http://msdn2.microsoft.com/en-us/library/ms730088.aspx">http://msdn2.microsoft.com/en-us/library/ms730088.aspx</a><li>For more information see &amp;#8220;How to Impersonate the Original Caller in WCF calling from Windows Forms&amp;#8221; at <a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How&amp;#37;20To&amp;#37;20-&amp;#37;20Impersonate&amp;#37;20the&amp;#37;20Original&amp;#37;20Caller&amp;#37;20in&amp;#37;20WCF&amp;#37;20calling&amp;#37;20from&amp;#37;20Windows&amp;#37;20Forms&amp;referringTitle=How&amp;#37;20Tos">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How&amp;#37;20To&amp;#37;20-&amp;#37;20Impersonate&amp;#37;20the&amp;#37;20Original&amp;#37;20Caller&amp;#37;20in&amp;#37;20WCF&amp;#37;20calling&amp;#37;20from&amp;#37;20Windows&amp;#37;20Forms&amp;referringTitle=How&amp;#37;20Tos</a><li>For more information see &amp;#8220;How to Impersonate the Original Caller in WCF calling from Web Application&amp;#8221; at <a href="http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How&amp;#37;20To&amp;#37;20-&amp;#37;20Impersonate&amp;#37;20the&amp;#37;20Original&amp;#37;20Caller&amp;#37;20in&amp;#37;20WCF&amp;#37;20calling&amp;#37;20from&amp;#37;20Web&amp;#37;20Application&amp;referringTitle=How&amp;#37;20Tos">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How&amp;#37;20To&amp;#37;20-&amp;#37;20Impersonate&amp;#37;20the&amp;#37;20Original&amp;#37;20Caller&amp;#37;20in&amp;#37;20WCF&amp;#37;20calling&amp;#37;20from&amp;#37;20Web&amp;#37;20Application&amp;referringTitle=How&amp;#37;20Tos</a>&amp;nbsp;</li></li></li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>