<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-463747588" Content_Hash="-1885731347">
  <Metadata>
    <Id>ffb4253a-cae5-4078-9a9c-51942ff1fd51</Id>
    <Id_History>24864f3c-923d-47ec-b7ad-06e108bde365,</Id_History>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>How to Inspect For Dangerous Unmanaged APIs</Title>
    <Category>Unmanaged Code</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>How To</Type>
    <DirectLink>How to Inspect For Dangerous Unmanaged APIs</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Description</h1>
  <p>You should be able to justify the use of all Win32 API calls. Unsafe APIs include threading functions that switch security context, such as <b>CreateThread</b>, <b>RevertToSelf</b> and access token functions, which can create tokens and can modify or disclose information about a security token. These include <b>AdjustTokenGroups</b>, <b>AdjustTokenPrivileges</b>, <b>SetTokenInformation</b>, <b>and GetTokenInformation</b>. Other unsafe APIs include credential management functions, including functions that create tokens, such as <b>LogonUser</b> and <b>LogonUserEx</b>, crypto API functions that can decrypt and access private keys, memory management functions that can read and write to memory and Local Security Authority (LSA) functions that can access sensitive system data.</p>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>