<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-832124018" Content_Hash="1050176575">
  <Metadata>
    <Id>b7f546b6-fc5b-4914-b96b-3731b529eef9</Id>
    <Id_History>2c63b35f-ba5e-42dd-bacb-15c345c2489a,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>How to Use A Digital Certificate</Title>
    <Category>Cryptography</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>How To</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>Description</h1>
  <p>Use the <b>System.Security.Cryptography.X509Certificates</b> namespace to access digital certificates. You can load a certificate from a file or select one from a physical store. Use the <b>X509Certificate2</b> class to load a certificate from a file, and use the <b>X509Store</b> class to load a certificate from a store. </p>
  <p>The following code example shows how to load a certificate from a file and add it to the local certificate store. </p>
  <pre>using System; <br />using System.Security.Cryptography; <br />using System.Security.Cryptography.X509Certificates; <br />public class X509store2 &#123;<br />     public static void Main (string&#91;&#93; args)<br />     &#123;<br />         // Create new X509 store called teststore from the<br />         // local certificate store.<br />         X509Store store = new X509Store ("teststore",<br />                                          StoreLocation.CurrentUser);<br />         store.Open (OpenFlags.ReadWrite);<br />         // Create certificate from a certificate file.<br />         X509Certificate2 certificate = new X509Certificate2(<br />                                      "c:\\mycerts\\&#42;&#42;&#42;&#42;&#42;.cer");<br />         // Add certificate to the store.<br />         store.Add(certificate);<br />         // Close the store.<br />         store.Close ();<br />   &#125; <br />&#125;  </pre>
  <p>You can use certificates with the <b>SslStream</b> class to authenticate the server or the client during an SSL transaction. Use the <b>SslStream.AutheticateAsServer</b> or <b>SslStream.AutheticateAsClient</b> enumerations to complete the authentication process. </p>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information see, "Security Practices: .NET Framework 2.0 Security Practices at a Glance" at <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/PAGPractices0002.asp">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag2/html/PAGPractices0002.asp</a></li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>