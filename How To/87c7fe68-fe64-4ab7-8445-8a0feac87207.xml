<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1036401816" Content_Hash="2138316317">
  <Metadata>
    <Id>87c7fe68-fe64-4ab7-8445-8a0feac87207</Id>
    <Id_History>15243981-08b8-4a2b-ab1a-9ca5d5abe105,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>How to Disable Code Access Security While Debugging A Partially Trusted Application</Title>
    <Category>Code Access Security</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>How To</Type>
    <DirectLink>How to Disable Code Access Security While Debugging A Partially Trusted Application</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>Description</h1>
  <p>In the .NET Framework 1.1, you can permanently disable code access security. In .NET Framework 2.0, you can only do this temporarily. Temporarily disabling code access security can help you determine whether a problem is security related You can temporarily disable code access security by running CasPol.exe from a command line with the <b>-s off </b>switches, as shown here: </p>
  <pre>CasPol.exe -s off </pre>
  <p>This disables code access security temporarily while the CasPol process remains active. You can press ENTER when you want to re-enable code access security. When code access security is disabled, all code access demands succeed. </p>
  <blockquote>
    <b>Note</b>&amp;nbsp;&amp;nbsp;&amp;nbsp;Disabling code access security opens your system to potential attack. You should only do this when debugging an application in a secured environment.</blockquote>
  <br />
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>