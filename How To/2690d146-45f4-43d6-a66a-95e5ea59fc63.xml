<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1712743050" Content_Hash="-602805731">
  <Metadata>
    <Id>2690d146-45f4-43d6-a66a-95e5ea59fc63</Id>
    <Id_History>a4731bbe-5f3e-4042-8b23-77d85e837746,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>How to Review Code For Security Issues</Title>
    <Category>Code Analysis</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>How To</Type>
    <DirectLink>How to Review Code For Security Issues</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>Description</h1>
  <p>A properly conducted code review can increase the security of your application more than nearly any other activity. To perform a security code review, start by identifying your security code-review objectives to establish goals and constrains for the review. Then perform a preliminary scan by using a static analysis tool, such as FxCop, to find an initial set of bugs and to improve your understanding of where security issues are most likely to be discovered during further review. Next, review the most vulnerable areas of your code thoroughly to find security issues that are common to many applications. Finally, review for security issues that are unique to the architecture of your application.</p>
  <br />
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>