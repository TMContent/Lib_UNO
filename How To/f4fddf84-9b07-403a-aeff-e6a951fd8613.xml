<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1342964365" Content_Hash="-1779765016">
  <Metadata>
    <Id>f4fddf84-9b07-403a-aeff-e6a951fd8613</Id>
    <Id_History>cde93e06-b276-4580-bd34-1227f5461a69,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>How to Protect Communication Between Server And Server</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>How To</Type>
    <DirectLink>How to Protect Communication Between Server And Server</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>Description</h1>
  <p>Use Internet Protocol security (IPsec) to encrypt the communication channel between two servers and to restrict which computers can communicate with one another. For example, you can help secure a database server by establishing a policy that permits requests only from a trusted client computer, such as an application or Web server. You can also restrict communication to specific IP protocols and TCP/UDP ports. </p>
  <p>Use SSL instead of IPSec when you need detailed channel protection for a particular application instead of for all applications and services running on a computer. </p>
  <br />
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>