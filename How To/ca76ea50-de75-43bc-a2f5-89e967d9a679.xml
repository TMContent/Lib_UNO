<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1417537737" Content_Hash="2033147717">
  <Metadata>
    <Id>ca76ea50-de75-43bc-a2f5-89e967d9a679</Id>
    <Id_History>d8f38f16-b4d1-411c-8ac8-6e39b900c9a9,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>How to Constrain Input For Length Range Format And Type</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>How To</Type>
    <DirectLink>How to Constrain Input For Length Range Format And Type</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>Description</h1>
  <p>When input is from a server, you can use validation controls, such as <b>RangeValidator</b>, <b>CustomValidator</b>, and <b>RegularExpressionValidator</b>, to constrain the input by length, range, format, and type. </p>
  <p>When input carries an ID from any other source (such as HTML controls, query string, cookies, HTTP headers, and so on), use the <b>System.Text.RegularExpression.Regex</b> class to constrain input for length, range, format, and type. </p>
  <br />
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>