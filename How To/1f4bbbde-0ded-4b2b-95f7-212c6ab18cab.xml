<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="683221764" Content_Hash="590401697">
  <Metadata>
    <Id>1f4bbbde-0ded-4b2b-95f7-212c6ab18cab</Id>
    <Id_History>1f4bbbde-0ded-4b2b-95f7-212c6ab18cab,06e70975-12da-4132-a000-327e37bfac5c,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>[SINK] How to Use SQL Authentication To Connect To A SQL Server Database</Title>
    <Category>Database Security</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>How To</Type>
    <DirectLink>How to Use SQL Authentication To Connect To A SQL Server Database</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Description</h1>
  <p>If you cannot use Windows authentication to connect to a SQL Server database, you must use SQL authentication. When you use SQL authentication, make sure that you use a least-privileged user ID to connect to a SQL Server database and do not use highly privileged accounts such as the <b>sa</b> account. Use a strong password for the SQL user account and protect the channel between your application and database server because credentials are passed in an unencrypted format. For example, use SSL or IPSec. Finally, encrypt the connection string because SQL connection strings contain plaintext credentials.</p>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>