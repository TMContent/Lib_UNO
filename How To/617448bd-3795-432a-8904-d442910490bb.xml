<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1543545114" Content_Hash="-1203271593">
  <Metadata>
    <Id>617448bd-3795-432a-8904-d442910490bb</Id>
    <Id_History>aecb1632-9141-439f-8725-873e11bc2efb,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>How to Use XML Signatures</Title>
    <Category>Sensitive Data</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>How To</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>Description</h1>
  <p>You can use XML digital signatures to help ensure the integrity and authenticity of origin of XML documents. You can use the classes in the <b>System.Security.Cryptography.Xml</b> namespace to sign an XML document or part of an XML document with a digital signature. </p>
  <p>The following code example shows how to use an RSA signing key to sign an XML document. </p>
  <pre>using System.Security.Cryptography;<br />using System.Security.Cryptography.Xml;<br />using System.Xml;<br />// Create a new RSA key container and save it in a key container.<br />CspParameters cspParams = new CspParameters();<br />cspParams.KeyContainerName = "MyRSASigningKey";<br />// Create a new RSA signing key and save it in the container. <br />RSACryptoServiceProvider rsaKey = new<br />                               RSACryptoServiceProvider(cspParams);<br />//   Create a <b>SignedXml</b> object and add the key to it.<br />SignedXml signedXml = new SignedXml(doc);<br />signedXml.SigningKey = Key;<br />// Create a <b>Reference</b> object that describes what to sign.<br />Reference reference = new Reference();<br />reference.Uri = ""; <br />// "" means sign the whole document<br />// Add an enveloped transformation to the reference, add the reference <br />// to the signed XML document, and then compute the signature.<br />XmlDsigEnvelopedSignatureTransform env = new <br />                             XmlDsigEnvelopedSignatureTransform();<br />reference.AddTransform(env);<br />// Add the reference to the SignedXml object.<br />signedXml.AddReference(reference);<br />// Compute the signature.<br />signedXml.ComputeSignature();<br />//   Get the XML representation of the signature and save </pre>
  <pre>// it in an <b>XmlElement</b> object. Append the element to the original XML document.<br />XmlElement xmlDigitalSignature = signedXml.GetXml();<br />// Append the element to the XML document.<br />Doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));</pre>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>