<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-768928495" Content_Hash="1962336409">
  <Metadata>
    <Id>f1ebdb81-6130-4c79-973b-1edbb3183440</Id>
    <Id_History>f1ebdb81-6130-4c79-973b-1edbb3183440,eb004f02-4994-4f4c-9187-b26c5096cada,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>[SINK] How to Constrain Input For Length Range Format And Type</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>How To</Type>
    <DirectLink>How to Constrain Input For Length Range Format And Type</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Description</h1>
  <p>When input is from a server, you can use validation controls, such as <b>RangeValidator</b>, <b>CustomValidator</b>, and <b>RegularExpressionValidator</b>, to constrain the input by length, range, format, and type. </p>
  <p>When input carries an ID from any other source (such as HTML controls, query string, cookies, HTTP headers, and so on), use the <b>System.Text.RegularExpression.Regex</b> class to constrain input for length, range, format, and type. </p>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>