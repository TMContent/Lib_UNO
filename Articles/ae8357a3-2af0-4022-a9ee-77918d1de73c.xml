<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>ae8357a3-2af0-4022-a9ee-77918d1de73c</Id>
    <Id_History>ae8357a3-2af0-4022-a9ee-77918d1de73c,21be8595-434f-4723-be09-e9edc88b817b,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Do Not Use WS-Routing</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Do Not Use WS-Routing</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* ASP.NET 4.0

==What to Do==

Don't use WS-Routing. If you need this functionality, use WS-Addressing instead and protect Web Service connections using SSL/TLS.

==Why==

Don't use WS-Routing, because WS-Routing is vulnerable to routing detour attacks. The WS-Routing protocol doesn't have sufficient security features, so it should be avoided. 

==How==

To avoid using WS-Routing:

# **Find code that uses WS-Routing.** Ask developers whether the application actually uses WS-Routing. Review application code to find code that uses WS-Routing.
# **Determine whether SOAP message routing functionality is needed.** Most real-life applications that use Web Services can be implemented without using SOAP message routing. Review application requirements to determine whether SOAP message routing is necessary.
# **Remove or replace code that uses WS-Routing.** If SOAP message routing is not necessary, then remove the code that uses it. If SOAP message routing is necessary, rewrite code that uses WS-Routing to use WS-Addressing instead.
]]></Data>
  </Content>
</TeamMentor_Article>