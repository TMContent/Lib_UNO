<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>15ccde50-5626-4d85-872d-7ea4ee50e749</Id>
    <Id_History>15ccde50-5626-4d85-872d-7ea4ee50e749,ae447900-437d-4f07-b958-b68fbd059f8e,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Scala Encrypt Sensitive Data</Title>
    <Category>Cryptography</Category>
    <Phase>Implementation</Phase>
    <Technology>Scala Play</Technology>
    <Type>Code Example</Type>
    <DirectLink>Do Not Store Plaintext Sensitive Data</DirectLink>
    <Tag />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* Scala and Play Framework 2.1.0+


## Summary ##

Use encryption to avoid storing plaintext sensitive data in application configuration files or elsewhere.


## Solution Example ##

~~~~
// Because the following code generates a new encryption key,
// make sure to store it into the application's keystore.
KeyGenerator kgen = KeyGenerator.getInstance("AES");
kgen.init(256);
SecretKey skey = kgen.generateKey();

// Set up cipherCipher cipher = Cipher.getInstance("AES");
cipher.init(Cipher.ENCRYPT_MODE, skey);
// Note that sensitiveData is of type byte[] and contains
// data that is sensitive in nature
byte[] encrypted = cipher.doFinal(sensitiveData);
~~~~]]></Data>
  </Content>
</TeamMentor_Article>