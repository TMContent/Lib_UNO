<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>a412fbe6-87cb-4830-a909-7d568df4a228</Id>
    <Id_History>a412fbe6-87cb-4830-a909-7d568df4a228,bdc0bf10-2b8d-4922-bb4d-96b10dfcbece,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>Send Authentication Credentials over Encrypted Tunnels</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Guideline</Type>
    <DirectLink>Send Authentication Credentials over Encrypted Tunnels</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* C++

==What to Do==

Send authentication credentials over encrypted communication tunnels. Use TLS/SSL to send authentication credentials over the network, even the local network.

==Why==

Using encrypted communication tunnels prevents the credentials from being sniffed or tampered with as they are transmitted over the network. TLS/SSL libraries are available for most mature development platforms and are ideal for protecting the authentication credentials in transit.

==When==

Use this guideline when your application sends authentication credentials over the network.

==How==

To protect authentication credentials in transit:

# **Identify authentication security requirements.** Make sure that your application actually does send authentication credentials over the network. For example, if the application authenticates against a local credential store, then there is no need for network tunnels. If credentials are sent over the network, then they need to be protected in transit and for most scenarios TLS/SSL will be suitable. When using TLS/SSL, some thought will have to be given to what certificates to use. It is highly recommended to use valid certificates, however it is possible to encrypt network traffic with self-signed certificates.
# **Identify available communication security APIs.** Determine what libraries and APIs that implement TLS/SSL are available for your development platform. Because there are many different platforms and development environments that use C++, there are a lot of options. The platform-provided APIs should be the first choice. If these are not available, OpenSSL is a good alternative. 
# **Identify the network authentication mechanism.** Find the code that sends authentication credentials (usually hashes or keys) over the network.
# **Encrypt authentication credentials in transit.** Use the chosen TLS/SSL APIs to encrypt the hashes or keys as they are transmitted over the network. Modify all the code that sends the credentials over the network to always use TLS/SSL for the task. When doing so, it is recommended to use valid certificates and check them with a certificate authority to help prevent man-in-the-middle attacks.
]]></Data>
  </Content>
</TeamMentor_Article>