<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>92f27c14-6962-4366-875f-101e6ab68230</Id>
    <Id_History>92f27c14-6962-4366-875f-101e6ab68230,d556b4a5-efbb-4662-b8f7-474888f7a2cc,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Check Object References for Null Before Using Them</Title>
    <Category>Other</Category>
    <Phase>Implementation</Phase>
    <Technology>Technology Independent</Technology>
    <Type>Guideline</Type>
    <DirectLink>Check Object References for Null Before Using Them</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==What to Do==

Check function parameters for null before using them.

==Why==

Check function parameters for null before using them to prevent your application from crashing if it tries to use that parameter as an object.

==How==

To check function parameters for null before using them:

# **Identify all functions that accept object references as parameters.** Make a spreadsheet of all functions that accept object references as parameters. Most functions in your application will probably be in that spreadsheet and that is okay.
# **Update all functions that accept object references as parameters to check parameters for null.** At the beginning of each function that accepts object references, add code to check each reference for null. If a function is passed null as a parameter instead of an object, the function should either throw an exception or simply not use that parameter as an object.
]]></Data>
  </Content>
</TeamMentor_Article>