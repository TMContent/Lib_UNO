<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>0078cd3f-9e84-4eb4-9a2f-7f51e3100801</Id>
    <Id_History>0078cd3f-9e84-4eb4-9a2f-7f51e3100801,7f31f338-5a34-4a11-aab5-684a1f7ce228,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>IncludeSubDomains is Used with Strict-Transport-Security</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>HTML5</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>IncludeSubDomains is Used with Strict-Transport-Security</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==
HTML5

==What to Check For==
When communication with the browser is intended to be HTTP over TLS (HTTPS) across the application and its subdomains, check that the Strict-Transport-Security response header is used with //includeSubDomains//. This header is often referred to as HTTP Strict Transport Security, or simply HSTS.

==Why==
The Strict-Transport-Security header instructs the browser to communicate with the server only via HTTPS, a secure communication tunnel that prevents eavesdropping. Use of the includeSubDomains directive ensures that the browser will use use HTTPS to communicate with subdomains within the host as well. Without the header, there is no way for browser to “know” that a web page should be accessed over HTTPS. This would leave open the possibility of using standard, unencrypted HTTP, whether through a malicious link or direct URL access. 

==How To Check==
# **Check that the //mod_header// module is enabled in the //httpd.conf// file**. Find the //httpd.conf// file on your filesystem. This file is usually located in ///etc/httpd/httpd.conf// (consult your Web Server distribution documentation for the exact file location). Make sure that the line //LoadModule headers_module modules/mod_headers.so// appears in the file; this line enables //mod_header//.  Apache Web servers must be compiled with support for //mod_header// for this to work. 
# **Check that the HSTS Header appears in teh //httpd.conf// file**. View the //httpd.conf// file and make sure that the line //Strict-Transport-Security "max-age=7776000;includeSubDomains"// is present. This line enables HTTP Strict Transport Security.
# **Check that the //max-age// directive is set.**  Make sure that the //httpd.conf// file entry for Strict-Transport-Security contains the directive //"max-age=(time limit value)"//  The time value determines the length of time that browsers are instructed to connect only using HTTPS.
# **Check that the //includeSubDomains// directive is set.**  Make sure that the //httpd.conf// file entry for Strict-Transport-Security contains the directive //includeSubDomains//.  This ensures that all sub-domains for the Web server domain are instructed to connect only using HTTPS.
# **Reload or restart the Web Server configuration.**  If you made changes to the //httpd.conf// file, stop and restart the Web server.  For example, with Apache2, execute the command ///etc/init.d/apache2 stop// to stop the server and ///etc/init.d/apache2 start// to restart it.

==How To Fix
Note that, as of this writing, the latest releases of Mozilla Firefox, Google Chrome, and Opera all support the HSTS header. However, Internet Explorer does not.

    # **Enable the the //mod_header// module in the //httpd.conf// configuration file (if it is not already enabled)**. For example, if you are using Apache Web Server, first enable //LoadModule headers_module modules/mod_headers.so// .
    # **Add the HSTS header to the //httpd.conf// configuration file**. Include the required directive //max-age//, which specifies the time, in seconds, that a compliant browser will abide by forced HTTPS, even in the event a standard HTTP connection is attempted. And, include the //includeSubDomains// directive, which takes no value. For example, in the Apache //httpd.conf// configuration file, add the following line: //Header always append Strict-Transport-Security: "max-age=7776000 ; includeSubDomains"//. This directive instructs the browser to connect only via HTTPS for the next 90 days, and includes all sub-domains. The server will inject this header information into each application page rendered.
    # **Reload or restart the web server configuration**. The first time the user connects to your website using HTTPS, the browser reads the HSTS header, including the //max-age// and //includeSubDomains// directives. The browser will know it should connect only via HTTPS for the specified //max-age// time period.


==Additional Resources==
*For information on the Strict-Transport-Security header, see http://tools.ietf.org/html/draft-ietf-websec-strict-transport-sec-14#section-6.1
*For information on useful HTTP headers, see https://www.owasp.org/index.php/List_of_useful_HTTP_headers

]]></Data>
  </Content>
</TeamMentor_Article>