<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>ba64e4ba-9d14-4054-a99e-b6594f9698d6</Id>
    <Id_History>ba64e4ba-9d14-4054-a99e-b6594f9698d6,e711e1a0-dfb3-4b82-9e4a-561175046fe7,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Scala Validate Usernames Before Processing Them</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>Scala Play</Technology>
    <Type>Code Example</Type>
    <DirectLink>Validate Usernames Before Processing Them</DirectLink>
    <Tag />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* Scala and Play Framework 2.1.0+


## Summary ##

Validate user credentials before processing them. Failure to validate user credentials could cause improper authentication. This can allow an attacker to authenticate as another user without the need to steal credentials.


## Solution Example ##

~~~~
val pid = UserForm.empid
val uname = UserForm.username
val name = Name.findname(pid,uname)

val whitelistPattern = "(\\w|\\d)+"
val issafe = whitelistPattern.pattern.matcher(uname).matches
if(issafe){
...
//Code for Action
}
else
{
...
//Code for Exception
}
~~~~]]></Data>
  </Content>
</TeamMentor_Article>