<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>5a36d20f-d8e0-4a86-8776-1f3e95a9da9c</Id>
    <Id_History>5a36d20f-d8e0-4a86-8776-1f3e95a9da9c,bb2fafa0-1261-4d34-977a-a99951e51a2c,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Disable Directory Browsing</Title>
    <Category>Hardening</Category>
    <Phase>Deployment</Phase>
    <Technology>Scala with Play Framework</Technology>
    <Type>Guideline</Type>
    <DirectLink>Disable Directory Browsing</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Applies to</h1>
  <p>Applications written using Scala and Play Framework 2.1.0 using Nginx as front-end in reverse proxy mode.<br /></p>
  <h1>What to Do</h1>
  <p>Disable directory browsing for your application's web directories.</p>
  <h1>Why</h1>
  <p>Directory browsing allows an attacker to browse your application's directory structure in search of unprotected files and components.</p>
  <h1>When</h1>
  <p>Disable directory browsing at all times.</p>
  <h1>How</h1>
  <p>Use the following steps to successfully disable directory browsing:</p>
  <ol>
    <li>
      <p>
        <strong>Identify if directory browsing is enabled.&nbsp;</strong>Navigate
 to your application's directories. Identify&nbsp;whether your application's 
server correctly returns an HTTP error message. If it incorrectly 
returns&nbsp;the directory contents, continue with the following steps.</p>
    </li>
    <li>
      <p>
        <strong>Locate the default Nginx configuration.&nbsp;</strong>In Nginx, the default configuration file is located at <i>/etc/nginx/sites-availabe/default</i>.
 In the default "server" block, look for the presence of the "location" 
element that is mapped to the directory for which directory browsing is 
to be disabled. Example:</p>
      <pre>server {
        listen   80;
        server_name  domain.com www.domain.com;
        access_log  /var/...........................;
        root   /path/to/root;
        location / {
                index  index.html index.htm;
        }
        location /somedir {
               autoindex on;
        }
}</pre>
    </li>
    <li>
      <p>
        <strong>Deny directory browsing in the default Nginx configuration.&nbsp;</strong>Initialize the <i>HttpAutoindexModule </i>with "<i>off</i>" to disable directory listing. Example:</p>
      <pre>server {
        listen   80;
        server_name  domain.com www.domain.com;
        access_log  /var/...........................;
        root   /path/to/root;
        location / {
                index  index.php index.html index.htm;
        }
        location /somedir {
               autoindex off;
        }
}</pre>
    </li>
  </ol>
  <h1>Problem Example</h1>
  <p>An application is deployed on a production server. Unfortunately, the developers did not disable directory browsing. This allows an attacker to search for unprotected configuration files.</p>
  <h1>Solution Example</h1>
  <p>An application is deployed on a production server. Because the developers have disabled directory browsing, it is difficult for an attacker to use HTTP browsing to search for unprotected configuration files.</p>]]></Data>
  </Content>
</TeamMentor_Article>