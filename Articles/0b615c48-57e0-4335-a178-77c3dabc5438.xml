<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>0b615c48-57e0-4335-a178-77c3dabc5438</Id>
    <Id_History>9f34c1cb-230b-492f-bc82-8a9627a3c0ac,</Id_History>
    <Library_Id>d9c2b53f-5b05-4152-be72-e79d72854707</Library_Id>
    <Title>Cross Site Request Forgery (CSRF) Attack</Title>
    <Category>Application State</Category>
    <Phase>Implementation</Phase>
    <Technology>Scala with Play Framework</Technology>
    <Type>Attack</Type>
    <DirectLink>Cross Site Request Forgery (CSRF) Attack</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Applies To</h1>
  <p>Scala and Play Framework 2.1.0+</p>
  <h1>Description</h1>
  <p>A Cross Site Request Forgery (CSRF) attack occurs when an attacker tricks a victim into loading a page that contains a malicious "forged" request. The request is sent in the context of the logged in victim. For many 
sites, each request automatically sends the victim's credentials such as 
the session cookie or authentication credentials. Thus, there
 is no way to distinguish this forged request from a legitimate request. This request may be able to change the state of the web application and is possible because the user is already logged in with a valid session and is authorized to perform the operation.<br /><br />Cross Site Request Forgery attacks are known by other names including XSRF, Session Riding, One-Click and Zero-Click attacks.&amp;nbsp; A One-Click attack refers to a link that causes a malicious action to be performed when a victim clicks on it. A Zero-Click attack is automatically executed upon page load. A common way to perform a Zero-Click attack is to embed the request in the source of an image.</p>
  <h1>Impact</h1>
  <p>
    <strong>Elevation of privilege</strong>. The attacker can execute commands on the web application on behalf of the victim.</p>
  <h1>Vulnerabilities</h1>
  <p>Executing single requests that can change the state of the application, such as add users, change account balances, change passwords, etc.
  </p>
  <h1>Countermeasures</h1>
  <p>To prevent CSRF, the application must verify that a request that modifies the application state is the result of a user interacting with the application, and not the result of a malicious webpage that tricks the user's browser into sending requests to the application.</p>
  <ul>
    <li>A common solution is for every POST request to issue an authentication token to secure critical actions. See the Guideline <a href="19f2779c-14ec-43fb-8e8d-4505cb0801c9">Include Unique Tokens in HTTP Requests</a>. </li>
    <blockquote>
      <p>When the form is submitted, the application verifies the token. An attacker website cannot obtain a valid token for the user's session. For example, the following:</p>
      <div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">public static destroyMyAccount() {&amp;nbsp;</span>
          </font>
        </div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">
              <br />
            </span>
          </font>
        </div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">checkAuthenticity();</span>
          </font>
        </div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">
              <br />
            </span>
          </font>
        </div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">...</span>
          </font>
        </div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">
              <br />
            </span>
          </font>
        </div>
        <div>
          <font face="Courier New" color="#111111" size="2">
            <span style="line-height: 19.5px;">}</span>
          </font>
        </div>
        <div>will only work when called from a form including a proper authenticity token:</div>
      </div>
      <p class="western" style="font-style: normal; margin: 0.5em 0px 1em; padding: 0px; line-height: 1.5em; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;" lang="en-US">
        <font style="margin: 0px; padding: 0px;" face="Courier, Courier New">
          <font style="margin: 0px; padding: 0px;" size="3">
            <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">#{form @ destroyMyAccount()}&amp;nbsp;</font>
          </font>
          <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">
          </font>
        </font>
        <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">
        </font>
      </p>
      <font style="margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-size: small;" face="Courier New" size="2">
      </font>
      <span style="color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;">
      </span>
      <p class="western" style="font-style: normal; margin: 0.5em 0px 1em; padding: 0px; line-height: 1.5em; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;" lang="en-US">
        <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">#{authenticityToken /}</font>
      </p>
      <font style="margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-size: small;" face="Courier New" size="2">
      </font>
      <span style="color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;">
      </span>
      <p class="western" style="font-style: normal; margin: 0.5em 0px 1em; padding: 0px; line-height: 1.5em; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;" lang="en-US">
        <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">
          &lt;input type="submit" value="destroy my account" /&gt;
        </font>
      </p>
      <font style="margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-size: small;" face="Courier New" size="2">
      </font>
      <span style="color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;">
      </span>
      <p class="western" style="font-style: normal; margin: 0.5em 0px 1em; padding: 0px; line-height: 1.5em; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;" lang="en-US">
        <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">
        </font>
        <font style="margin: 0px; padding: 0px;" face="Courier, Courier New">
          <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">
          </font>
          <font style="margin: 0px; padding: 0px;" size="3">
            <font style="margin: 0px; padding: 0px;" face="Courier New" size="2">#{/form}</font>
          </font>
        </font>
      </p>
    You can add this as a before filter if you want to protect all actions of a hierarchy of controllers. <br /><br />In Play Framework, use a <a href="https://github.com/orefalo/play2-authenticitytoken">Play 2 Authenticity token</a> for this purpose.  Every form post will contain a hidden parameter containing a UUID. The UUID is signed and its signature is stored in the session. When the user submits the form, it includes the UUID and the signature. The validation passes if the signatures match: <i>session.sign=uuid.sign</i>. An attacker who does not have the token cannot generate the correct signature. This protects the application from a CSRF attack. <br /></blockquote>
    <div>
    </div>
  </ul>
  <ul>
    <li>Another way of securing the application against CSRF is using a cookie and a hidden field approach. A detailed example using this method can be seen <a href="https://github.com/jacobgroundwater/Scala-Play-CSRF">here</a>.</li>
    <blockquote>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px; line-height: 1.5em; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;" lang="en-US">Use the "SessionKey" action to help sign a form as shown below:</p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">object Application extends Controller {</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; def login = SessionKey{ (key,signature) =&gt;&amp;nbsp;</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Action { implicit request =&gt;</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Ok( views.html.login(signature) ).withSession( key-&gt;signature )</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>
        </font>
        <span style="line-height: 19.5px; color: rgb(17, 17, 17); font-family: 'Courier New'; font-size: small;">}</span>
        <span style="line-height: 19.5px; color: rgb(17, 17, 17); font-family: 'Courier New'; font-size: small;">}</span>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">When parsing forms use the following to check for the signature:</p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">object Authenticator extends Controller {</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; def login = ValidateForm{&amp;nbsp;</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Action { implicit request =&gt;</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Ok( views.html.index("You're Loggd In") )</span>
        </font>
      </p>
      <p class="western" style="margin: 0.5em 0px 1em; padding: 0px;" lang="en-US">
        <font face="Courier New" color="#111111" size="2">
          <span style="line-height: 19.5px;">&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }</span>
        </font>
        <span style="line-height: 19.5px; color: rgb(17, 17, 17); font-family: 'Courier New'; font-size: small;">&amp;nbsp;}&amp;nbsp;</span>
        <span style="line-height: 19.5px; color: rgb(17, 17, 17); font-family: 'Courier New'; font-size: small;">}</span>
      </p>
    </blockquote>
  </ul>
  <h1>Example</h1>
  <p>A CSRF attack is possible if the application allows a user to change the state of the application in a single request. In this example the web application allows a logged in administrator to create a new user sending a single GET request, as follows:<br /></p>
  <pre>GET http://teammentorexample.com/adduser?username=victim&amp;password=1234&amp;usertype=user HTTP/1.1</pre>
  <p>The attacker discovers that this request will create a new user. He creates his own request which he embeds in an e-mail with the following image tag:</p>
  <pre>
    &lt;img src="http://teammentorexample.com/adduser?username=HACKER&amp;password=TEST&amp;usertype=admin" /&gt;
  </pre>
  <p>When the victim's e-mail client attempts to download the image located at the above source, the request is made without the knowledge of the victim.</p>
  <p>To protect against CSRF, the application should require a two-step authorization mechanism for any change to server state. In this example the server should send the client a nonce value to verify that the admin would indeed like to add this user. The admin would have to verify the action on a separate page and return the nonce value. Only after the server receives the action and verifies the nonce should the user be created.</p>
  <div>
    <h1>Related Items</h1>
    <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">Session Management Guidelines</h1>
    <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);">
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="13ad7fa3-199e-4957-9e4f-39bd931c9f1d" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Protect Session IDs</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="5d296e90-a27c-424a-bfe1-5576490b50c2" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Protect Session Cookies</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="f4218f89-d394-4162-8108-faef064f0f65" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Set the Domain and Path Values of Session Cookies</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="0c4222a4-6028-4191-8dcb-761bbb4d2661" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="b8e65bce-05bb-40b0-bc5b-ea6fe1e3ce96" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Change Session IDs During Authentication</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="05a2cfa6-d015-446b-8c25-3cb13f10d396" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Invalidate Sessions when Users Log Out</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="6ac43864-2644-4f33-bfb2-1366c5c3cb58" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Make Inactive Sessions Time-out</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="19f2779c-14ec-43fb-8e8d-4505cb0801c9" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Include Unique Tokens in HTTP Requests</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="7889a5ad-4e61-41da-97da-d40337050e17" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>
        </b>
      </li>
    </ul>
    <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">Session Management Checklists</h1>
    <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);">
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="9dfbcbed-d897-4df4-b212-9d80fb26cbdf" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Session IDs Are Protected</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="fe0a7400-2140-4e9e-bcc7-f185acce6974" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Session Cookies are Protected</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="932cd357-dfd4-4f95-949b-e407b5299748" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">The Domain and Path Values of Session Cookies Are Strict</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="0679ade9-860f-42e0-b811-2a3434410a76" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="3328e0df-abe9-4339-9eeb-fae6eb54042e" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Session IDs Are Changed During Authentication</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="636b0c98-34d0-4aed-bf06-35f80a6e5551" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Sessions Are Invalidated When Users Log Out</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="22c6bd72-94a7-4b86-9c9b-60d921fbd266" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Inactive Sessions Time-out</a>
        </b>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <b style="margin: 0px; padding: 0px;">
          <a href="178b26f6-689b-4a0e-a117-eadf1af3404c" target="_blank" style="margin: 0px; padding: 0px; color: rgb(51, 51, 153);">Unique Tokens Are Included in HTTP Requests</a>
        </b>
      </li>
    </ul>
  </div>
  <div>
    <h1>Additional Resources</h1>
    <ul>
      <li>Play 2 Authentication Token:&amp;nbsp;<a href="https://github.com/orefalo/play2-authenticitytoken">https://github.com/orefalo/play2-authenticitytoken</a></li>
      <li>Example CSRF mitigation:&amp;nbsp;<a href="https://github.com/jacobgroundwater/Scala-Play-CSRF">https://github.com/jacobgroundwater/Scala-Play-CSRF</a></li>
      <li>
        OWASP Link:&amp;nbsp;<a href="http://www.owasp.org/index.php/Cross-Site_Request_Forgery">http://www.owasp.org/index.php/Cross-Site_Request_Forgery</a></li>
      <li>
        CSRF FAQ:&amp;nbsp;<a href="http://www.cgisecurity.com/articles/csrf-faq.shtml">http://www.cgisecurity.com/articles/csrf-faq.shtml</a></li>
      <li>
        OWASP CSRF Testing:&amp;nbsp;<a href="http://www.owasp.org/index.php/Testing_for_CSRF">http://www.owasp.org/index.php/Testing_for_CSRF</a></li>
    </ul>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>