<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>05454b3e-1732-4383-97f8-2c74a888b9bf</Id>
    <Id_History>496b6306-dca6-48b6-920e-67e768dbe334,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Encode Input Included in Output</Title>
    <Category>Encoding</Category>
    <Phase>Implementation</Phase>
    <Technology>HTML5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Encode Input Included in Output</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* HTML5
* Server-side

==What to Do==

Encode untrusted user input that is going to be included in HTML output. It is recommended to encode user data right before displaying it in HTML contexts. Another option is to encode user data when it is stored. 

==Why==

Encoding untrusted data before displaying it prevents cross-site scripting (XSS) vulnerabilities. 

==How==

To encode input included in output: 

# **Identify all pages that display user input.** Enumerate all the pages used by the application. Then, identify and list all pages that display input that comes from untrusted sources.
# **Identify all user input that is displayed in HTML contexts.** For each page that displays untrusted data, make a list of all untrusted data that is displayed and the context in which it is displayed. Most commonly, untrusted data is displayed as HTML. Other possibilities include displaying user input inside JavaScript or CSS.
# **Implement encoding functions for corresponding contexts.** Different platforms have different capabilities for encoding output. You may need to write your own encoding functions or use third-party libraries to encode output properly.
# **Identify functions that display untrusted user data.** For each instance of untrusted data being displayed by your application, identify the function that outputs the untrusted data. Make a list of these functions and note the code that is directly responsible for displaying untrusted data.
# **To functions that display untrusted data, add calls to encoding functions.** Add calls to encoding functions in a way that all untrusted data is encoded before being displayed. Make sure that output data is encoded correctly for its respective context.

==Essential Server-side Security Guidelines==

* [[e2c5d605-2b34-4e1c-80aa-211a0ad7b64f|Validate All Input]]
* [[397488da-ce91-4768-9ad9-1e6928980d72|Use Prepared Statements for SQL Queries]]
* [[496b6306-dca6-48b6-920e-67e768dbe334|Encode Input Included in Output]]
* [[45d61f0a-c4d3-44f0-93b1-d8205cd13fbe|Force Reauthentication when Executing Critical Functionality]]
* [[fdb460e6-5d18-4e35-a093-4b260155d79e|Include Unique Tokens in HTTP Requests]]
* [[00000000-0000-0000-0000-0000007ecacc|Use Role-based Authorization]]
* [[1445abaf-4bb9-474c-b7e4-7bf58fe80f39|URL-Encode Data in HTTP Response Headers]]

==Essential Server-side Security Checklist Items==

* [[8dfa8088-a6cb-4062-8a44-0df8f2bc1cc4|All Input Is Validated]]
* [[b5fb44c5-1702-42cf-b6be-894c511af7ac|Prepared Statements Are Used for SQL Queries]]
* [[0ee9bc9f-c363-4a2d-be89-f84c069bda65|Input Included in Output Is Encoded]]
* [[1c2b0859-c898-4f1c-b826-21392a7fc773|Reauthentication Is Enforced When Executing Critical Functionality]]
* [[a2ef2a76-e562-4dd0-af9e-a6eb2b76c0d3|Unique Tokens Are Included in HTTP Requests]]
* [[00000000-0000-0000-0000-0000008495ec|Role-based Authorization Is Used]]
* [[3eb26600-9126-493a-a3cf-9d4b9815efc9|Data in HTTP Response Headers Is URL-Encoded]]]]></Data>
  </Content>
</TeamMentor_Article>