<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>eb60ea56-2208-42b8-a502-ae41a2a41cda</Id>
    <Id_History>eb60ea56-2208-42b8-a502-ae41a2a41cda,bb647fc4-da51-48b8-9d5e-3c55b527c193,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Scala Do Not Disclose Valuable Information During Authentication Errors</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>Scala Play</Technology>
    <Type>Code Example</Type>
    <DirectLink>Do Not Disclose Valuable Information During Authentication Errors</DirectLink>
    <Tag />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* Scala and Play Framework 2.1.0+


## Summary ##

Display a generic message when authentication fails. Disclosing information regarding invalid usernames and passwords can help an attacker obtain a list of valid users.


## Problem Example ##

The following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:

~~~~
  def login(p1:Integer) = Action{ implicit request =>
    if (p1==0)
      {
            val message="Wrong Username"
            Ok(html.message.main(message))
      }else if (p1==1){
            val message="Wrong Password"
            Ok(html.message.main(message))
      }else {....}
  }
~~~~


## Solution Example ##

The following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not.

~~~~
  def login(p1:Integer) = Action{ implicit request =>
    if ((p1==0) || (p1==1){
            val message="Authentication failed"
            Ok(html.message.main(message))
      }else {....}
  }
~~~~]]></Data>
  </Content>
</TeamMentor_Article>