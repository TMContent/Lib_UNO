<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>5e3b9d4b-c8d1-4f67-a212-1bc993e03229</Id>
    <Id_History>27bd6cdb-63f9-4f03-843d-1c48f7434e5a,</Id_History>
    <Library_Id>d9c2b53f-5b05-4152-be72-e79d72854707</Library_Id>
    <Title>File Name And Path Manipulation Attack</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>Any</Technology>
    <Type>Attack</Type>
    <DirectLink>File Name And Path Manipulation Attack</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Applies To</h1>
  <p>All applications which use user input to construct the file name or path before accessing a file resource.</p>
  <h1>Description</h1>
  <p>If user input is used to construct a filename or path, it is possible to format that input so that an unintended or protected file is read, modified, or executed instead. This is commonly done by exploiting canonicalization issues or alternate data streams. Command injection may also be possible and would allow the attacker to execute arbitrary commands. The impact of such vulnerabilities is compounded if the application is running with elevated privileges.</p>
  <h1>Impact</h1>
  <ul>
    <li>Command execution via command injection: See&amp;nbsp;<a href="7088b485-e0de-4649-8c0e-1a9c40619436">Command Injection Attack</a></li>
    <li>Reading data from or writing to protected files. Some examples:<ul><li>Making the application load/overwrite another user's configuration or data file.</li><li>Reading from or writing to protected application or system log files.</li></ul></li>
  </ul>
  <h1>Vulnerabilities</h1>
  <ul>
    <li>Lack of or improper validation of user supplied input.</li>
  </ul>
  <h1>Countermeasures</h1>
  <ul>
    <li>Use proper file permissions to ensure that only authorized users can access sensitive files.</li>
    <li>If granular file permissions is not an option, then resolve file names and paths completely and verify them for access.</li>
    <li>Avoid the problem by designing software that does not need user input for filenames. One simple solution is to generate unique random filenames and use a dictionary to associate them with a user supplied label.</li>
  </ul>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information on path manipulation, see the&amp;nbsp;<a href="http://www.owasp.org/index.php/Path_Manipulation">OWASP Path Manipulation</a>&amp;nbsp;article.</li>
  </ul>
  <div>
    <h1>Related Items</h1>
    <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);">
      <li style="margin: 0px; padding: 0px;">
        <a href="3b45dd83-7d7b-4e2e-a5ca-83a9a3eaec56" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Attack: Cross Site Scripting Attack</a>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <a href="7088b485-e0de-4649-8c0e-1a9c40619436" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Attack:&amp;nbsp;Command Injection Attack</a>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <a href="86060870-16cd-4115-a5cf-ba47e61f9f0b" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Attack: XML Injection Attack</a>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <a href="97d61072-14e2-48dd-a1bf-ec149efbcb54" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Guideline: Do Not Rely on Client-Side Validation</a>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <a href="3b46e08b-1e8a-4dbf-b7bc-39a13c8afcbc" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Guideline: Encode All Output Data</a>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <a href="b6795407-d01e-44ec-8aed-a440d388902b" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Guideline: Validate Input for Length, Range, Format, and Type</a>
      </li>
      <li style="margin: 0px; padding: 0px;">
        <a href="af528b9a-af5f-49b8-a314-4578c0b31273" target="_blank" style="margin: 0px; padding: 0px; color: rgb(0, 0, 0); font-weight: bold;">Guideline: Validate Input from All Sources</a>
      </li>
    </ul>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>