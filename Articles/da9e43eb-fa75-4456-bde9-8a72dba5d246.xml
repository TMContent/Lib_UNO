<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>da9e43eb-fa75-4456-bde9-8a72dba5d246</Id>
    <Id_History>84e07253-c65d-4040-a67c-9f6aa5ca3463,</Id_History>
    <Library_Id>d9c2b53f-5b05-4152-be72-e79d72854707</Library_Id>
    <Title>Limit Access to the Credential Store</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>Scala with Play Framework</Technology>
    <Type>Guideline</Type>
    <DirectLink>Limit Access to the Credential Store</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="html">
    <Data><![CDATA[<h1>Applies to</h1>
  <p>Scala and Play Framework 2.1.0+<br /></p>
  <h1>What to Do</h1>
  <p>Limit the access to the credential store.</p>
  <h1>Why</h1>
  <p>Unauthorized access to the credential store can lead to users' credentials being overwritten, thereby allowing the attacker to gain access to application resources without obtaining valid credentials prior to the attack.</p>
  <h1>When</h1>
  <p>Limit access to the credential store any time you have an&amp;nbsp;applicatiom that&amp;nbsp;uses one.</p>
  <h1>How</h1>
  <p>Follow these steps to limit the access to the credential store:</p>
  <ol>
    <li>
      <p>
        <strong>
          <strong style="margin: 0px; padding: 0px;">Do not disclose the location of the store within your application</strong>. </strong>Do not let&amp;nbsp;regular application users know where the store is located.</p>
    </li>
    <li>
      <p>
        <strong>Secure credentials required for accessing the store.&amp;nbsp;</strong>Store your credentials within a configuration file and encrypt them. Place the encryption key within a keystore that is encrypted using a local account password. Alternate way would be to s<span style="line-height: 24px;">tore the necessary sensitive information in Environment variables, and create a mapping to them in the configuration file (e.g.,&amp;nbsp;</span><font face="Courier New" style="line-height: 24px; margin: 0px; padding: 0px;">application.conf</font><span style="line-height: 24px;">&amp;nbsp;file)</span></p>
    </li>
    <li>
      <p>
        <strong>Restrict access to the credential store.&amp;nbsp;</strong>Limit the number of users that can access the store. If it is a file on the local file system, set the appropriate permissions to restrict the read/write access. If it is a database, restrict the accounts that can access the database server.</p>
      <div style="margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;">
        <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; background-color: rgb(255, 255, 255);">
        </ul>
      </div>
    </li>
  </ol>
  <h1>Problem Example</h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;">
    <p style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">The following code authenticates a user based on their credentials. Because the code discloses the credentials to the user database, anybody with access to the code also has access to the credential store.</p>
    <pre style="color: rgb(0, 0, 0); font-weight: normal;">package jdbc

import java.sql.DriverManager
import java.sql.Connection

object ScalaJdbcConnectSelect {

  def main(args: Array[String]) {
    // connect to the database named "mysql" on the localhost
    val driver = "com.mysql.jdbc.Driver"
    val url = "jdbc:mysql://localhost/mysql"
    val username = "root"
    val password = "root"

    var connection:Connection = null

    try {
      // make the connection
      Class.forName(driver)
      connection = DriverManager.getConnection(url, username, password)

      // create the statement, and run the select query
      val statement = connection.createStatement()
      val resultSet = statement.executeQuery("SELECT host, user FROM user")
      while ( resultSet.next() ) {
        val host = resultSet.getString("host")
        val user = resultSet.getString("user")
        println("host, user = " + host + ", " + user)
      }
    } catch {
      case e =&gt; e.printStackTrace
    }
    connection.close()
  }

}</pre>
  </h1>
  <h1>Solution Example</h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;">
    <p style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">The following code authenticates a user based on their credentials. The code relies on other parts of the application to handle database connectivity. Therefore, the code does not reveal the application's credentials to the credential store.</p>
    <pre style="color: rgb(0, 0, 0); font-weight: normal;">package jdbc

import java.sql.DriverManager
import java.sql.Connection
import play.api.Play.current

object ScalaJdbcConnectSelect {

  def main(args: Array[String]) {

    val driver = "com.mysql.jdbc.Driver"
    val url = getString("server.auth.url")
    val username = getString("server.auth.username")
    val password = getString("server.auth.password")

    var connection:Connection = null

    try {
      // make the connection
      Class.forName(driver)
      connection = DriverManager.getConnection(url, username, password)

      // create the statement, and run the select query
      val statement = connection.createStatement()
      val resultSet = statement.executeQuery("SELECT host, user FROM user")
      while ( resultSet.next() ) {
        val host = resultSet.getString("host")
        val user = resultSet.getString("user")
        println("host, user = " + host + ", " + user)
      }
    } catch {
      case e =&gt; e.printStackTrace
    }
    connection.close()
  }

}</pre>
    <span style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">The content of application.conf file would be:</span>
    <pre style="color: rgb(0, 0, 0); font-weight: normal;">include "base.conf"

server.auth.username=${AUTH_USERNAME}
server.auth.password=${AUTH_PASSWORD}
server.auth.url=${AUTH_PASSWORD}</pre>
    <span style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">These values would then be pulled from the environment variables or some other secure location.</span>
    <div style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">
      <br />
    </div>
  </h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">Authentication Guidelines</h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;">
    <div style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">
      <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);">
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="452eaf9a-e3e9-4d9e-ac3e-0f435af837a1">Centralize Authentication Controls</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="ceb2d5c2-fa01-4fc3-bb5a-3cd14c4cf604">Use Server-side Authentication</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="f2f4b099-d01d-4d93-96a2-93ba6e5d085a">Make Sure Authentication Controls Fail Securely</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="479b9ff4-f0fb-4870-8929-8b63b2b7d0b3">Force Re-authentication When Executing Critical Functionality</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="ba64e4ba-9d14-4054-a99e-b6594f9698d6">Validate Usernames Before Processing Them</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="57f0990c-06b9-4f94-ac1e-063773c7988d">Lock Accounts After Consecutive Failed Login Attempts</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="6d74a22d-31d2-4584-9d93-85687ea4a637">Enforce Strong Passwords</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="9d80865a-ddc8-49bd-be15-0f17a0e34383">Force Password Renewal</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="15e9d2b8-445b-4163-88f8-a705e14a5804">Mask All Password Fields</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="5534db32-d558-4e7a-af11-f11e0829c41a">Place Logout Links on All Pages that Require Authentication</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="3142c504-e433-4f9b-bd54-28a11e04877d">Consider Using Two Factor Authentication</a>
          </b>
        </li>
      </ul>
    </div>
  </h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">Authentication Checklists</h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;">
    <div style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">
      <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);">
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="452eaf9a-e3e9-4d9e-ac3e-0f435af837a1">Authentication Controls Are Centralized</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="6d6ecd62-253b-47b1-84a4-f9e112ee3623">Server-side Authentication Is Used</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="a4e8cb3e-1bd0-474f-853a-4226a4354262">Authentication Controls Fail Securely</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="fbb4cdda-8c2e-4099-8e57-e4a9c491775f">Re-authentication Is Enforced When Executing Critical Functionality</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="33fb64e2-51e1-499e-adde-8ac5bae15b26">Usernames Are Validated Before Use</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="40ed1ed0-8081-4675-9e8e-8b83ffbfd7b9">Accounts Are Locked After Consecutive Failed Login Attempts</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="2643951d-7530-4c34-a4a9-3111095dedb6">Strong Passwords Are Enforced</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="5381c4aa-09b2-44f0-bae5-32b9d0230420">Password Renewal Is Enforced</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="bfadd27f-8ade-45cb-8b3d-6e53ff319ed8">All Password Fields Are Masked</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="9dbf9073-871e-4614-9fbf-5b542226d211">All Pages that Use Authentication Have Logout Links</a>
          </b>
        </li>
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="acf6c265-cd3a-470f-bd85-24b1907d3eb1">Access to the Credential Store Is Limited</a>
          </b>
        </li>
      </ul>
    </div>
  </h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);">Authentication Testing</h1>
  <h1 style="margin: 0px; padding: 10px 0px 0px; font-size: 17px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif;">
    <div style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-weight: normal;">
      <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);">
        <li style="margin: 0px; padding: 0px;">
          <b>
            <a href="d4fbf960-c790-4244-9e40-470d382c5b36">How to Test for Account Lockout Bugs in Scala</a>
          </b>
        </li>
      </ul>
    </div>
  </h1>
  <div style="margin: 0px; padding: 0px; color: rgb(17, 17, 17); font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small;">
    <ul style="margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; background-color: rgb(255, 255, 255);">
    </ul>
  </div>]]></Data>
  </Content>
</TeamMentor_Article>