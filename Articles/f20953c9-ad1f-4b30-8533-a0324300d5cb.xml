<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>f20953c9-ad1f-4b30-8533-a0324300d5cb</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>1sink REDUNDANT DONTMAP Allow Managing Access Controls</Title>
    <Category />
    <Phase />
    <Technology>Technology Independent</Technology>
    <Type />
    <DirectLink />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="markdown">
    <Data><![CDATA[## What to Do ##

Make authentication and authorization policies configurable, rather than hard-coded.

## Why ##

Authentication and authorization policies should be configurable to make it possible for the customers to adapt the application's security to their environment.

## How ##

To make authentication and authorization policies configurable:

1. **Identify application requirements.** Define options for configuring access control and authentication policies. At the very least, there should be an administration panel for managing user accounts, and a page for users to manage their own accounts.
2. **Make authentication and authorization code configurable.** Find all code responsible for authentication and authorization features. Modify this code to read settings defined in the application requirements.
3. **Design the administrative pages.** Design the pages to be used for configuring access control and authentication policies based on the requirements for your application.
4. **Implement the administration interface.** Write code for the administrative pages to interface with authentication and authorization code. The administration interface should be able to read and write settings to a secure location, where the authentication and authorization code may access them. The saved settings should be protected with access controls to prevent unauthorized disclosure and tampering.
]]></Data>
  </Content>
</TeamMentor_Article>