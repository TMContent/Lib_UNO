<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>17ecc589-9be2-4429-8dc4-9f61556f63b1</Id>
    <Id_History>17ecc589-9be2-4429-8dc4-9f61556f63b1,a66f4885-e165-4035-b52e-5e406b71b286,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Insecure Transport</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>Technology Independent</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Insecure Transport</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

TLS should be used to protect any sensitive data in transit. Some applications don't use TLS even during authentication or when transmitting sensitive data, and an attacker might be able to intercept such data that is sent over the network unencrypted. 

This vulnerability applies to all applications that send sensitive data over the network. 


==Impact==

Transmitting data without using TLS allows attackers to intercept sensitive information using man-in-the-middle attacks. There are many different attack scenarios that are enabled by not using TLS. One common attack vector is exposed by the Firesheep tool. The Firesheep tool monitors open wireless networks for information about user sessions for some social networking web sites. Once that information has been sniffed from the network, the attacker is able to take over the user's session. Taking over the user's session allows the attacker to view the victim user's data and to impersonate them. This attack would not be possible if the target sites used TLS. 


==Countermeasures==

To prevent insecure transport vulnerabilities, use TLS for all sensitive communications, configure TLS to use strong cipher suites, and use valid certificates. 

* [[00057c8f-dd42-4b98-a327-99c3b87b878f|Use TLS]]
* [[8d7e677e-79ae-46ef-be4e-089bc89d04e1|Use Only Strong TLS Algorithms]]
* [[6e31f64e-8c69-44e7-9627-c3ae6a354c50|Use Valid TLS Certificates]]


==Application Check==

To check for adequate protection against this vulnerability, verify that TLS is used for all sensitive communications, TLS is configured to use strong cipher suites, and valid certificates are used. 

* [[00000000-0000-0000-0000-0000005faaf0|TLS Is Used]]
* [[bf73b0c4-8a20-4981-9a94-173dcb39a5e4|Only Strong TLS Algorithms Are Used]]
* [[ebda696d-a26c-47ef-81db-1d3938402abc|Valid TLS Certificates Are Used]]


==Computer Based Training Links==

Use the following Computer Based Training course(s) for more background information about this type of vulnerabilities.

===OWASP Top Threats & Mitigations===

This course examines in depth the vulnerabilities, threats, and mitigations described in the OWASP Top 10 2013. Upon completion of this class, participants will be able to identify and mitigate the greatest threats that web application developers face, including: Injection, Broken Authentication and Session Management, Cross-Site Scripting (XSS), Insecure Direct Object References, Security Misconfiguration, Sensitive Data Exposure, Missing Function Level Access Control, Cross-Site Request Forgery (CSRF), Using Components with Known Vulnerabilities, and Unvalidated Redirects and Forwards.

[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/139631|DES 221 OWASP Top Threats & Mitigations]]

//Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.//]]></Data>
  </Content>
</TeamMentor_Article>