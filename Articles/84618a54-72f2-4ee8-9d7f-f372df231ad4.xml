<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>84618a54-72f2-4ee8-9d7f-f372df231ad4</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Perform Design Reviews for Cloud Deployments</Title>
    <Category />
    <Phase />
    <Technology>AWS</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="markdown">
    <Data><![CDATA[##Applies To##

- Amazon Web Services (AWS)


##What to Do##

1. Evaluate the design architecture within the cloud deployment.

2. Review design choices in key vulnerability categories defined by your security framework.

3. Conduct an analysis of components and security mechanisms by examining presentation, business, and data access layers.


##Why##

A design review will identify exposure to newly-discovered vulnerabilities, and maintain the overall security posture for cloud deployments.

Reviews provide checkpoints to ensure continuing compliance with accrediting authorities. When a design review identifies areas of concern, rather than working through future security incidents, it is more effective to fix and re-deploy in the present.

NIST SP-800-53 requires a periodic review of configuration management (CM-01) and associated controls.


##When##

Apply design reviews iteratively throughout deployment. When your design evolves, it is also necessary to thoroughly check architecture and source code for potential exposure to threats. Also review configuration changes for adherence with security management policy and guidelines.


##How##

Use a question-driven approach to expose the highest risk design concerns, and use the security frame to dive into areas that reveal common mistakes. The following steps can guide your approach when reviewing the cloud deployment.

1. **Deployment and infrastructure.** Review the design of your application in relation to the target deployment environment and the associated security policies. Consider the restrictions imposed by the underlying infrastructure layer security.

2. **Security frame.** Review the approach to critical areas in your application, including authentication, authorization, input / data validation, exception management, and other areas. Use the application vulnerability categories as a roadmap and back-check, so that you do not overlook any flags during the review.

3. **Tier-by-tier analysis.** Walk through the logical tiers of your application, and evaluate security choices within your presentation, business, and data access layers.

4. **Record design review results.** Use a standard checklist and customize it for your unique application architecture. Walk through the prescribed review checks consistently, being sure to verify that previous assumptions are still valid for current business case and security. Record your findings, and initiate cloud deployment (application and architecture) update requests in accordance with change management policy and procedure.


##Additional Resources##

- [AWS Security Best Practices](http://aws.amazon.com/security/ "AWS Security Best Practices")
- [NIST SP-800-53 Security and Privacy Controls for Federal Information Systems and Organizations](http://csrc.nist.gov/publications/PubsSPs.html "NIST SP-800-53 Security and Privacy Controls for Federal Information Systems and Organizations")
- [Security Architecture and Design Review](https://msdn.microsoft.com/en-us/library/ "Security Architecture and Design Review")
- [Security Code Review in the SDLC](https://www.owasp.org/ "Security Code Review in the SDLC")
]]></Data>
  </Content>
</TeamMentor_Article>