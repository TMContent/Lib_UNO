<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>ae809a14-d985-440a-a572-8ad8bb2e3960</Id>
    <Id_History>9d8cb851-32f6-4459-bf11-e9a5d48f39a6,</Id_History>
    <Library_Id>7d2d0571-e542-45cd-9335-d7a0556c2bea</Library_Id>
    <Title>Authentication Controls Are Centralized</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>Web Application</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Authentication Controls Are Centralized</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* Web Applications

==What to Check For==

Verify that authentication controls are centralized.

==Why==

Implementing a single set of centralized authentication controls helps implement them correctly, use them correctly in the application, and manage them later on.

==How to Check==

To verify that authentication controls are centralized:

# **Identify application requirements.** Consider the following aspects of authentication controls:
## Authentication should be required for all private pages.
## All password fields should be masked.
## Accounts should be locked after multiple failed authentication attempts.
## Authentication should be implemented on the server-side.
## Authentication controls should be centralized.
## Authentication controls should fail securely.
## Strong authentication credentials (passwords) should be enforced.
## Account management functions should be protected.
## User credential (password) changing functions should be protected.
## Re-authentication should be required for sensitive operations.
## Authentication credentials (passwords) should expire.
## Authentication events should be logged.
## Authentication attempts should be throttled.
## Passwords should be hashed and salted.
## Authentication credentials (connection strings) for external resources should be protected.
## Authentication with external services.
# **Identify authentication controls.** Find code that provides authentication controls used by the application. A good place to start looking is by looking at the code that handles the login functionality.
# **Verify that authentication controls are centralized.** Examine the code that provides authentication controls. Make sure that authentication controls are centralized and satisfy application requirements.

==How to Fix==

To centralize authentication controls:

# **Identify application requirements.** Consider the following aspects of authentication controls:
## Authentication should be required for all private pages.
## All password fields should be masked.
## Accounts should be locked after multiple failed authentication attempts.
## Authentication should be implemented on the server-side.
## Authentication controls should be centralized.
## Authentication controls should fail securely.
## Strong authentication credentials (passwords) should be enforced.
## Account management functions should be protected.
## User credential (password) changing functions should be protected.
## Re-authentication should be required for sensitive operations.
## Authentication credentials (passwords) should expire.
## Authentication events should be logged.
## Authentication attempts should be throttled.
## Passwords should be hashed and salted.
## Authentication credentials (connection strings) for external resources should be protected.
## Authentication with external services.
# **Define authentication control APIs.** Make the exposed APIs simple to use for developers. Define authentication APIs to satisfy all application requirements. Include functionality to authenticate with external services.
# **Implement and document authentication controls.** Implement and document authentication APIs to satisfy all application requirements. 
# **Use authentication controls in the application.** Developers should use the centralized authentication controls whenever authentication is necessary.
]]></Data>
  </Content>
</TeamMentor_Article>