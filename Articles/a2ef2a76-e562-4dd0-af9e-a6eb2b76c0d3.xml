<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>a2ef2a76-e562-4dd0-af9e-a6eb2b76c0d3</Id>
    <Id_History>a2ef2a76-e562-4dd0-af9e-a6eb2b76c0d3,24b6e170-359f-43ba-9562-c6bdd417e74c,</Id_History>
    <Library_Id>7d2d0571-e542-45cd-9335-d7a0556c2bea</Library_Id>
    <Title>Unique Tokens Are Included in HTTP Requests</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology>HTML5</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Unique Tokens Are Included in HTTP Requests</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* HTML5

==What to Check For==

Verify that unique tokens are included in HTTP requests in hidden fields.

==Why==

CSRF may be possible when an attacker can form a URL, which performs an action on the behalf of an authenticated user. Forming such URLs becomes much more difficult, if unique tokens are included in HTTP requests. Including difficult to predict token in HTTP requests is an effective defense against CSRF attacks.

==How to Check==

To verify that unique tokens are included in HTTP requests:

# **Identify sensitive operations.** Review the application design and code to identify all operations that require authorization.
# **Identify code that performs sensitive operations.** Identify all pages that are involved in performing sensitive operations. This includes both the pages that link to sensitive operations and the code that actually carries out the sensitive operations.
# **Examine code that performs sensitive operations.** Review each page that allows calling sensitive operations to make sure that it stores a unique token in a session variable. Review each page that allows calling sensitive operations to make sure that it sends the unique token with the request in a hidden field. Review each page that performs sensitive information to make sure that it validates the unique token.

==How to Fix==

To include unique tokens in HTTP requests:

# **Identify sensitive operations.** Review the application design and code to identify all operations that require authorization.
# **Identify code that performs sensitive operations.** Identify all pages that are involved in performing sensitive operations. This includes both the pages that link to sensitive operations and the code that actually carries out the sensitive operations.
# **Choose a method for generating unique tokens.** There are different ways to generate unique tokens. One approach is to use the uniqid function combined with a hash based on current time.
# **Add the unique token to the session.** On each page that links to sensitive operations, add code that generates unique tokens and stores them in session variables.
# **Add unique tokens to HTTP requests.** On each page that links to sensitive operations, add code that sends the generated unique tokens in HTTP requests. One of the simplest ways to do this is to include the tokens in hidden fields in forms.
# **Add token validation code.** On each page that carries out sensitive operations, add code that compares the tokens sent in HTTP requests to the tokens stored in session variables. This ensures that the tokens are generated by the server as a part of normal application workflow and therefore the requested action is being performed by a legitimate user.

==Essential Server-side Security Guidelines==

* [[e2c5d605-2b34-4e1c-80aa-211a0ad7b64f|Validate All Input]]
* [[397488da-ce91-4768-9ad9-1e6928980d72|Use Prepared Statements for SQL Queries]]
* [[496b6306-dca6-48b6-920e-67e768dbe334|Encode Input Included in Output]]
* [[45d61f0a-c4d3-44f0-93b1-d8205cd13fbe|Force Reauthentication when Executing Critical Functionality]]
* [[fdb460e6-5d18-4e35-a093-4b260155d79e|Include Unique Tokens in HTTP Requests]]
* [[00000000-0000-0000-0000-0000007ecacc|Use Role-based Authorization]]
* [[1445abaf-4bb9-474c-b7e4-7bf58fe80f39|URL-Encode Data in HTTP Response Headers]]

==Essential Server-side Security Checklist Items==

* [[8dfa8088-a6cb-4062-8a44-0df8f2bc1cc4|All Input Is Validated]]
* [[b5fb44c5-1702-42cf-b6be-894c511af7ac|Prepared Statements Are Used for SQL Queries]]
* [[0ee9bc9f-c363-4a2d-be89-f84c069bda65|Input Included in Output Is Encoded]]
* [[1c2b0859-c898-4f1c-b826-21392a7fc773|Reauthentication Is Enforced When Executing Critical Functionality]]
* [[a2ef2a76-e562-4dd0-af9e-a6eb2b76c0d3|Unique Tokens Are Included in HTTP Requests]]
* [[00000000-0000-0000-0000-0000008495ec|Role-based Authorization Is Used]]
* [[3eb26600-9126-493a-a3cf-9d4b9815efc9|Data in HTTP Response Headers Is URL-Encoded]]]]></Data>
  </Content>
</TeamMentor_Article>