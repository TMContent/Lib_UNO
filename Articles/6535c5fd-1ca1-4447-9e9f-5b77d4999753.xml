<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>6535c5fd-1ca1-4447-9e9f-5b77d4999753</Id>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Protect Session Cookies</Title>
    <Category />
    <Phase>Implementation</Phase>
    <Technology>Technology Independent</Technology>
    <Type />
    <DirectLink />
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="markdown">
    <Data><![CDATA[## What to Do ##

Set the "Secure" and "HTTPOnly" flags on all sensitive cookies.

## Why ##

Set the "Secure" flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. Setting the "Secure" flag on sensitive cookies ensures they are only transferred over connections that are secured by TLS. The "HTTPOnly" flag prevents the contents of the marked cookie from being accessed by client-side script - this measure helps reduce the potential damage of Cross-Site Scripting attacks.

## How ##

To set the "Secure" and "HTTPOnly" flags on all sensitive cookies:

1. **Verify that TLS is available.** The "Secure" flag forces cookies to be sent over TLS. TLS has to be available for this to work.
2. **Identify sensitive cookies.** Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.
3. **Identify code that creates sensitive cookies.** For each sensitive cookie in the list, find the code that creates that cookie.
4. **Set the "Secure" and "HTTPOnly" flags for each sensitive cookie.** For each piece of code that creates a sensitive cookie, add code that sets the "Secure" and "HTTPOnly" flags for the cookie. ]]></Data>
  </Content>
</TeamMentor_Article>