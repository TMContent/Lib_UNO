<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="3989625" Content_Hash="985518194">
  <Metadata>
    <Id>7a7e322d-c3cf-4624-aa8e-9b4f92844529</Id>
    <Id_History>c9b8ea36-794b-456d-b493-4ee23972060a,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>Be Careful with Canonicalization Issues</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Principle</Type>
    <DirectLink>Be Careful with Canonicalization Issues</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>CPP</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Description</h1>
  <p>Data in canonical form is in its most standard or simplest form. Canonicalization is the process of converting data to its canonical form. File paths and URLs are particularly prone to canonicalization issues and many well-known exploits are a direct result of canonicalization bugs. For example, consider the following string that contains a file and path in its canonical form.</p>
  <pre> c:\temp\somefile.dat</pre>
  <p>The following strings could also represent the same file.</p>
  <pre> somefile.dat<br /> c:\temp\subdir\<br />..\somefile.dat<br /> c:\temp\somefile.dat<br /> ..\somefile.dat<br /> c&amp;#37;3A&amp;#37;5Ctemp&amp;#37;5Csubdir&amp;#37;5C&amp;#37;2E&amp;#37;2E&amp;#37;5Csomefile.dat</pre>
  <p>In the last example, characters have been specified in hexadecimal form: </p>
  <pre> &amp;#37;3A is the colon character.<br />  &amp;#37;5C is the backslash character.<br />  &amp;#37;2E is the dot character. </pre>
  <p>You should generally try to avoid designing applications that accept input file names from the user to avoid canonicalization issues. Consider alternative designs instead. For example, let the application determine the file name for the user.</p>
  <p>If you do need to accept input file names, make sure they are strictly formed before making security decisions such as granting or denying access to the specified file.</p>]]></Data>
  </Content>
</TeamMentor_Article>