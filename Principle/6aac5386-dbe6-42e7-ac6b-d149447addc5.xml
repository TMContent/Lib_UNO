<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-113201222" Content_Hash="-1453912712">
  <Metadata>
    <Id>6aac5386-dbe6-42e7-ac6b-d149447addc5</Id>
    <Id_History>497a66c4-c5a7-400c-8137-93ed0c9ae294,</Id_History>
    <Library_Id>c037d0d2-0617-44f3-b846-21dc3d02c4f8</Library_Id>
    <Title>Assume All Input Is Malicious</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Principle</Type>
    <DirectLink>Assume All Input Is Malicious</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<br />
  <h1>Description</h1>
  <p>Input validation starts with a fundamental supposition that all input is malicious until proven otherwise. Whether input comes from a service, a file share, a user, or a database, validate your input if the source is outside your trust boundary. For example, if you call an external Web service that returns strings, how do you know that malicious commands are not present? Also, if several applications write to a shared database, when you read data, how do you know whether it is safe? </p>]]></Data>
  </Content>
</TeamMentor_Article>