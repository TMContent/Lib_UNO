<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000000a1df2</Id>
    <Id_History>00000000-0000-0000-0000-0000000a1df2,3248a72d-1b97-41e9-b137-29cc9b25022b,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Use TLS to Protect Communications</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>Android</Technology>
    <Type>Code Example</Type>
    <DirectLink>Use SSL to Protect Communications</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* Android applications that transmit sensitive data over the network.
* Android applications that authenticate to a remote server.

==What to Do==

Use TLS to secure network communications.

==Why==

Using TLS to secure network communications prevents eavesdropping attacks.

==How==

To use TLS to protect network connections:

# **Identify all communications performed by the application.** Review the application design to identify all network communications that are performed by the application.
# **Define communication security requirements.** Define which network communications need to be encrypted. All transmissions that include sensitive data should be encrypted, including authentication credentials and session tokens. In some cases, it might be practical to encrypt all network connections.
# **Identify code that sends data over the network.** Identify the code responsible for each network communication that needs to be encrypted.
# **Add code that uses TLS.** There are multiple methods for using TLS in Android to choose from, depending on application requirements. Using the //SSLSocketFactory// class is one of the most common solutions.

==Additional Resources==

* For information about the Android TLS API, see http://developer.android.com/reference/javax/net/ssl/package-summary.html
* For information about the //SSLEngine// class, see http://developer.android.com/reference/javax/net/ssl/SSLEngine.html
* For information about the //SSLSocketFactory// class, see http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html
* For information about the //javax.net.ssl// package, see http://developer.android.com/reference/javax/net/ssl/package-summary.html
* For information on proper TLS configuration in general, see https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet]]></Data>
  </Content>
</TeamMentor_Article>