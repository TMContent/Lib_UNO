<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="70419792" Content_Hash="-1022497354">
  <Metadata>
    <Id>aa0551b8-f0ee-4477-900c-0fbf6bf0ea8e</Id>
    <Library_Id>47a10a30-15ad-4cfd-bf82-00e9bb2037f6</Library_Id>
    <Title>Changes Are Documented</Title>
    <Category>Documentation and Policy</Category>
    <Phase>Implementation</Phase>
    <Technology>Technology Independent</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Changes Are Documented</DirectLink>
    <Tag />
    <Security_Demand />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>PCI DSS Requirement 6.4</li>
  </ul>
  <h1>What to Check For</h1>
  <p>Ensure that all changes to software, including patches, are documented. Check that change-control documentation includes customer impact considerations,&amp;nbsp;management authorization sign-offs,&amp;nbsp;results of functionality testing, and&amp;nbsp;back-out procedures.</p>
  <h1>Why</h1>
  <p>Changes should be documented to help find the cause of a vulnerability in case one is introduced by the changes.</p>
  <h1>How to Check</h1>
  <p>Check that change-control documentation exists and includes the following for each documented change: customer impact considerations, management authorization sign-offs, results of functionality testing, and back-out procedures.</p>
  <h1>How to Fix</h1>
  <p>Designate a testing environment. Prepare a folder for change control documentation. Test and document all changes, including patches, before deploying them. When documenting changes, include customer impact considerations,&amp;nbsp;management authorization sign-offs,
 results of functionality testing, and back-out procedures.</p>
  <h1>Related Items</h1>
  <ul>
    <li>
      <p>
        <a href="/article/524359f0-e51a-4280-998b-cd2171d31918">Implement Change Control Procedures</a>
      </p>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>