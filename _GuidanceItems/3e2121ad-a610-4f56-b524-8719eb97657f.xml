<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>3e2121ad-a610-4f56-b524-8719eb97657f</Id>
    <Id_History>00000000-0000-0000-0000-00000057bb79,</Id_History>
    <Library_Id>c4b9cb6a-4561-4451-9b6c-4e59d73584f6</Library_Id>
    <Title>Use Strong Session Identifiers</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Guideline</Type>
    <DirectLink>Use Strong Session Identifiers</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==
* Java

==What to Do==

Use strong session identifiers if your application keeps session state.

==Why==
Using cryptographically strong session identifiers prevents attackers from easily guessing session ids and taking over users' sessions. If an attacker hijacks the session he/she can perform the same functions as the logged in user. This will lead to a compromise of user account and in case the user is an administrator, the whole application.

==How==
Java //HttpSession// interface uses strong session IDs by default. Please, make sure that your application uses the default. Rewrite the application session state handling code, if necessary, to use the default //HttpServletRequest.getSession// to generate new session ID. 

]]></Data>
  </Content>
</TeamMentor_Article>