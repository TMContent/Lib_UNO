<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000001ab0c1</Id>
    <Id_History>00000000-0000-0000-0000-0000001ab0c1,402e33fe-bd72-424c-ab99-76f094f2e70d,</Id_History>
    <Library_Id>c4b9cb6a-4561-4451-9b6c-4e59d73584f6</Library_Id>
    <Title>URL-encode Data in HTTP Response Headers</Title>
    <Category>Encoding</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Guideline</Type>
    <DirectLink>URL-encode Data in HTTP Response Headers</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* Java

==What to Do==

URL-encode data that gets included in HTTP response headers.

==Why==

Data in HTTP response headers should be URL-encoded to prevent response splitting vulnerabilities.

==How==

To URL-encode data in HTTP Response headers:

# **Identify all data included in HTTP response headers.** Search your code for calls to //setHeader// to find all code that adds data to HTTP response headers.
# **Validate all data included in HTTP response headers.** Use positive validation routines to check all data that gets included in HTTP response headers.
# **URL-encode all data included in HTTP response headers.** Use the //URLEncoder.encode// method to URL-encode data that gets includes in HTTP response headers.

==Additional Resources==

* For more information about the //URLEncoder.encode// method, see http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html]]></Data>
  </Content>
</TeamMentor_Article>