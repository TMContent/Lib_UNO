<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-00000071f956</Id>
    <Id_History>00000000-0000-0000-0000-00000071f956,c5b10110-0718-4885-8907-c59a6f45f15c,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Session Cookies Are Sent Only over TLS</Title>
    <Category>Session Management</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>Session Cookies Are Sent Only over SSL/TLS</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==What to Check For==

Verify that session cookies are sent only using TLS.

==Why==

If session identifiers are transmitted in plain-text, an attacker can intercept them using a man-in-the-middle attack. After intercepting a session identifier, the attacker can hijack the corresponding session. Hijacking a session allows the attacker to carry out any action that is available to the authenticated user. To prevent session identifiers from being sent in plain-text, session cookies should be sent only using TLS.

==How to Check==

To verify that session cookies are sent only using TLS:

# **Load the application and authenticate.** Open the application with a web browser and authenticate. It's okay to start the session in some other way and many applications will create sessions even for users that aren't authenticated. Logging in is a certain way to start a session for any reasonably designed application that uses sessions. Make sure that the application uses TLS - most browsers indicate that with an icon in the URL bar.
# **Examine the session cookies.** Use a web browser option or plugin that shows detailed information about the current cookies. Examine the session cookie created by the application. Make sure that it has the //HTTPOnly// and //Secure// flags set.
# **Examine Web.config.** Review the Web.config configuration file to make sure that //httpOnlyCookies// and //requireSSL// properties are set to //true// for the //httpCookies// element. These settings will actually set //HTTPOnly// and //Secure// flags for all cookies, which is not strictly required to pass this checklist, but these settings are recommended.

==How to Fix==

To send session cookies only using TLS:

# **Configure IIS to use TLS.** Get a valid certificate. Hosting service providers often sell valid TLS certificates. Install the certificate. Create an HTTPS binding for the site. A link in the "Additional Resources" section describes how to do this in detail.
# **Set the //Secure// flag on cookies.** Set the //requireSSL// property to //true// for the //httpCookies// element in the web.config file, like this: <httpcookies requiressl="true"></httpcookies> If you use Forms Authentication, you will also need to set //requireSSL// to //true// for the //forms// element.  

==Additional Resources==

* For information about setting up TLS on IIS, see http://www.iis.net/learn/manage/configuring-security/how-to-set-up-ssl-on-iis]]></Data>
  </Content>
</TeamMentor_Article>