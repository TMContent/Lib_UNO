<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>dfa8e3fe-a23e-48e6-b523-e6ee49bbd91d</Id>
    <Id_History>00000000-0000-0000-0000-000000417cfc,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Insufficiently Protected Credentials</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Vulnerability</Type>
    <DirectLink>Insufficiently Protected Credentials</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Description==

An insufficiently protected credential weakness occurs when the application doesn't store or transmit the authentication credentials securely. An attacker may be able to recover stored passwords after compromising the application, if the passwords are not hashed and salted. An attacker may be able to intercept passwords or hashes as a result of a man-in-the-middle attack, if the passwords or hashes are not encrypted during transmission. All applications that use authentication are affected by this vulnerability type. To prevent this vulnerability type, hash and salt stored passwords and send authentication credentials over encrypted tunnels. To make sure that adequate protection against this vulnerability type is in place, verify that passwords are hashed and salted for storage and that authentication credentials are never sent in plain-text.

==Impact==

An insufficiently protected credential vulnerability makes it easier for an attacker to gain access to the authentication credentials. Usually, some other vulnerability has to be present for the attacker to recover the credentials. Once the attacker has the credentials, he can impersonate the user whose credentials have been compromised. Malicious hackers usually target privileged accounts to take over the application. After taking over the application, an attacker may leverage other vulnerabilities to take over the application platform and use it to pivot for other attacks. The attacker may also be interested in user data or impersonating the user and compromising the authentication credentials allows him to do that.

==Countermeasures==

Implement all of the following countermeasures to protect the credentials stored by your application. 

* [[00000000-0000-0000-0000-0000006adfa3|Store Passwords Securely]]
* [[00000000-0000-0000-0000-000000960e37|Use SSL to Communicate Authentication Credentials]]

==Checklists==

Use the following checklist item to make sure that the credentials stored by your application are sufficiently protected. 

* [[00000000-0000-0000-0000-00000077a50c |Passwords Are Stored Securely]]
* [[00000000-0000-0000-0000-0000008f91de|SSL Is Used to Communicate Authentication Credentials]]

==Additional Resources==

* For the CWE page about insufficiently protected credentials, see http://cwe.mitre.org/data/definitions/522.html
]]></Data>
  </Content>
</TeamMentor_Article>