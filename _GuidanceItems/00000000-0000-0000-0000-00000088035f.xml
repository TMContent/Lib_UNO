<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-00000088035f</Id>
    <Id_History>00000000-0000-0000-0000-00000088035f,9990a566-4071-4846-ace9-91f1c9fb7ee1,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Avoid Using External Commands</Title>
    <Category>Dangerous APIs</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Code Example</Type>
    <DirectLink>Avoid Using External Commands</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* Java

==What to Do==

Avoid using external commands. Consider if it's possible to replace calls to external commands with some application code. In some cases, the functionality provided by the external command might not be worth the risk and the call to it can be simply removed.

==Why==

Applications often use external commands to carry out some functionality. This helps programmers save time by having to write less code. Calling external commands is dangerous, as it creates the risk of introducing command injection vulnerabilities in your application. Command injection vulnerabilities allow attackers to execute external commands other than the ones intended by application. Most APIs used to execute external commands do not inherently provide protection against command injection. As a result, likelihood of introducing such vulnerability when calling external command is high.  It is recommended to avoid using external commands. 

==How==

To avoid using external commands:

# **Find all code that executes external commands.** Search the application code for the following keywords to find all code that executes external commands: //getRuntime//, //exec//, //start//, //ProcessBuilder//.
# **Identify all calls to external commands that include user input.** Narrow down the list of calls to external commands to those that include user data in parameters or, even worse, in deciding which application to run. 
# **Determine if calls to external commands can be replaced.** For each piece of code that executes external commands, consider if it can be replaced with code that does the same thing without external commands or whether this code can be removed altogether.
# **Replace calls to external commands.** Rewrite each piece of code that executes external commands without calling external commands or remove such code altogether.]]></Data>
  </Content>
</TeamMentor_Article>