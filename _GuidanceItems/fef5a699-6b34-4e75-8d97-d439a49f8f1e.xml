<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>fef5a699-6b34-4e75-8d97-d439a49f8f1e</Id>
    <Id_History>00000000-0000-0000-0000-0000001b501f,</Id_History>
    <Library_Id>7d2d0571-e542-45cd-9335-d7a0556c2bea</Library_Id>
    <Title>The Strict-Transport-Security Header is Used to Enforce HTTPS</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>HTML5</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>The Strict-Transport-Security Header is Used to Enforce HTTPS</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==
* HTML5

==What to Check For==
Check that the directive //Strict-Transport-Security       max-age=(time value)// is present in the HTTP Server Response.
 
==Why==
The Strict-Transport-Security header instructs the browser to communicate with the server only via HTTPS, a secure communication tunnel that prevents eavesdropping. Without the header, there is no way for the browser to “know” that a web page should be accessed over HTTPS. This leaves open the possibility of using standard, unencrypted HTTP, whether through a malicious link or direct URL access. 

==How To Check==
    #  **Check that the //mod_header// module is enabled in the //httpd.conf// file**. Find the //httpd.conf// file on your filesystem. This file is usually located in // /etc/httpd/httpd.conf// (consult your Web Server distribution documentation for the exact file location). Make sure that the line //LoadModule headers_module modules/mod_headers.so// appears in the file; this line enables //mod_header//. Apache Web servers must be compiled with support for //mod_header// for this to work.
    # **Check that the HSTS Header appears in the //httpd.conf// file**. View the //httpd.conf// file and make sure that the line //Strict-Transport-Security "max-age=7776000;includeSubDomains"// is present. This line enables HTTP Strict Transport Security.
    # **Reload or restart the Web Server configuration**. If you made changes to the //httpd.conf// file, stop and restart the Web server. For example, with Apache2, execute the command ///etc/init.d/apache2 stop// to stop the server and ///etc/init.d/apache2 start// to restart it.

==How To Fix==
Note that, as of this writing, the latest releases of Mozilla Firefox, Google Chrome, and Opera all support the HSTS header. However, Internet Explorer does not.

# **Enable the //mod_header// module in the //httpd.conf// configuration file (if it is not already enabled).** For example, if you are using Apache Web Server, first enable
//LoadModule headers_module modules/mod_headers.so//
# **Add the HSTS header to the //httpd.conf// configuration file.** Include the required directive //max-age//. This specifies the time, in seconds, that a compliant browser will abide by forced HTTPS, even in the event a standard HTTP connection is attempted. For example, in the Apache //httpd.conf// configuration file, add the following line: //Header always append Strict-Transport-Security: "max-age=7776000"//. This directive instructs the browser to connect only via HTTPS for the next 90 days. The server will inject this header information into each application page rendered.
# **Reload or restart the web server configuration.** The first time the user connects to your website using HTTPS, the browser reads the HSTS header, including the //max-age// directive. The browser will know it should connect only via HTTPS for the specified //max-age// time period.

==Additional Resources==
    *For information on the Strict-Transport-Security header, see: http://tools.ietf.org/html/draft-ietf-websec-strict-transport-sec-14#section-6.1
    *For information on the TLS protocol specs, see: http://tools.ietf.org/html/rfc5246
    *For a list of useful HTTP headers, see: https://www.owasp.org/index.php/List_of_useful_HTTP_headers


==HTTP Header Guidelines==

* [[00000000-0000-0000-0000-00000028bb7d|Use X-Content-Security-Policy to Mitigate XSS]]
* [[00000000-0000-0000-0000-0000009026c0|Use X-XSS-Protection to Prevent Reflected XSS]]
* [[00000000-0000-0000-0000-000000204a22|Use X-Frame-Options to Prevent ClickJacking]]
* [[9e0f93ba-0b80-4aab-b93c-c17b9af2a19c|Use a Filter to Inject X-Frame-Options]]
* [[ae2dc4f8-af3d-4002-9417-f3f1d5c9128b|Add X-Frame Options to Responses]]
* [[00000000-0000-0000-0000-00000063561d|Use the Strict-Transport-Security Header to Enforce HTTPS]]
* [[00000000-0000-0000-0000-000000225f24|Use includeSubDomains with Strict-Transport-Security]]

==HTTP Header Checklist Items==

* [[00000000-0000-0000-0000-0000006b6766|X-Content-Security-Policy Is Used to Mitigate XSS]]
* [[00000000-0000-0000-0000-0000007122c6|X-XSS-Protection Is Used to Prevent Reflected XSS]]
* [[00000000-0000-0000-0000-000000498810|X-Frame-Options Are Used to Prevent Clickjacking]]
* [[0d1871fe-76d3-4ea3-87be-ef63662dd772|A Filter Is Used to Inject X-Frame Options]]
* [[26caffea-d597-40fd-9ed0-36fb025d188b|X-Frame Options Are Added to Responses]]
* [[00000000-0000-0000-0000-0000001b501f|The Strict-Transport-Security Header is Used to Enforce HTTPS]]
* [[0078cd3f-9e84-4eb4-9a2f-7f51e3100801|IncludeSubDomains is Used with Strict-Transport-Security]]
]]></Data>
  </Content>
</TeamMentor_Article>