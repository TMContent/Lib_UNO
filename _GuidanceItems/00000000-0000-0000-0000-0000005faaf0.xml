<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000005faaf0</Id>
    <Id_History>00000000-0000-0000-0000-0000005faaf0,4acd1166-2287-45b9-b5a3-4336e512fba5,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>TLS Is Used to Protect Communications</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>iOS</Technology>
    <Type>Checklist Item</Type>
    <DirectLink>SSL Is Used to Protect Communications</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="wikitext">
    <Data><![CDATA[==Applies To==

* iOS applications that send or receive sensitive data over the network.

==What to Check For==

Verify that TLS is used to protect network connections.

==Why==

Proper use of TLS to encrypt network communications prevents eavesdropping attacks and other types of man-in-the-middle attacks.

==How to Check==

To verify that TLS is used to protect network connections:

# **Identify all communications performed by the application.** Review the application design to identify all network communications that are performed by the application.
# **Review communication security requirements.** Examine which network communications need to be encrypted. All transmissions that include sensitive data, including authentication credentials and session IDs, should be encrypted. In some cases, it might be practical to encrypt all network connections.
# **Identify code that uses the network.** Identify code that is responsible for each network communication that needs to be encrypted.
# **Verify that TLS is used to protect network connections.** Examine code that is responsible for network connections that need to be encrypted and make sure that it uses TLS.

==How to Fix==

To use TLS to protect network connections:

# **Identify all communications performed by the application.** Review the application design to identify all network communications that are performed by the application.
# **Define communication security requirements.** Define which network communications need to be encrypted. All transmissions that include sensitive data should be encrypted. In some cases, it might be practical to encrypt all network connections.
# **Identify code that uses the network.** Identify code that is responsible for each network communication that needs to be encrypted.
# **Add code that uses TLS.** Rewrite code that performs sensitive network communications to use TLS. The //NSURLRequest// and //NSURLConnection// classes support TLS with an acceptably secure default configuration starting with iOS 5 - this is the most practical way to use TLS on iOS and should be sufficient for most applications. 

==Additional Resources==

* For more information about the //NSURLRequest// class, please see http://developer.apple.com/library/ios/#DOCUMENTATION/Cocoa/Reference/Foundation/Classes/NSURLRequest_Class/Reference/Reference.html
* For more information about the //NSURLConnection// class, please see https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/nsurlconnection_Class/Reference/Reference.html
* For the "URL Loading System Programming Guide", please see http://developer.apple.com/library/ios/#DOCUMENTATION/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.html
* For more information on proper TLS configuration in general, please see https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet]]></Data>
  </Content>
</TeamMentor_Article>