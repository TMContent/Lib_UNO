<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="0" Content_Hash="0">
  <Metadata>
    <Id>00000000-0000-0000-0000-0000008d3cec</Id>
    <Id_History>00000000-0000-0000-0000-0000008d3cec,27c47c6c-e6b4-4570-adac-42e738c59da1,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Canonicalize File Names and Paths</Title>
    <Category>Canonicalization</Category>
    <Phase>Implementation</Phase>
    <Technology>Android</Technology>
    <Type>How To</Type>
    <DirectLink>Canonicalize File Names and Paths</DirectLink>
    <Author />
    <Priority />
    <Status />
  </Metadata>
  <Content Sanitized="false" DataType="WikiText">
    <Data><![CDATA[==Applies To==

* Android applications that access files based on input.

==What to Do==

Canonizalize and validate all file paths that include input data.

==Why==

Canonicalizing file paths before validating them helps prevent unauthorized access. If a file path is not canonicalized, an attacker may use special characters to access resources outside of what is allowed by the application.

==How==

To canonicalize file names and paths:

# **Identify all input used for file access.** Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.
# **Canonicalize all input data used for file access.** Use the //getCanonicalPath// method to get the canonical path to a file.
# **Validate file paths.** Verify that the user or application is authorized to access the specified resource.
]]></Data>
  </Content>
</TeamMentor_Article>