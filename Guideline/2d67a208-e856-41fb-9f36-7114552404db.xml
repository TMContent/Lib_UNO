<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1483350857" Content_Hash="-1730049448">
  <Metadata>
    <Id>2d67a208-e856-41fb-9f36-7114552404db</Id>
    <Id_History>d9a4ad0c-9d88-46a5-9a46-007b265a6246,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Do Not Hard Code Connection Strings</Title>
    <Category>Data Access</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Do Not Hard Code Connection Strings</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Srinath Vasireddy, Ashish Babbar, Rico Mariani, and Alex Mackman</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>Do not hard code connection string in your assembly. Store connection strings externally, for example in configuration files.</p>
  <h1>Why</h1>
  <p>An attacker with access to your application can extract this information directly from the assembly. An attacker can use a decompiler to reconstitute your code, and make discovery of this information even easier.</p>
  <h1>How</h1>
  <p>In .NET 2.0, store connection strings in the &lt;<b>connectionStrings</b>&gt; section of Web.config file, as shown in the following configuration example.</p>
  <pre>
    <pre>&lt;configuration&gt;<br />&amp;nbsp;&lt;connectionStrings&gt;&amp;nbsp; <br />&amp;nbsp;&amp;nbsp; &lt;add name="MyDbConn" <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; connectionString="Server=MyServer; Database=pubs; User Id=MyUser; password=P@ssw0rd"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; providerName="System.Data.SqlClient" /&gt;<br />&amp;nbsp;&lt;/connectionStrings&gt;<br />&lt;/configuration&gt;
  </pre>
  </pre>
  <p>To use the connection string in your application, simply access the string value at run time as shown in the following example.</p>
  <div>
    <div>
      <div>
      </div>
    </div>
    <pre>string dbConn = ConfigurationManager.ConnectionString["MyDbConn"].ToString();  </pre>
  </div>
  <p>Sensitive data items such as connection string stored in configuration files should be encrypted. Encrypting connection strings is particularly important if they contain user credentials; for example, connection strings used with SQL authentication.</p>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>