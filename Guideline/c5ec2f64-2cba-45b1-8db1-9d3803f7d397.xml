<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-738406383" Content_Hash="939205572">
  <Metadata>
    <Id>c5ec2f64-2cba-45b1-8db1-9d3803f7d397</Id>
    <Id_History>c5ec2f64-2cba-45b1-8db1-9d3803f7d397,f87c6d9c-545b-49b2-a016-b565b9f95696,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Use Mirrored Local Accounts If Domain Accounts Are Unavailable</Title>
    <Category>Database Security</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Use Mirrored Local Accounts If Domain Accounts Are Unavailable</DirectLink>
    <Tag>ASP.NET,ASP.NET 3.5,ASP</Tag>
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>You should only use mirrored local authentication to connect if domain accounts are unavailable. With mirrored local accounts, you configure two accounts on each server with identical user names and passwords. You must ensure that the passwords remain the same.</p>
  <h1>Why</h1>
  <p>Domain accounts offer several advantages over mirrored local accounts:</p>
  <ul>
    <li>You can enforce Active Directory password policies. <li>Active Directory provides a single identity store with a single set of management tools. You do not have to maintain a separate set of SQL accounts. <li>No credentials are passed over the network during authentication and you do not need to embed user names and passwords in the database connection string. This means that malicious users or attackers cannot obtain the credentials either by monitoring the network or by viewing connection strings inside your configuration files. <li>You benefit from centralized account management. User accounts are subject to normal account management security policies such as password expiration periods, minimum lengths, and account lockout after multiple invalid logon requests.</li></li></li></li>
  </ul>
  <p>For these reasons Mirrored Local Accounts is a less attractive option and should only be pursued if Domain accounts are unavailable.</p>
  <h1>When</h1>
  <p>Use Domain accounts whenever possible. If the following conditions exist, you'll need to use mirrored local accounts instead:</p>
  <ul>
    <li>Your database client and database server are separated by a firewall which prevents Kerberos or NTLM authentication. <li>Your application server and database server are in separate domains with no trust.</li></li>
  </ul>
  <h1>How</h1>
  <ol>
    <li>You still use Windows authentication, but you create two local accounts with the same name and password on the Web server and database server. <li>You configure your application to run using the local account created on the Web server and create a SQL login for the local account on the database server. <li>With this approach, you must ensure that the passwords of the two accounts remain in synchronization. </li></li></li>
  </ol>
  <p>If you use SQL Authentication you must:</p>
  <ul>
    <li>Manage the credentials yourself. <li>Protect the credentials in the connection string. <li>(Potentially) protect the credentials passed over the network from the Web server to the database.</li></li></li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <div>
        <a href="/article/4acdbf17-08dc-4226-a2ec-485c7893594f">Use Windows Authentication When Connecting to SQL Server</a>
      </div>
    </li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>