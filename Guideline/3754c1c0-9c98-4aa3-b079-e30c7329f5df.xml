<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1442482006" Content_Hash="-45599220">
  <Metadata>
    <Id>3754c1c0-9c98-4aa3-b079-e30c7329f5df</Id>
    <Id_History>5a5b9175-94d4-4938-8228-834b083ff12d,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Do Not Persist Authorization Cookies</Title>
    <Category>Authorization</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Andy Wigley, Kishore Gopalan</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>ASP.NET 2.0 </li>
  </ul>
  <h1>What to Do</h1>
  <p>Do not persist authorization cookies. </p>
  <h1>Why</h1>
  <p>Persistent authorization cookies will be stored in a user's profile and can be stolen if an attacker gets physical access to the machine.&nbsp; This will also help prevent problems for users who access your application from public or shared machines and forget to log out. </p>
  <h1>When</h1>
  <p>All applications which use authorization cookies should ensure that they are not persisted. </p>
  <h1>How</h1>
  <p>The following example shows a &lt;roleManager&tg; element configured to protect the authorization cookie. </p>
  <pre>&lt;roleManager enabled="true"<br />             cacheRolesInCookie="true"<br />             cookieName=".ASPROLES"<br />             cookieTimeout="30" <br />             cookiePath="/"<br />             cookieRequireSSL="true"<br />             cookieSlidingExpiration="true"<br />             cookieProtection="All"<br />             createPersistentCookie="false"&gt;<br />&lt;/roleManager&gt;</pre>
  <h1>
  </h1>
  <p />
  <p />
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>