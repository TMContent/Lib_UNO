<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-80841313" Content_Hash="1687405188">
  <Metadata>
    <Id>6d737563-9ae4-42e8-9c8d-c7ac4343a0cf</Id>
    <Id_History>6d737563-9ae4-42e8-9c8d-c7ac4343a0cf,231f0cdc-2ee9-4221-8145-f071883b98cb,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>[SINK] Protect Sensitive Data Over the Wire</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Protect Sensitive Data Over the Wire</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Consider where items of sensitive data, such as credentials and application-specific data, are transmitted over a network link. Use a protocol that boasts adequate/strong encryption to protect said data. </p>
  <h1>Why</h1>
  <p>The internet is full of abstractions and layers. When data is sent over a wire, it typically passes through several intermediate relays on it's way towards&amp;nbsp;some final destination. Using a safe protocol to transmit information is important because it adds protection against inadvertent eavesdropping and modification in mid transport. </p>
  <h1>When</h1>
  <p>This is appropriate whenever sensitive data needs to be sent between two hosts, whether it is using the public internet or a private LAN as a transmission medium. </p>
  <h1>How</h1>
  <p>If you need to send sensitive data between the Web server and browser, consider using SSL. If you need to protect server-to-server communication, such as between your Web server and database, consider IPSec or SSL.&amp;nbsp;&amp;nbsp;</p>
  <h1>Related Items</h1>
  <ul>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>