<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1077877516" Content_Hash="1730259072">
  <Metadata>
    <Id>a6d19914-4cdd-415e-aaf6-b867e9d50390</Id>
    <Id_History>d8b2f6ba-3598-483d-b7b3-29f91f2d53ce,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Consider an Exception Management System</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Consider an Exception Management System</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Srinath Vasireddy, Ashish Babbar, Rico Mariani, and Alex Mackman</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>Consider using a formal exception management system for your applications.</p>
  <h1>Why</h1>
  <p>This can help improve system supportability and maintainability and ensure that you detect, log, and process exceptions in a consistent manner.</p>
  <h1>When</h1>
  <p>This is an important guideline and should be followed weherever possible.</p>
  <h1>How</h1>
  <p>To build successful and flexible applications that can be maintained and supported easily, you must adopt an appropriate strategy for exception management. You must design your system to ensure that it is capable of the following: </p>
  <ul>
    <li>Detecting exceptions. </li>
    <li>Logging and reporting information. </li>
    <li>Generating events that can be monitored externally to assist system operation. </li>
  </ul>
  <p>An exception management system should be well encapsulated and should abstract the details of logging and reporting from the application's business logic. It should also be capable of generating metrics that can be monitored by operators to provide an insight into the current health and status of the application. This helps to create an application that can quickly and accurately notify operators of any problems it is experiencing, and can provide valuable information to assist developers and support services with problem resolution.</p>
  <h1>Additional Resources</h1>
  <p>For information about how to create an exception management framework and about best practices for exception management in .NET applications, see: </p>
  <ul>
    <li>"Exception Management Architecture Guide" in the MSDN Library at <a href="http://msdn.microsoft.com/en-us/library/Ee817665(pandp.10).aspx">http://msdn.microsoft.com/en-us/library/Ee817665(pandp.10).aspx</a>.</li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>