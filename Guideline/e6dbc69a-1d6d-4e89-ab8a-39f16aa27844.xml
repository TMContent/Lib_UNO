<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="585783118" Content_Hash="805516697">
  <Metadata>
    <Id>e6dbc69a-1d6d-4e89-ab8a-39f16aa27844</Id>
    <Id_History>e6dbc69a-1d6d-4e89-ab8a-39f16aa27844,7cc7ff4a-c814-4d9d-ae6a-199251da2ee6,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Consider Restricting the Permissions of Dynamically Generated Assemblies</Title>
    <Category>Dangerous APIs</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Consider Restricting the Permissions of Dynamically Generated Assemblies</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Restrict the permissions available to dynamically created assemblies by using the overload of the <b>AppDomain.DefineDynamicAssembly</b> method.</p>
  <h1>Why</h1>
  <p>If an attacker can influence the code generation, the attacker could coerce your application into generating malicious code. This is particularly significant if your code uses user-supplied input to generate code dynamically.</p>
  <h1>When</h1>
  <p>When your application dynamically generates code.</p>
  <h1>How</h1>
  <p>Restrict the permissions available to dynamically created assemblies by using the overload of the <b>AppDomain.DefineDynamicAssembly</b> method, which accepts three permission sets and evidence, as shown in the following example.</p>
  <pre>public sealed AssemblyBuilder DefineDynamicAssembly(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AssemblyName name, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AssemblyBuilderAccess access, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Evidence evidence, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PermissionSet requiredPermissions, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PermissionSet optionalPermissions, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PermissionSet refusedPermissions<br />);  </pre>
  <p>This overload allows you to pass required, optional, and refused permission sets to apply specific security policy to the dynamically created assembly. Passing the evidence forces the CLR to evaluate the permission set for dynamic created code.</p>
  <blockquote>
    <b>Note</b>&nbsp;&nbsp;&nbsp;If you use an overload that does not accept evidence, then the CLR does not evaluate the permission set for the created dynamic assembly. Instead, the permission set granted to the generated code is inherited from the permission set of the assembly that is emitting it.</blockquote>
  <h1>&nbsp;</h1>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>