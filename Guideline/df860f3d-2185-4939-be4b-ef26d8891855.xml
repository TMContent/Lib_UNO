<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="2100602374" Content_Hash="1034869018">
  <Metadata>
    <Id>df860f3d-2185-4939-be4b-ef26d8891855</Id>
    <Id_History>df860f3d-2185-4939-be4b-ef26d8891855,88cd38c8-054e-4ffb-9dab-ce9903c00a64,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Remove Test Interfaces</Title>
    <Category>Hardening</Category>
    <Phase>Deployment</Phase>
    <Technology>Java</Technology>
    <Type>Guideline</Type>
    <DirectLink>Remove Test Interfaces</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>Applications written using Servlets or JSP.</li>
  </ul>
  <h1>What to Do</h1>
  <p>Remove all public interfaces used for testing the application.</p>
  <h1>Why</h1>
  <p>Test interfaces add extra functionality that is not intended for the released application. Often these interfaces will be used by a test team to gain information or drive functionality that would be dangerous in the hands of an attacker.</p>
  <h1>When</h1>
  <p>If your application contains test interfaces remove them before deployment.</p>
  <h1>How</h1>
  <p>To remove all test interfaces:</p>
  <ol>
    <li>
      <p>
        <strong>Identify all test APIs</strong>: Enumerate all public APIs. Identify which APIs are intended for application use and which APIs are intended for test purposes. Ideally these interfaces will already be documented&nbsp;properly and can be discovered through specifications.</p>
      <li>
        <p>
          <strong>Remove the test interfaces</strong>: Code removal is a straight forward procedure. Once the test code is identified, it should be isolated from the application and removed from your code base.</p>
      </li>
    </li>
  </ol>
  <h1>Problem Example</h1>
  <p>The following code shows the user management system for an application. Because the class contains test APIs, it is possible for a malicious user to execute untested code and possibly exploit any vulnerabilities in it.</p>
  <pre>public final class UserManager<br />&#123;<br />      public UserManager()<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean addUser(User user, char&#91;&#93; pass, char&#91;&#93; verifyPass)<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean removeUser(User user)<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean modifyUser(User user)<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean changePass(User user, char&#91;&#93; oldPass,<br />                                char&#91;&#93; pass, char&#91;&#93; verifyPass)<br />      &#123;<br />            ...<br />      &#125;<br />      // The class contains test APIs<br />      public void addTestUsers()<br />      &#123;<br />            ...<br />      &#125;<br />&#125;</pre>
  <h1>Solution Example</h1>
  <p>The following code shows the user management system for an application. Because the test API is removed from the class, there is no untested code that a malicious user can attack.</p>
  <pre>// The class contains no test APIspublic final class UserManager<br />&#123;<br />      public UserManager()<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean addUser(User user, char&#91;&#93; pass, char&#91;&#93; verifyPass)<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean removeUser(User user)<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean modifyUser(User user)<br />      &#123;<br />            ...<br />      &#125;<br />      public boolean changePass(User user, char&#91;&#93; oldPass,<br />                                char&#91;&#93; pass, char&#91;&#93; verifyPass)<br />      &#123;<br />            ...<br />      &#125;<br />&#125;</pre>]]></Data>
  </Content>
</TeamMentor_Article>