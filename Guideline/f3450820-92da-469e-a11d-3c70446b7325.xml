<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="109988591" Content_Hash="-1012697771">
  <Metadata>
    <Id>f3450820-92da-469e-a11d-3c70446b7325</Id>
    <Id_History>69733f2b-b0d0-4b66-94b6-3135735b5779,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Do Not Leave the System Vulnerable After Unrecoverable Errors</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Guideline</Type>
    <DirectLink>Do Not Leave the System Vulnerable After Unrecoverable Errors</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status>Release</Status>
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Ensure that errors and exceptions that cannot be recovered from do not cause the application to be left in a vulnerable state. </p>
  <h1>Why</h1>
  <p>Some systems become vulnerable after an error occurs, because the default behavior is to simply stop executing certain code when encountering an error.&amp;nbsp; </p>
  <h1>When</h1>
  <p>This rule needs to be applied for all code segments that contain any code capable of generating or propagating unrecoverable errors. If there is even one place in the code where this constraint is not satisfied, a system state will eventually occur that causes an unrecoverable, unhandled exception. </p>
  <h1>How</h1>
  <p>Handling unrecoverable exceptions properly involves a few steps: Declare a global error handler to trap all errors. This ensures that at the very least, all exceptions are caught. Use structured exception management by using try/catch/finally blocks, there is a consistent way to cleanup from errors and ensure that the exception does not allow for inconsistent, insecure states. </p>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/e4a3052e-13f2-4062-9a83-49185ff14b0a">Centralize Error Handling</a>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>