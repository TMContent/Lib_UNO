<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1510273035" Content_Hash="1166489282">
  <Metadata>
    <Id>0eaa958c-e57d-4ba7-8c9e-efc33c479b16</Id>
    <Id_History>0eaa958c-e57d-4ba7-8c9e-efc33c479b16,9b45a2ad-71d0-4057-8d2b-d640fda2d86d,</Id_History>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>Implement BeforeSendReply Method to Validate Outbound Messages on the Service</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Implement BeforeSendReply Method to Validate Outbound Messages on the Service</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 
<li>Microsoft Visual Studio® 2008</li></li>
  </ul>
  <h1>What to Do</h1>
  <p>If you need to perform validation on service of outbound messages, implement the BeforeSendReply of the interface IDispatchMessageInspector of the message inspector. </p>
  <h1>Why</h1>
  <p>This will validate the message before sending the response to the client and the service operation invocation and serialization.</p>
  <h1>When</h1>
  <p>Outbound message validation will be required if you want to validate the message, before sending the response to the client, so you can validate output parameters, message and data contracts.</p>
  <h1>How</h1>
  <p>Following code example shows how to implement the BeforeSendReply method.</p>
  <pre>void IDispatchMessageInspector.BeforeSendReply(ref System.ServiceModel.Channels.Message reply, object correlationState)<br />{<br />    try<br />    {<br />        validateMessage(ref reply);                <br />    }<br />    catch (FaultException fault)<br />    {<br />        // if a validation error occurred, the message is replaced<br />        // with the validation fault.<br />        reply = Message.CreateMessage(reply.Version, new FaultException("validation error in reply message").CreateMessageFault() , reply.Headers.Action);<br />    }<br />}</pre>
  <h1>Additional Resources</h1>
  <ul>
    <li>For more information, see “How to: Inspect and Modify Messages on the Service” at <a href="http://msdn2.microsoft.com/en-us/library/ms733104.aspx">http://msdn2.microsoft.com/en-us/library/ms733104.aspx</a><li>For more information, see “How to: Inspect or Modify Parameters” at <a href="http://msdn2.microsoft.com/en-us/library/ms733747.aspx">http://msdn2.microsoft.com/en-us/library/ms733747.aspx</a></li></li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>