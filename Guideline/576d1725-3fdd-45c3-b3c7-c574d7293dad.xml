<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="2017123643" Content_Hash="1145898987">
  <Metadata>
    <Id>576d1725-3fdd-45c3-b3c7-c574d7293dad</Id>
    <Id_History>56fc8661-2e0e-46c6-808a-b727c26d5c6b,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Log ADO.NET Exception Details on the Server</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>ADO.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Log ADO.NET Exception Details on the Server</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>ADO.NET 2.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>Log detailed ADO.NET exception information on the server. This information is essential for problem diagnosis.</p>
  <h1>Why</h1>
  <p>Exceptions contain critical information on problems which occur in production systems.&amp;nbsp; Logging them will help track down problems faster.</p>
  <h1>When</h1>
  <p>This is important guideline and should be followed all the time.</p>
  <h1>How</h1>
  <p>The following code shows a helper routine that you can use to log <b>SqlException</b> details to the application event log.</p>
  <pre>using System.Data;<br />using System.Data.SqlClient;<br />using System.Data.Diagnostics;<br />...<br />// Data Access method<br />public string RetrieveProductName( int productID )<br />{<br />&amp;nbsp; SqlConnection conn = null;<br />&amp;nbsp; // Enclose all data access code within a try block<br />&amp;nbsp; try<br />&amp;nbsp; {<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; conn = new SqlConnection(_connString);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; conn.Open();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; SqlCommand cmd = new SqlCommand("LookupProductName", conn );<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; cmd.CommandType = CommandType.StoredProcedure;</pre>
  <pre>&amp;nbsp;&amp;nbsp;&amp;nbsp; cmd.Parameters.Add("@ProductID", productID );<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; SqlParameter paramPN = <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cmd.Parameters.Add("@ProductName", SqlDbType.VarChar, 40 );<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; paramPN.Direction = ParameterDirection.Output;</pre>
  <pre>&amp;nbsp;&amp;nbsp;&amp;nbsp; cmd.ExecuteNonQuery();<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // The finally code is executed before the method returns<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; return paramPN.Value.ToString();&amp;nbsp; <br />&amp;nbsp; }<br />&amp;nbsp; catch (SqlException sqlex)<br />&amp;nbsp; {<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // Handle data access exception condition<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // Log specific exception details<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; LogException(sqlex);<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // Wrap the current exception in a more relevant<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // outer exception and re-throw the new exception<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; throw new DataAccessException(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "Unknown ProductID: " + productID.ToString(), sqlex );<br />&amp;nbsp; }<br />&amp;nbsp; catch (Exception ex)<br />&amp;nbsp; {<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // Handle generic exception condition . . .<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; throw ex;<br />&amp;nbsp; }<br />&amp;nbsp; finally<br />&amp;nbsp; {<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; if(conn != null) conn.Close(); // Ensures connection is closed<br />&amp;nbsp; }<br />}</pre>
  <pre>// Helper routine that logs SqlException details to the <br />// Application event log<br />private void LogException( SqlException sqlex )<br />{<br />&amp;nbsp; EventLog el = new EventLog();<br />&amp;nbsp; el.Source = "CustomAppLog";<br />&amp;nbsp; string strMessage;<br />&amp;nbsp; strMessage = "Exception Number : " + sqlex.Number + <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "(" + sqlex.Message + ") has occurred";<br />&amp;nbsp; el.WriteEntry( strMessage );</pre>
  <pre>&amp;nbsp; foreach (SqlError sqle in sqlex.Errors)<br />&amp;nbsp; {<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; strMessage = "Message: " + sqle.Message +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " Number: " + sqle.Number +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " Procedure: " + sqle.Procedure +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " Server: " + sqle.Server +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " Source: " + sqle.Source +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " State: " + sqle.State +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " Severity: " + sqle.Class +<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; " LineNumber: " + sqle.LineNumber;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; el.WriteEntry( strMessage );<br />&amp;nbsp; }<br />}  </pre>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>