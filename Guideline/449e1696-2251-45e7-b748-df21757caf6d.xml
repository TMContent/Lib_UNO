<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="965597428" Content_Hash="-1962202635">
  <Metadata>
    <Id>449e1696-2251-45e7-b748-df21757caf6d</Id>
    <Id_History>449e1696-2251-45e7-b748-df21757caf6d,d9d8a269-8804-48be-8bcd-b056264932b2,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Do Not Persist Authorization Cookies</Title>
    <Category>Authorization</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET</Technology>
    <Type>Code Example</Type>
    <DirectLink>Do Not Persist Authorization Cookies</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* ASP.NET


## Summary ##

Do not persist authorization cookies. Persistent authorization cookies will be stored in a user's profile and can be stolen if an attacker gets physical access to the machine.  This will also help prevent problems for users who access your application from public or shared machines and forget to log out.


## Solution Example ##

The following example shows a <roleManager> element configured to protect the authorization cookie.

~~~~
<roleManager enabled="true"
             cacheRolesInCookie="true"
             cookieName=".ASPROLES"
             cookieTimeout="30" 
             cookiePath="/"
             cookieRequireSSL="true"
             cookieSlidingExpiration="true"
             cookieProtection="All"
             createPersistentCookie="false">
</roleManager>
~~~~

---
Adapted from Microsoft patterns & practices guidance.]]></Data>
  </Content>
</TeamMentor_Article>