<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="965597428" Content_Hash="-1962202635">
  <Metadata>
    <Id>449e1696-2251-45e7-b748-df21757caf6d</Id>
    <Id_History>449e1696-2251-45e7-b748-df21757caf6d,d9d8a269-8804-48be-8bcd-b056264932b2,</Id_History>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>Do Not Persist Authorization Cookies</Title>
    <Category>Authorization</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Do Not Persist Authorization Cookies</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Do not persist authorization cookies. </p>
  <h1>Why</h1>
  <p>Persistent authorization cookies will be stored in a user's profile and can be stolen if an attacker gets physical access to the machine.&nbsp; This will also help prevent problems for users who access your application from public or shared machines and forget to log out. </p>
  <h1>When</h1>
  <p>All applications which use authorization cookies should ensure that they are not persisted. </p>
  <h1>How</h1>
  <p>The following example shows a &lt;roleManager&tg; element configured to protect the authorization cookie. </p>
  <pre>&lt;roleManager enabled="true"<br />             cacheRolesInCookie="true"<br />             cookieName=".ASPROLES"<br />             cookieTimeout="30" <br />             cookiePath="/"<br />             cookieRequireSSL="true"<br />             cookieSlidingExpiration="true"<br />             cookieProtection="All"<br />             createPersistentCookie="false"&gt;<br />&lt;/roleManager&gt;</pre>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>