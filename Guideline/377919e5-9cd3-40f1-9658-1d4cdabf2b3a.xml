<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-2143201203" Content_Hash="-1821907536">
  <Metadata>
    <Id>377919e5-9cd3-40f1-9658-1d4cdabf2b3a</Id>
    <Id_History>377919e5-9cd3-40f1-9658-1d4cdabf2b3a,4d9ee80d-39b3-4766-9208-8b1b92a3668c,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>Initialize All Variables Before Use</Title>
    <Category>Unmanaged Code</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Guideline</Type>
    <DirectLink>Initialize All Variables Before Use</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>C++</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>When declaring a new variable in your function, initialize the variable to a value before it is used.</p>
  <h1>Why</h1>
  <p>Unitialized variables may have garbage values in them that can cause your program to run unpredictably. Worse yet, variables which default initialize to 0 in a debugger may default to a garbage value in production causing your application to behave differently in a production environment than it does on your development machine.</p>
  <h1>When</h1>
  <p>When declaring new variables in&amp;nbsp;a function.</p>
  <h1>How</h1>
  <p>When declaring a new variable make sure it is initialized to a safe value before it is used. If its first use is to assign a value from some other operation, that is ok. If its first use is to be read for the purpose of a calculation, array index or other operation, make sure the initialization has occurred first.</p>
  <h1>Problem Example</h1>
  <p>In the following code the array is indexed with an uninitialized variable.</p>
  <pre>char&amp;#42; ArrayIndexing()<br />&amp;#123;<br />&amp;nbsp; int index;<br />  char &amp;#42;buffer = stringArray&amp;#91;index&amp;#93;;  <br />  return buffer;<br />&amp;#125;</pre>
  <h1>Solution Example</h1>
  <p>In the following code the array is indexed with an initialized variable.</p>
  <pre>char&amp;#42; ArrayIndexing()<br />&amp;#123;<br />&amp;nbsp; int index = 0;<br />  char &amp;#42;buffer = stringArray&amp;#91;index&amp;#93;;  <br />  return buffer;<br />&amp;#125;</pre>]]></Data>
  </Content>
</TeamMentor_Article>