<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="610108170" Content_Hash="625447046">
  <Metadata>
    <Id>2aa12bed-347a-43c6-a419-48ffd5bc3f5a</Id>
    <Id_History>2aa12bed-347a-43c6-a419-48ffd5bc3f5a,c0e32367-c2c1-4044-8a08-597ccf2d0d4a,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>[REDUNDANT] Protect Session IDs</Title>
    <Category>Session Management</Category>
    <Phase>Design</Phase>
    <Technology>Java</Technology>
    <Type>Guideline</Type>
    <DirectLink>Protect Session IDs</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>Java</li>
  </ul>
  <h1>What to Do</h1>
  <p>Protect session IDs, usually known as <em>JSESSIONID</em> in Java applications.</p>
  <h1>Why</h1>
  <p>Protecting session IDs helps protect user sessions from being hijacked.</p>
  <h1>How</h1>
  <p>To protect session IDs:</p>
  <ol>
    <li>
      <p>
        <strong>Store session IDs in cookies.</strong> This is the default behavior in most Java web applications. Cookies have to be turned on for this to work.</p>
    </li>
    <li>
      <p>
        <strong>Set the "<em>secure</em>" flag on session cookies.</strong> This is the default behavior in most Java web applications. TLS has to be turned on for this to work.</p>
    </li>
    <li>
      <p>
        <strong>Set the "<em>HTTPOnly</em>" flag on session cookies.</strong> Use the <em>setHttpOnly</em>&amp;nbsp;function to set the "<em>HTTPOnly</em>" flag on session cookies.</p>
    </li>
    <li>
      <p>
        <strong>Do not disclose session IDs.</strong> Make sure that session IDs are not disclosed in URLs, logs, or error messages. Do not allow URL rewriting of session cookies.</p>
    </li>
  </ol>]]></Data>
  </Content>
</TeamMentor_Article>