<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="30301063" Content_Hash="982559145">
  <Metadata>
    <Id>e30f71e8-a881-4a6c-93fa-e73c374ec145</Id>
    <Id_History>fc7f567f-bbfc-434c-aaa5-23d79b458605,</Id_History>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>Separate Account Administration from the Main Application Interface</Title>
    <Category>Authorization</Category>
    <Phase>Design</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Separate the account administration from the main application interface.</p>
  <h1>Why</h1>
  <p>Account administration requires higher privileges than the main application interface. Separating the two interfaces decreases the risk of a normal user being able to escalate privileges to that of an administrator.</p>
  <h1>When</h1>
  <p>If your application has an administrative interface, use this guideline to separate it from the main application interface.</p>
  <h1>How</h1>
  <p>Use the following steps when designing an administrative interface:</p>
  <ol>
    <li>
      <p>
        <strong>Only privileged users can administer all accounts</strong>: Design your application such that the administrative module is separate from the main application interface. Using separate authentication mechanisms in the application and the administration interface will reduce the risk for escalation of privilege attacks. Even if a privileged user account is compromised via session hijacking in the main application interface, the attacker will not be able to access the administrative interface and compromise other user accounts.</p>
      <p>Use session IDs for the administrative module that are different than the session IDs for the main interface. Modify the <strong>cookieName</strong> attribute inside the <strong>sessionState</strong> element of the respective <strong>web.config</strong> to differentiate the session names for each interface. Example:</p>
      <pre>&lt;system.web&gt;<br />    ...<br />    &lt;sessionState cookieName="MyAppAdminSess" /&gt;<br />    ...<br />&lt;/system.web&gt;</pre>
      <li>
        <p>
          <strong>Users may be allowed to administer their own accounts. </strong>It may be necessary to allow users to administer their own accounts. This involves the ability to change passwords, account details, etc. Such administration can be done through the main application interface. Because the user is modifying sensitive data, extra security precautions must be enforced:</p>
        <ul>
          <li>
            <strong>Track the user ID on the server-side</strong>: The user should always be tracked on the server-side. Store the user ID inside a session. The only data the client needs to know is the session identifier. This reduces the risk of an attacker modifying another user's account information.&gt; <li><strong>Force re-authentication</strong>: Enforce re-authentication when modifying the user's password. This helps verify that the user is aware of the password change and is not a victim of a session hijacking. Consult the <a href="/article/740a1606-d091-4a93-bfd8-f0d4226adbf1">Force Re-Authentication When Executing Critical Functionality</a> guideline for more details. <li><strong>Modify account in sections</strong>: Do not modify all account information at once. Split the account modification procedure in sections. For example, group the account information into credentials, personal data, contact information, and additional information. Modifying the account information in groups reduces the risk of information leakage when the user is updating his or her account. <li><strong>Use SSL when modifying account</strong>: The use of SSL provides encryption when transmitting sensitive data over the network and verifies the authenticity of the application to the user. Consult the <a href="/article/bd63d4b0-205d-4d95-9022-86a3f0af5232">Use SSL When Transmitting Credentials</a> guideline for more details.</li></li></li></li>
        </ul>
      </li>
    </li>
  </ol>
  <h1>Problem Example</h1>
  <p>The following snippet shows the HTTP requests that an administrator makes when accessing the main and administrative interfaces of the application. Because the administrative interface is not separated from the application, an administrator can use a single session to use and administer the application. Therefore, a vulnerability such as cross-site scripting in the main application interface will expose the administrative interface as well.</p>
  <h1>Solution Example</h1>
  <p>The following snippet shows the HTTP requests that an administrator makes when accessing the main and administrative interfaces of the application. Because the administrative interface is separated from the application via server directory and server port, an administrator would need to use two distinct sessions to use and administer the application. Therefore a vulnerability such as cross-site scripting in the main application interface will not expose the administrative interface.</p>
  <h1>Additional Resources</h1>
  <ul>
    <li>To learn more about the ASP.NET Session State, visit: <a href="http://msdn2.microsoft.com/en-us/library/ms178581(vs.80).aspx">Session State Overview</a>.</li>
  </ul>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/740a1606-d091-4a93-bfd8-f0d4226adbf1">Guideline: Force Re-Authentication When Executing Critical Functionality </a>
      <li>
        <a href="/article/bd63d4b0-205d-4d95-9022-86a3f0af5232">Guideline: Use SSL When Transmitting Credentials&amp;nbsp;</a>
        <li>
          <a href="/article/254ddab5-ecd2-4e05-a2b0-861e970bc0d9">Guideline: Protect Session Cookies </a>
          <li>
            <a href="/article/a5b7e377-103e-4805-a567-6092cbbaeba7">Guideline: Partition Application Between Public and Private Domains </a>
            <li>
              <a href="/article/a5b7e377-103e-4805-a567-6092cbbaeba7">Guideline: Partition Application Between Public and Private Domains&amp;nbsp;</a>
              <li>
                <a href="/article/862e51f1-a026-40f9-826b-7a65fa5dc563">Attack: HTTP Session Hijacking Attack</a>
                <li>
                  <a href="/article/08d9e9ed-bb8a-496a-b564-72344812d445">Checklist Item: Account Administration is Separated from the Main Application Interface</a>
                </li>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ul>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>