<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-942972959" Content_Hash="-1152051913">
  <Metadata>
    <Id>9ac62034-544b-462c-b768-649f8062debf</Id>
    <Id_History>a4519e80-dc08-4142-a4d7-7c3e51497977,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Revert Impersonation Using Finally Blocks</Title>
    <Category>Impersonation and Delegation</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Revert Impersonation Using Finally Blocks</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority> J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Andy Wigley, Kishore Gopalan</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>ASP.NET 2.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>Put the impersonation code inside try blocks. Use a catch block to handle exceptions and use a finally block to ensure that the impersonation is reverted as shown here. </p>
  <h1>Why</h1>
  <p>By using a finally block, you ensure that the impersonation token is removed from the current thread whether an exception is generated or not. Also be aware that if your code fails to catch exceptions, a malicious user could use exception filters to execute code that runs under the impersonated security context. This is particularly serious if your code impersonates a privileged account. If your code does not catch the exception, exception filters higher in the call stack are executed before code in your finally block is executed. </p>
  <h1>When</h1>
  <p>Whenever impersonation is used, it should catch and handle exceptions to ensure impersonation is reverted. </p>
  <h1>How</h1>
  <p>See the solution example for specific details on how this may be accomplished.&amp;nbsp;&amp;nbsp;</p>
  <h1>Solution Example</h1>
  <pre>using System.Security.Principal;<br />...<br />WindowsIdentity winIdentity = new WindowsIdentity("username@domainName");<br />WindowsImpersonationContext ctx = winIdentity.Impersonate();<br />try<br />{<br />&amp;nbsp; // Do work<br />}<br />catch(Exception ex)<br />{<br />&amp;nbsp; // Stop impersonating<br />&amp;nbsp; ctx.Undo();<br />}<br />finally<br />{<br />&amp;nbsp; // Stop impersonating<br />&amp;nbsp; ctx.Undo();<br />} <br /></pre>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>