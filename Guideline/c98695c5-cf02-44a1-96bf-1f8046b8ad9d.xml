<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1808044375" Content_Hash="-918018660">
  <Metadata>
    <Id>c98695c5-cf02-44a1-96bf-1f8046b8ad9d</Id>
    <Id_History>c98695c5-cf02-44a1-96bf-1f8046b8ad9d,9531b837-344a-432e-83fa-2f61bf5bb503,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Validate Input</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Code Example</Type>
    <DirectLink>Validate Input for Length, Range, Format, And Type</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>1</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* Java 


## Solution Example ##

~~~~
public boolean validateData(String input)
{
      String goodPattern = "(\\w|\\d)+";
      int goodLength = 10;
      if(input.length() > goodLength)
      {
            return false;
      }
      Pattern p = Pattern.compile(goodPattern);
      Matcher m = p.matcher(input);
            if(!m.matches())
      {
            return false;
      }
      else
      {
            return true;
      }
}
~~~~


## Guideline ##

* [Validate All Input](11a15f3a-7fe8-4e4c-be5e-309ab7227b3d)]]></Data>
  </Content>
</TeamMentor_Article>