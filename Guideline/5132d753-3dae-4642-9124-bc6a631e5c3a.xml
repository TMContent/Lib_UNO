<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1453097315" Content_Hash="871313349">
  <Metadata>
    <Id>5132d753-3dae-4642-9124-bc6a631e5c3a</Id>
    <Id_History>56a80749-3945-486f-a2e1-56943098f590,</Id_History>
    <Library_Id>c4b9cb6a-4561-4451-9b6c-4e59d73584f6</Library_Id>
    <Title>Integrate Security Activities into the Development Lifecycle</Title>
    <Category>Security Engineering</Category>
    <Phase>Design</Phase>
    <Technology> Any</Technology>
    <Type>Guideline</Type>
    <DirectLink>Integrate Security Activities into the Development Lifecycle</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Integrate security into your lifecycle. Make upfront security design, secure coding practices, and testing for security integral parts of your application development processes.</p>
  <h1>Why</h1>
  <p>Integrate security into your application development life cycle to design, build, and deploy secure applications.</p>
  <h1>When</h1>
  <p>If your current software engineering processes do not include specific security activities, it is possible to incrementally adopt the key security activities. The activities you should adopt first will depend on the security objectives you have identified, as well as any outstanding problems your process or application currently has.</p>
  <h1>How</h1>
  <p>For most organizations, the best results will come from adopting the activities in the following order:</p>
  <ol>
    <li>
      <p>
        <strong>Security Objectives.</strong> Define security objectives and requirements early in the process. Security objectives are goals and constraints that affect the confidentiality, integrity, and availability of your data and application.</p>
      <li>
        <p>
          <strong>Architecture and Design Review for Security.</strong> Bugs introduced in the design phase are the most expensive to deal with later. Introduce architecture and design reviews focused on security to avoid the need for costly rework later in the life cycle.</p>
        <li>
          <p>
            <strong>Threat Modeling.</strong> Adopt threat modeling to help you focus your security development efforts, improve the overall quality of your software engineering, ensure that you address relevant threats, and help your test teams create plans to test for specific vulnerabilities. Threat models also serve as a focus for communication among the various roles and help to ensure that developers and IT professionals alike really understand the application.</p>
          <li>
            <p>
              <strong>Code Review for Security.</strong> Inspect all code with emphasis on identifying security vulnerabilities. While design bugs are the most expensive, implementation bugs are the most common. Reviewing your code for security vulnerabilities can save you later rework or help avoid costly exploits.</p>
            <li>
              <p>
                <strong>Security Review for Deployment.</strong> Verify that weak or inappropriate configuration settings do not introduce security vulnerabilities when your application is being deployed. An application is only as secure as its weakest link. Even a highly effective process can be undone by a configuration error during deployment.</p>
              <li>
                <p>
                  <strong>Design Guidelines for Security.</strong> Use proven design practices, patterns, and principles to avoid many of the vulnerabilities introduced by poor design choices. By adopting proven design principles and learning from others mistakes you can ensure your application is secure from the start.</p>
                <li>
                  <p>
                    <strong>Security Testing.</strong> Use a risk-based approach and use the output from the threat modeling activity to help establish the scope of your testing activities and define your test plans.</p>
                </li>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ol>]]></Data>
  </Content>
</TeamMentor_Article>