<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1688950443" Content_Hash="753966246">
  <Metadata>
    <Id>a22be7b2-d1d9-44ad-8741-c75d70d03d1c</Id>
    <Id_History>a22be7b2-d1d9-44ad-8741-c75d70d03d1c,bc9f47da-a074-4f12-b0d2-cc1048f9fe39,</Id_History>
    <Library_Id>92718d53-36b2-47bc-b6f5-e60994385f46</Library_Id>
    <Title>Instrument Application for User Management Events</Title>
    <Category>Auditing and Logging</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink>Instrument Application for User Management Events</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Instrument your application for all user management events, including authentication successes and failures, password resets or changes, account lockouts, etc. </p>
  <h1>Why</h1>
  <p>Doing this helps you to detect and react to potentially suspicious behavior.&nbsp; It also enables you to gather operations data; for example, to track who is accessing your application and when user account passwords need to be reset.&nbsp;&nbsp;</p>
  <h1>When</h1>
  <p>All systems with authentication components should log when those components are used, both successfully and unsuccessfully. </p>
  <h1>How</h1>
  <p>By default, ASP.NET health monitoring records all <b>WebFailureAuditEvents</b>, which ASP.NET raises when user authentication fails in forms authentication with the membership system.&nbsp; ASP.NET also raises a <b>WebFailureAuditEvent</b> when authorization is not granted to a resource protected by file authorization and URL authorization. </p>
  <p />
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>