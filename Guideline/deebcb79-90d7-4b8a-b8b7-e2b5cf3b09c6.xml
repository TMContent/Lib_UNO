<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1366313488" Content_Hash="-216599619">
  <Metadata>
    <Id>deebcb79-90d7-4b8a-b8b7-e2b5cf3b09c6</Id>
    <Id_History>f921a9cb-5a23-40dd-82f3-c926d5446836,</Id_History>
    <Library_Id>51eb81c3-1d23-4146-ba83-8a6bb9233c11</Library_Id>
    <Title>Develop Applications Using Secure Coding Guidelines</Title>
    <Category>Deployment Considerations</Category>
    <Phase>Deployment</Phase>
    <Technology> Any</Technology>
    <Type>Guideline</Type>
    <DirectLink>Develop Applications Using Secure Coding Guidelines</DirectLink>
    <Tag />
    <Security_Demand />
    <Author>Serge Batchilo, Jason Taylor, Joe Basirico</Author>
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>PCI DSS Requirement 6.5 </li>
  </ul>
  <h1>What to Do</h1>
  <p>Develop applications using industry-standard secure coding guidelines. Train the development staff in secure coding techniques.</p>
  <h1>How</h1>
  <p>Perform the following actions to assure that you develop web applications using secure coding guidelines:</p>
  <ol>
    <li>
      <p>
        <strong>Document the software development processes. </strong>Design and document the development processes for applications. The actual processes depend on the application(s) and the environment. Include a requirement to train the development staff in secure software development practices. </p>
      <li>
        <p>
          <strong>Train the development staff in secure programming guidelines.&amp;nbsp;</strong>TeamProfessor&amp;nbsp;courses&amp;nbsp;provide the knowledge required to&amp;nbsp;develop secure applications.&amp;nbsp;</p>
        <li>
          <p>
            <strong>Prevent the&amp;nbsp;vulnerabilities explicitly mentioned by PCI DSS in your environment. </strong>Determine if and how each type of vulnerability applies to your application(s), and develop processes for preventing each type of&amp;nbsp;vulnerabilities. Design mitigation measures for each applicable type of vulnerability. See TeamMentor articles for help with mitigating each individual type of vulnerabilities:</p>
          <ul>
            <li>Injection flaws, especially SQL injection <li>Buffer overflows <li>Insecure cryptographic storage <li>Insecure communications <li>Improper error handling <li>All serious discovered vulnerabilities <li>Cross-site scripting <li>Improper access control <li>Cross-site request forgery vulnerabilities</li></li></li></li></li></li></li></li></li>
          </ul>
        </li>
      </li>
    </li>
  </ol>]]></Data>
  </Content>
</TeamMentor_Article>