<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1072882775" Content_Hash="38961884">
  <Metadata>
    <Id>fd675679-e8ad-40fc-bac4-d56fc440bc00</Id>
    <Id_History>fd675679-e8ad-40fc-bac4-d56fc440bc00,77f30e49-4a4e-4e06-80b2-91f22d841762,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Disable Directory Browsing</Title>
    <Category>Hardening</Category>
    <Phase>Deployment</Phase>
    <Technology>Java</Technology>
    <Type>How To</Type>
    <DirectLink>Disable Directory Browsing</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##
* Applications written using Servlets or JSP.


## What to Do ##

Disable directory browsing for your application's web directories.


## Why ##

Directory browsing allows an attacker to browse your application's directory structure in search of unprotected files and components.


## When ##

Disable directory browsing at all times.


## How ##

Use the following steps to successfully disable directory browsing:

1. **Identify if directory browsing is enabled.** Navigate to your application's directories. Identify whether your application's server correctly returns an HTTP error message. If it incorrectly returns the directory contents, continue with the following steps.
2. **Locate the default servlet's configuration.** Open your application's deployment descriptor (e.g. web.xml), and locate the default servlet's configuration. If the default servlet is present, it is mapped to the root directory of your application. Example:
	~~~~
	<servlet>
		  <servlet-name>default_servlet</servlet-name>
		  <servlet-class>
				org.apache.catalina.servlets.DefaultServlet
		  </servlet-class>
	</servlet>
	<servlet-mapping>
		  <servlet-name>default_servlet</servlet-name>
		  <url-pattern>/</url-pattern>
	</servlet-mapping>
	~~~~
3. **Deny directory browsing in the default servlet's configuration.** Initialize the default servlet with the parameter listings set to false. Example:
	~~~~
	<servlet>
		  <servlet-name>default_servlet</servlet-name>
		  <servlet-class>
				org.apache.catalina.servlets.DefaultServlet
		  </servlet-class>
	<init-param>
				<param-name>listings</param-name>
				<param-value>false</param-value>
		  </init-param>
	</servlet>
	<servlet-mapping>
		  <servlet-name>default_servlet</servlet-name>
		  <url-pattern>/</url-pattern>
	</servlet-mapping>
	~~~~
4. **Ensure your JSP files are located under the WEB-INF/ directory of your web application.** This ensures that an attacker cannot directly access those pages, however your application can perform internal forwards to these pages.


## Problem Example ##

An application is deployed on a production server. Unfortunately, the developers did not disable directory browsing. This allows an attacker to search for unprotected configuration files.


## Solution Example ##

An application is deployed on a production server. Because the developers have disabled directory browsing, it is difficult for an attacker to use HTTP browsing to search for unprotected configuration files.]]></Data>
  </Content>
</TeamMentor_Article>