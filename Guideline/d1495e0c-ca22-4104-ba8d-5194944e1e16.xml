<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1111139310" Content_Hash="1077209499">
  <Metadata>
    <Id>d1495e0c-ca22-4104-ba8d-5194944e1e16</Id>
    <Id_History>d1495e0c-ca22-4104-ba8d-5194944e1e16,fe6b4e51-d765-4a86-8ff8-f8a164c4a0bd,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Force Password Renewal</Title>
    <Category>Authentication</Category>
    <Phase>Design</Phase>
    <Technology>.NET</Technology>
    <Type>Code Example</Type>
    <DirectLink>Force Password Renewal</DirectLink>
    <Tag>ASP.NET,ASP.NET 4.0,ASP</Tag>
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* ASP.NET


## Summary ##

Force users to renew their passwords after a given period of time. Forcing users to renew their passwords reduces the risk of valid credentials becoming exposed.


## Problem Example ##

The following code is part of the application's authentication routine. Because the application fails to force the user to renew their password, it allows more time for an attacker to guess the user's password.

~~~~
<!-- The application's login control -->
<asp:Login ID="Login1" runat="server" DestinationPageUrl="~/Protected.aspx" />
 // The Page_Load method of Protected.aspxprotected 
void Page_Load(object sender, EventArgs e){}
~~~~


## Solution Example ##

The following code is part of the application's authentication routine. Because the application forces its users to renew their passwords, there is limited time for an attacker to guess the user's password.

~~~~
<!-- The application's login control -->
<asp:Login ID="Login1" runat="server" DestinationPageUrl="~/Protected.aspx" /> 
// The Page_Load method of Protected.aspxprotected 
void Page_Load(object sender, EventArgs e)
{    
  CheckPasswordMaturity();
} 
void CheckPasswordMaturity()
{    
  bool changePass = false;    
  string username = HttpContext.Current.User.Identity.Name;    
  MembershipProvider membershipProvider = Membership.Provider;    
  MembershipUser user = membershipProvider.GetUser(username, true);     
  TimeSpan diff = DateTime.Now - user.LastPasswordChangedDate;    
  if (Roles.IsUserInRole("Admin") && diff.Days >= 30)    
  {        
    changePass = true;    
  }     
  if (Roles.IsUserInRole("Users") && diff.Days >= 90)    
  {        
    changePass = true;    
  }     
  if (changePass)    
  {        
    HttpContext.Current.Response.Redirect("ChangePass.aspx", true);    
  }
}
~~~~

---
Adapted from Microsoft patterns & practices guidance.

]]></Data>
  </Content>
</TeamMentor_Article>