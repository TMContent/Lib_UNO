<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1592272971" Content_Hash="-1977801456">
  <Metadata>
    <Id>e4a3052e-13f2-4062-9a83-49185ff14b0a</Id>
    <Id_History>e4a3052e-13f2-4062-9a83-49185ff14b0a,4d2131dd-c52f-4832-84cb-5ab82e3c3f11,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Centralize Error Handling</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Design</Phase>
    <Technology>C++</Technology>
    <Type>Guideline</Type>
    <DirectLink>Centralize Error Handling</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>C++</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1>
  <p>Write a class or library dedicated to error handling. </p>
  <h1>Why</h1>
  <p>Centralized error handling is easier to test and implement correctly. Handling errors is important for security, so better error handling improves security.</p>
  <h1>When</h1>
  <p>Use the error handling class or library whenever error handling is necessary.</p>
  <h1>How</h1>
  <p>Perform the following actions to implement centralized error handling:</p>
  <ol>
    <li>
      <p>
        <strong>Identify existing error handling code.</strong> Review your code to find your existing error handling code. This code may be reused to write a centralized error handling subsystem.</p>
      <li>
        <p>
          <strong>Identify possible types of errors.</strong> Review your application design to identify possible errors that you don't already have error handling code for. This information will be used to write new error handling code.</p>
        <li>
          <p>
            <strong>Create a class for handling errors.</strong> Create a class or library for your centralized error handling code.</p>
          <li>
            <p>
              <strong>Move error handling code.</strong> Move your existing error handling code to the new centralized error handling class or library.</p>
            <li>
              <p>
                <strong>Add error handling code.</strong> Use information about errors and exceptions that may need to be handled to write functions to handle them.</p>
              <li>
                <p>
                  <strong>Replace error handling code.</strong> Replace your existing error and exception handling code with calls to the new centralized error handling functions.</p>
                <li>
                  <p>
                    <strong>Global exception handler.</strong> Write a handler for exceptions that are not handled by any other code specifically. Use the global exception handler throughout all code to catch exceptions when no other exception handler catches them.</p>
                  <li>
                    <p>
                      <strong>Use centralized error handling.</strong> When adding new functionality to the program, use the centralized error handling subsystem to handle errors and exceptions.</p>
                  </li>
                </li>
              </li>
            </li>
          </li>
        </li>
      </li>
    </li>
  </ol>
  <h1>Related Items</h1>
  <ul>
    <li>
      <a href="/article/69733f2b-b0d0-4b66-94b6-3135735b5779">Do Not Leave the System Vulnerable After Unrecoverable Errors</a>
      <li>
        <a href="/article/25d6522f-77d2-4f08-abee-88247a7b4118">Use C&#43;&#43; Exceptions Where Possible</a>
        <li>
          <a href="/article/5c0c50cf-d3ed-462c-8ec7-2eb96cf23680">Don't Reveal Sensitive Information in Error Messages</a>
        </li>
      </li>
    </li>
  </ul>]]></Data>
  </Content>
</TeamMentor_Article>