<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1640756633" Content_Hash="804612464">
  <Metadata>
    <Id>e7fd382a-c074-42e5-b02c-4d773627d23b</Id>
    <Id_History>e7fd382a-c074-42e5-b02c-4d773627d23b,61645ddf-942b-4ef2-84ae-4b84ecfb5f4f,</Id_History>
    <Library_Id>be5273b1-d682-4361-99d9-6234f2d47eb7</Library_Id>
    <Title>Don't Use User Input in Format Strings</Title>
    <Category>Dangerous APIs</Category>
    <Phase>Implementation</Phase>
    <Technology>C++</Technology>
    <Type>Guideline</Type>
    <DirectLink>Don't Use User Input in Format Strings</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="markdown">
    <Data><![CDATA[## Applies To ##

* C and C++

## What to Do ##

Don't use user input in format strings. Use C++ stream functions to avoid using formatted input-output functions, if possible. (Re-)Write code to guarantee that user input is never used in format strings.

## Why ##

An attacker that can control the contents of a format string may be able to execute arbitrary code.

## When ##

Avoid using user input in format strings when using formatted input-output functions.

## How ##

Perform the following actions to assure that user input is not used in format strings:

1. **Identify code that uses formatted input-output functions.** The following is a list of formatted input-output functions:

        sprintf
        _snprintf
        printf
        fprintf
        scanf 
        fscanf
        sscanf
        swprintf
        wsprintfA
        wsprintfW
        vsprintf
        vswprintf
        _snwprintf
        _vsnprintf
        _vsnwprintf
        vprintf
        vwprintf
        vfprintf
        vwfprintf
        fwscanf
        wscanf
        swscanf

2. **Avoid using formatted functions.** Consider replacing formatted input-output functions with iostream C++ functions, which are not prone to format string vulnerabilities.

3. **(Re-)Write code to exclude user input from format strings.** Place user input in separate variables and pass it as variadic arguments to the formatted input-output functions, instead of placing it in a format strings.

## Additional Resources ##

For more information about excluding user input from format strings, please see [https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings](https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings)
]]></Data>
  </Content>
</TeamMentor_Article>