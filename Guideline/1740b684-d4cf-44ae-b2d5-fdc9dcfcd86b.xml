<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-289959" Content_Hash="-876953637">
  <Metadata>
    <Id>1740b684-d4cf-44ae-b2d5-fdc9dcfcd86b</Id>
    <Id_History>24fe2937-0f38-4429-9618-b1ccd2743b5c,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>In ASP.NET, Use a Generic Error Page</Title>
    <Category>Error and Exception Management</Category>
    <Phase>Implementation</Phase>
    <Technology>ADO.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>In ASP.NET, Use a Generic Error Page</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Chaitanya Bijwe</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>ADO.NET 2.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>In ASP.NET applications, use a generic error page that is displayed for all unhandled exceptions. Define an application-level global error handler in Global.asax to catch any exceptions that are not handled in code.</p>
  <h1>Why</h1>
  <p>Exceptions contain debugging information that could constitute an information disclosure. using generic error helps&amp;nbsp;to avoid accidentally returning detailed error information to the client.</p>
  <h1>When</h1>
  <p>This is important guideline and should be followed all the time when developing ASP.NET applications</p>
  <h1>How</h1>
  <p>Define an application-level global error handler in Global.asax to catch any exceptions that are not handled in code. Do this to avoid accidentally returning detailed error information to the client. You should log all exceptions in the event log to record them for tracking and later analysis. Use code similar to the following.</p>
  <pre>&lt;%@ Application Language="C#" %&gt;<br />&amp;nbsp;&lt;%@ Import Namespace="System.Diagnostics" %&gt;<br />&amp;nbsp;<br />&amp;nbsp;&lt;script language="C#" runat="server"&gt;<br />&amp;nbsp;void Application_Error(object sender, EventArgs e)<br />&amp;nbsp;{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; //get reference to the source of the exception chain<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; Exception ex = Server.GetLastError().GetBaseException();<br />&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // log the details of the exception and page state to the<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // event log.<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; EventLog.WriteEntry("My Web Application",<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "MESSAGE: " + ex.Message + <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "\nSOURCE: " + ex.Source, <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; EventLogEntryType.Error);<br />&amp;nbsp;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // Optional e-mail or other notification here...<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; // display generic error pages<br />&amp;nbsp;}<br />&amp;nbsp;&lt;/script&gt; </pre>
  <br />
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>