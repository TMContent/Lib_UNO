<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-1779074220" Content_Hash="-1228511792">
  <Metadata>
    <Id>9bf37ec4-93f3-4998-8141-e2229ce731a2</Id>
    <Id_History>48bffb51-b026-407e-97b2-5019d3ca8cda,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Use Read-only Properties Appropriately</Title>
    <Category>Design Considerations</Category>
    <Phase>Implementation</Phase>
    <Technology>.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Use Read-only Properties Appropriately</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Srinath Vasireddy, Ashish Babbar, Rico Mariani, and Alex Mackman</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>.NET 2.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>Mark properties read-only unless the caller needs to be able to make a modification. </p>
  <h1>Why</h1>
  <p>This prevents a caller from accidentally modifying a field.</p>
  <h1>When</h1>
  <p>This is important guideline and should be followed all the time. Do not expose your fields to caller modification unless absolutely necessary. </p>
  <h1>How</h1>
  <p>Mark properties read-only unless the caller needs to be able to make a modification. </p>
  <p>
    <strong>Note</strong>&amp;nbsp;&amp;nbsp;&amp;nbsp;Read-only properties are enforced at compile time only. When malicious code runs in a full trust environment, it could use reflection or unmanaged pointers to bypass these visibility restrictions.</p>
  <p>Here is an example of using read-only property, the employeeName can be set in the constructor of the class or while initalizing it.</p>
  <pre>public class Employee<br />{<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; private readonly string employeeName;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; public string Name<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; {<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; get<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; { <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return this.employeeName; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; <br />&amp;nbsp;&amp;nbsp;&amp;nbsp; }<br />}</pre>
  <br />
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>