<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-483434240" Content_Hash="-272541500">
  <Metadata>
    <Id>ac94abdd-9e11-4231-857c-86d0095bdcdc</Id>
    <Id_History>ac94abdd-9e11-4231-857c-86d0095bdcdc,76eb2f5e-f49c-4411-86da-a59947086043,</Id_History>
    <Library_Id>26bd1a04-beed-4a66-917d-b6ab0a7d634c</Library_Id>
    <Title>Use Absolute URLs for Navigating Secure Pages</Title>
    <Category>Communication Security</Category>
    <Phase>Design</Phase>
    <Technology>ASP.NET 4.0</Technology>
    <Type>Guideline</Type>
    <DirectLink>Use Absolute URLs for Navigating Secure Pages</DirectLink>
    <Tag />
    <Security_Demand />
    <Author />
    <Priority />
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies To</h1>
  <ul>
    <li>ASP.NET 4.0</li>
  </ul>
  <h1>What to Do</h1>
  <p>Absolute URLs are used for navigation where the site is partitioned with secure and non-secure folders. </p>
  <h1>Why</h1>
  <p>Navigating between the public and restricted areas of your site (that is, between HTTP and HTTPS pages) is an issue because a redirect always uses the protocol (HTTPS or HTTP) of the current page, not the target page.</p>
  <h1>How</h1>
  <p>Use the following guidelines when&amp;nbsp;implementing navigation&amp;nbsp;on a site that uses SSL:</p>
  <ol>
    <li>
      <p>
        <strong>Use absolute URLs when navigating from secure pages. </strong>After a user logs on and browses pages in a directory that is secured with SSL, relative links such as "<em>..\publicpage.aspx</em>" or redirects to HTTP pages result in the pages being served using the HTTPS protocol, which incurs an unnecessary performance overhead. To avoid this, use absolute links such as "<em>http://servername/appname/publicpage.aspx</em>" when redirecting from an HTTPS page to an HTTP page.</p>
    </li>
    <li>
      <p>
        <strong>Use absolute URLs when redirecting to secure pages.</strong>&amp;nbsp;Similarly, when you redirect to a secure page (for example, the logon page) from a public area of your site, you must use an absolute HTTPS path, such as "<em>https://servername/appname/secure/login.aspx</em>" instead of a relative path, such as "<em>restricted/login.aspx</em>". For example, if your Web page provides a logon button, use the following code to redirect to the secure login page.</p>
      <pre>private void btnLogon_Click( object sender, System.EventArgs e )<br />{<br />  // Form an absolute path using the server name and virtual directory name  <br />  string serverName =<br />   HttpUtility.UrlEncode(Request.ServerVariables["SERVER_NAME"]);  <br />   string vdirName = Request.ApplicationPath;<br />   Response.Redirect("https://" +<br />    serverName + vdirName + "/Restricted/Login.aspx");<br />}</pre>
    </li>
  </ol>
  <hr />
  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>