<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="405357804" Content_Hash="2035251165">
  <Metadata>
    <Id>c4a7b105-1651-4e2e-9d74-965a10b243b1</Id>
    <Id_History>8b79f29d-0962-440b-9099-f5bd0688ce1b,</Id_History>
    <Library_Id>ea854894-8e16-46c8-9c61-737ef46d7e82</Library_Id>
    <Title>Do Not Rely on Request Validation</Title>
    <Category>Input and Data Validation</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 2.0</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>J.D. Meier, Alex Mackman, Blaine Wastell, Prashant Bansode, Andy Wigley, Kishore Gopalan</Priority>
    <Status />
    <Source>SI</Source>
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1>
  <ul>
    <li>ASP.NET 2.0 </li>
  </ul>
  <h1>What to Do</h1>
  <p>The ASP.NET request validation feature performs basic input validation.&nbsp; Do not rely on it.&nbsp; Use it as an extra precautionary measure in addition to your own input validation.</p>
  <h1>Why</h1>
  <p>Only you can define what represents good input for your application.&nbsp; Furthermore, while request validation will catch some attacks, it is easy to circumvent. </p>
  <h1>When</h1>
  <p>Never rely on request validation under any circumstances. Always manually validate all input against the expected format, encode all output based on a white-list and according to context, and carefully use parameters in other situations where input and control flow are mixed, like SQL statements. </p>
  <h1>How</h1>
  <p>Request validation is enabled by default.&nbsp; You can see this by examining the <b>validateRequest</b> attribute, which is set to true on the <b>&lt;pages&gt;</b> element in the <b>Machine.config.comments</b> file.&nbsp; Ensure that it is enabled for all pages except those that need to accept a range of HTML elements.&nbsp; If you need to disable it for a page, set the <b>ValidateRequest</b> attribute to <b>false</b> by using the <b>&#64;Page</b> directive. </p>
  <p>&nbsp;</p>
  <p>In order to ensure that you are handling user data correctly, ensure that you're following all of these steps: </p>
  <ol>
    <li>Always validate input as strictly as possible against the expected input format via regular expressions. <li>Always encode output by whitelist; any character not on the whitelist for the context you're outputing to should be encoded appropriately for the context.&nbsp; Make sure that your whitelist contains only known safe characters for the context you're in. <li>Ensure that all queries are fully parameterized, especially if they use user input. <li>Do not make any security decisions based on user input. <li>Do not allow users to input filenames or paths. </li></li></li></li></li>
  </ol>
  <h1>Problem Example</h1>
  <p>An ASP.NET application uses forms authentication and relies on request validation to validate the form of the username, user group, and password.&nbsp; Users are allowed to define new groups, which are then displayed on the login page.&nbsp; Request validation doesn't check the inputs for length, range, format, or type, and doesn't sufficiently strip out all cross-site scripting attacks.&nbsp; This permits a malicious user to embed javascript in their group name, causing all users who attempt to log into the system to be subject to cross-site scripting. </p>
  <p />
  <h1>Solution Example</h1>
  <p>An ASP.NET application uses forms authentication and uses request validation in concert with custom validators&nbsp;to check the format, length, range, and type&nbsp;of the username, user group, and password.&nbsp; Users are allowed to define new groups, which are then displayed on the login page, but group names are limited to one word of no more than twenty alphabetic characters.&nbsp; Malicious users can create group names but cannot embed javascript in them, preventing any cross-site scripting attacks.</p>
  <hr />
  <p>Adapted from Microsoft patterns & practices guidance.</p>]]></Data>
  </Content>
</TeamMentor_Article>